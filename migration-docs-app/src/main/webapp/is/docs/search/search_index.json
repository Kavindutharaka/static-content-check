{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"page-not-found/","title":"Page not found","text":"<p> Page Not Found <p>Sorry, but the page you are looking for does not exist, has been removed, renamed, or is temporarily unavailable. Please try using one of the navigation links above or the search bar in the top right corner.</p> <p>For further inquiries, reach us at the <code>help-asgardeo</code> channel in the WSO2 Discord server.             Alternatively, you can reach out to the Asgardeo support team.</p> </p>"},{"location":"identity-server/","title":"Migration resources for WSO2 Identity Server","text":"<p>This directory contains the migration documentation and resources for WSO2 Identity Server.</p>"},{"location":"identity-server/#migration-docs","title":"Migration Docs","text":"<p>See the instructions given below to get the migration docs (markdown files) that are required for each migration scenario.</p> <ul> <li>Go to the <code>identity-server/migration-docs</code> folder and select the version number to find the migration docs of each version.</li> <li>Depending on from which prior version you are migrating, you need the following docs to identify the changes between versions:<ul> <li>All previous IS versions upto IS 5.7.0 has a What has changed document, which details the changes between version.</li> <li>All IS versions prior 5.7.0 has a Configuration Changes - WSO2 IS v1 to v2 document, which details the changes between the versions.</li> </ul> </li> </ul>"},{"location":"identity-server/#migration-resources","title":"Migration Resources","text":"<p>See the instructions given below to get the migration client, DB scripts, and other resources required.</p>"},{"location":"identity-server/#migration-client","title":"Migration client","text":"<p>To get the migration client for WSO2 IS, go to the migration-resources repository and download the latest release.</p> <p>The above migration client applies to the following migration docs:</p> <ul> <li>Older versions (pre-5.7.0) to 5.8.0</li> <li>5.7.0 to 5.8.0</li> <li>5.9.0</li> <li>5.10.0</li> <li>5.11.0</li> <li>6.0.0</li> <li>6.1.0</li> </ul>"},{"location":"identity-server/#scripts","title":"Scripts","text":"<p>To get the DB scripts and other scripts that are referred from the migration docs, go to the <code>identity-server/migration-resources</code> folder and select the required version (to which the customer is migrating).</p>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-custom-scope-validators/","title":"Migrating Custom Scope Validators","text":"<p>warning</p> <p>This section is only applicable if you are migrating from WSO2 Identity server 5.4.1 or older,      and only if you have added a custom scope validator in that version.</p> <p>WSO2 Identity Server 5.5.0 and later versions support configuring scope validators for a service provider. If you take a look at support for configuring scope validators in previous versions of WSO2 Identity Server (WSO2 IS), you will understand that,</p> <ul> <li>WSO2 Identity Server 5.4.0 and 5.4.1 supported setting JDBC Scope     validators as a global configuration, but did not\u00a0support     configuring scope validators for a service provider. WSO2 Identity     Server 5.4.0 and 5.4.1 also\u00a0allowed you to create custom scope     validators\u00a0depending on your requirement.</li> <li>Versions older that\u00a0WSO2 Identity Server 5.4.0 did not\u00a0support     configuring scope validators, but allowed you to create custom scope     validators depending on your requirement.</li> </ul> <p>Therefore, if you have added any custom scope validators to your existing version of WSO2 IS, and you want to migrate those custom scope validators to IS 5.10.0, follow the instructions below:</p> <p>tip</p> <p>The instructions you need to follow to migrate your custom scope validators can vary depending on your implementation. You may not need to follow all the steps below in the same order. Be sure to follow the appropriate steps depending on your implementation.</p> <ol> <li> <p>If you have extended the <code>OAuth2ScopeValidator</code>     and implemented your own scope validator, implement a new method     called <code>getValidatorName()</code> . The name that you     specify as\u00a0the new method will be used in the database and the     Management Console user interface.</p> <p>note</p> <p>If you do not implement a new method, the canonical name of the     class will be used in the database and the Management Console user     interface.</p> </li> <li> <p>If you have custom scope validators that you have configured     globally, and you want to configure those scope validators in all     service providers in WSO2 IS 5.10.0, add the following snippet to the     appropriate migration script in the     <code>&lt;IS5.10.0_MIGRATION_TOOL_HOME&gt;/migration-resources/migration-resources/5.5.0/dbscripts/step2/identity</code>     directory.</p> <pre><code>INSERT INTO IDN_OAUTH2_SCOPE_VALIDATORS (APP_ID, SCOPE_VALIDATOR)\nSELECT IDN_OAUTH_CONSUMER_APPS.ID, '&lt;scopeValidatorName&gt;'\nFROM IDN_OAUTH_CONSUMER_APPS;\n</code></pre> <p>note</p> <ul> <li>If you have configured JDBC scope validators in IS 5.4.x, and you want to configure those JDBC scope validators in all service providers in latest version, replace the <code>&lt;scopeValidatorName&gt;</code> place holder in the above snippet with <code>Role based scope validator</code>.</li> <li>If you have specified a name for the scope validator in step 1, then replace the <code>&lt;scopeValidatorName&gt;</code> place holder in the above snippet with that name. If you have not specified a name for the scope validator, you can use the canonical name of your custom scope validator class to replace the <code>&lt;scopeValidatorName&gt;</code> place holder in the above snippet.</li> </ul> </li> <li> <p>If you want to use the XACML based scope validator introduced in     WSO2 IS 5.5.0 together with your custom scope validators, add the     following configuration to the <code>deployment.toml</code> file in the <code>&lt;IS_HOME&gt;/repository/conf/</code> folder:</p> <pre><code>[oauth.scope_validator.xacml]\nenable = true\n</code></pre> </li> </ol>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-data-publishers/","title":"Migrating Data Publishers","text":"<p>In prior versions of WSO2 Identity Server, data publishers were implementations of the AbstractAuthenticationDataPublisher which were invoked iteratively by the AuthnDataPublisherProxy when a session changes, such that the data publishers send events to their corresponding destinations. From WSO2 Identity Server 5.8.0 onwards, all data publishers have been migrated to act as event handlers that subscribe to authentication events.</p> <p>One of the main reasons for this is because the current implementation causes the DASSessionDataPublisherImpl, AuthenticationAuditLogger and DASLoginDataPublisherImpl classes to unnecessarily implement all the methods of the AbstractAuthenticationDataPublisher.  This change provides the capability for the data publishers to subscribe only to the relevant events of interest and act upon them.</p> <p>The new design approach is as follows:</p> <ul> <li> <p>When a session changes, the identity-framework publishes an event to     the <code>AuthnDataPublisherProxy</code>.</p> </li> <li> <p><code>AuthnDataPublisherProxy</code> uses the <code>IdentityEventService</code> in     the\u00a0identity framework to invoke corresponding handlers to handle     the event.</p> </li> <li> <p>These event handlers extend the     AbstractEventHandler     and override its <code>handleEvent</code> method.</p> </li> </ul> <p>The following diagrams illustrate the difference between the design approach in the versions prior to WSO2 IS 5.8.0 and the new design approach.</p> <ul> <li>Old design approach </li> <li>New design approach </li> </ul> <p>The following section will guide you through migrating an existing data publisher to an event handler.</p>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-data-publishers/#migrating-data-publisher-to-event-handler","title":"Migrating data publisher to event handler","text":"<p>For the purposes of demonstrating this using an example, the steps given in this tutorial demonstrate deprecating the DASSessionDataPublisherImpl and migrating it to use the AnalyticsSessionDataPublishHandler instead.</p> <ol> <li> <p>If you have enabled <code>org.wso2.carbon.identity.data.publisher.application.authentication.impl.DASSessionDataPublisherImpl</code>     in <code>&lt;OLD_IS_HOME&gt;/repository/conf/identity.xml</code> do not enable it in     the WSO2 Identity Server 5.10.0 configurations. Simply, skip     migrating this particular configuration and it will disable the old     event listener.</p> <p>note </p> <p>For the new configuration model introduced in WSO2 Identity Server 5.9.0, see New Configuration Model for more information.</p> <p>If you already have a WSO2 subscription, reach out to our support team through your support account for assiatance.</p> </li> <li> <p>In order to support backward compatibility, override the <code>isEnabled</code>     method in the event handler class that extends the     <code>AbstractEventHandler</code>, such that if the listener property is not     defined in the <code>deployment.toml</code> (previously in <code>identity.xml</code>) it     will return false.</p> <pre><code>    @Override\npublic boolean isEnabled(MessageContext messageContext) {\nIdentityEventListenerConfig identityEventListenerConfig = IdentityUtil.readEventListenerProperty\n(AbstractIdentityMessageHandler.class.getName(), this.getClass().getName());\n\nif (identityEventListenerConfig == null) {\nreturn false;\n}\n\nreturn Boolean.parseBoolean(identityEventListenerConfig.getEnable());\n}\n</code></pre> </li> <li> <p>To enable the new event handler, add handler and relevant property     to the <code>deployment.toml</code> file found in the      <code>&lt;NEW_IS_HOME&gt;/repository/conf</code> folder. For example, following     property is added to enable the     AnalyticsSessionDataPublishHandler     .</p> <pre><code>[identity_mgt.events.schemes.analyticsSessionDataPublisher.properties]\nenable = true\n</code></pre> <p>note </p> <p>For more information on new configurations, see New Configuration Model.</p> </li> <li> <p>Add the following method to the event handler in order to verify     that the handler is enabled properly. Adjust the code according to     the relevant handler.</p> <pre><code>    private boolean isAnalyticsSessionDataPublishingEnabled(Event event) throws IdentityEventException {\n\nboolean isEnabled = false;\n\nString handlerEnabled = this.configs.getModuleProperties().getProperty(SessionDataPublisherConstants.\nANALYTICS_SESSION_DATA_PUBLISHER_ENABLED);\nisEnabled = Boolean.parseBoolean(handlerEnabled);\n\nreturn isEnabled;\n}\n</code></pre> </li> <li> <p>One of the main reasons to deprecate the implementation of data     publishers is that these data publishers override all the methods of     <code>AbstractAuthenticationDataPublisher</code> . Due to     this redundancy, this implementation has been changed such that     these publishers get subscribed only to their relevant event. Adjust     the implementation accordingly as shown in the example below.</p> <pre><code>    @Override\npublic void publishAuthenticationStepSuccess(HttpServletRequest request, AuthenticationContext context,\nMap&lt;String, Object&gt; params) {\n// This method is overridden to do nothing since this is a session data publisher.\n}\n\n@Override\npublic void publishAuthenticationStepFailure(HttpServletRequest request, AuthenticationContext context,\nMap&lt;String, Object&gt; params) {\n// This method is overridden to do nothing since this is a session data publisher.\n}\n\n@Override\npublic void publishAuthenticationSuccess(HttpServletRequest request, AuthenticationContext context, Map&lt;String,\nObject&gt; params) {\n// This method is overridden to do nothing since this is a session data publisher.\n}\n\n@Override\npublic void publishAuthenticationFailure(HttpServletRequest request, AuthenticationContext context, Map&lt;String,\nObject&gt; params) {\n// This method is overridden to do nothing since this is a session data publisher.\n}\n\n@Override\npublic void doPublishAuthenticationStepSuccess(AuthenticationData authenticationData) {\n// This method is not implemented since there is no usage of it in session publishing\n}\n\n@Override\npublic void doPublishAuthenticationStepFailure(AuthenticationData authenticationData) {\n// This method is not implemented since there is no usage of it in session publishing\n}\n\n@Override\npublic void doPublishAuthenticationSuccess(AuthenticationData authenticationData) {\n// This method is not implemented since there is no usage of it in session publishing\n}\n\n@Override\npublic void doPublishAuthenticationFailure(AuthenticationData authenticationData) {\n// This method is not implemented since there is no usage of it in session publishing\n}\n\n@Override\npublic void doPublishSessionCreation(SessionData sessionData) {\nif (LOG.isDebugEnabled()) {\nLOG.debug(\"Publishing session creation to DAS\");\n}\npublishSessionData(sessionData, AuthPublisherConstants.SESSION_CREATION_STATUS);\n}\n\n@Override\npublic void doPublishSessionTermination(SessionData sessionData) {\nif (LOG.isDebugEnabled()) {\nLOG.debug(\"Publishing session termination to DAS\");\n}\npublishSessionData(sessionData, AuthPublisherConstants.SESSION_TERMINATION_STATUS);\n\n}\n\n@Override\npublic void doPublishSessionUpdate(SessionData sessionData) {\nif (LOG.isDebugEnabled()) {\nLOG.debug(\"Publishing session update to DAS\");\n}\npublishSessionData(sessionData, AuthPublisherConstants.SESSION_UPDATE_STATUS);\n}\n</code></pre> </li> <li> <p>Override the <code>handleEvent</code> method as seen in     the example below.     For example, as seen in the implementation of the     DASSessionDataPublisherImpl     shown above, it publishes data only for the following three events.</p> <ul> <li> <p>Session Create</p> </li> <li> <p>Session Terminate</p> </li> <li> <p>Session Update</p> </li> </ul> <p>This means that the the event handler written for this data publisher should only handle the events mentioned above. Therefore, the AnalyticsSessionDataPublishHandler is implemented to override the <code>handleEvent</code> method as follows.</p> <pre><code>    @Override\npublic void handleEvent(Event event) throws IdentityEventException {\n\nboolean isEnabled = isAnalyticsSessionDataPublishingEnabled(event);\n\nif (!isEnabled) {\nreturn;\n}\n\nSessionData sessionData = SessionDataPublisherUtil.buildSessionData(event);\nif (IdentityEventConstants.EventName.SESSION_CREATE.name().equals(event.getEventName())) {\ndoPublishSessionCreation(sessionData);\n} else if (IdentityEventConstants.EventName.SESSION_TERMINATE.name().equals(event.getEventName())) {\ndoPublishSessionTermination(sessionData);\n} else if (IdentityEventConstants.EventName.SESSION_UPDATE.name().equals(event.getEventName())) {\ndoPublishSessionUpdate(sessionData);\n} else {\nLOG.error(\"Event \" + event.getEventName() + \" cannot be handled\");\n}\n}\n</code></pre> <p>note</p> <p>As shown above, in order to invoke the corresponding publishing method, you must first verify whether the handler is enabled or not. The <code>buildSessionData</code> method of the     SessionDataPublisherUtil     is introduced to create a session data object to populate the payload of the relevant event.</p> </li> <li> <p>Next, populate the event payload of the event handler\u00a0and publish it     to the Analytics Engine. In this example, similar to the     implementation of the     DASSessionDataPublisherImpl     , the event payload of the     AnalyticsSessionDataPublishHandler     is populated and published. The final implementation of the     AnalyticsSessionDataPublishHandler     class is as follows.</p> <pre><code>    public class AnalyticsSessionDataPublishHandler extends AbstractEventHandler {\n\nprivate static final Log LOG = LogFactory.getLog(AnalyticsSessionDataPublishHandler.class);\n\n@Override\npublic String getName() {\n\nreturn SessionDataPublisherConstants.ANALYTICS_SESSION_PUBLISHER_NAME;\n}\n\n@Override\npublic void handleEvent(Event event) throws IdentityEventException {\n\nboolean isEnabled = isAnalyticsSessionDataPublishingEnabled(event);\n\nif (!isEnabled) {\nreturn;\n}\n\nSessionData sessionData = SessionDataPublisherUtil.buildSessionData(event);\nif (IdentityEventConstants.EventName.SESSION_CREATE.name().equals(event.getEventName())) {\ndoPublishSessionCreation(sessionData);\n} else if (IdentityEventConstants.EventName.SESSION_TERMINATE.name().equals(event.getEventName())) {\ndoPublishSessionTermination(sessionData);\n} else if (IdentityEventConstants.EventName.SESSION_UPDATE.name().equals(event.getEventName())) {\ndoPublishSessionUpdate(sessionData);\n} else {\nLOG.error(\"Event \" + event.getEventName() + \" cannot be handled\");\n}\n}\n\nprotected void doPublishSessionCreation(SessionData sessionData) {\n\npublishSessionData(sessionData, SessionDataPublisherConstants.SESSION_CREATION_STATUS);\n}\n\nprotected void doPublishSessionTermination(SessionData sessionData) {\n\npublishSessionData(sessionData, SessionDataPublisherConstants.SESSION_TERMINATION_STATUS);\n\n}\n\nprotected void doPublishSessionUpdate(SessionData sessionData) {\n\npublishSessionData(sessionData, SessionDataPublisherConstants.SESSION_UPDATE_STATUS);\n}\n\nprotected void publishSessionData(SessionData sessionData, int actionId) {\n\nSessionDataPublisherUtil.updateTimeStamps(sessionData, actionId);\ntry {\nObject[] payloadData = createPayload(sessionData, actionId);\npublishToAnalytics(sessionData, payloadData);\n\n} catch (IdentityRuntimeException e) {\nif (LOG.isDebugEnabled()) {\nLOG.error(\"Error while publishing session information\", e);\n}\n}\n\n}\n\nprivate void publishToAnalytics(SessionData sessionData, Object[] payloadData) {\n\nString[] publishingDomains = (String[]) sessionData.getParameter(AuthPublisherConstants.TENANT_ID);\nif (publishingDomains != null &amp;&amp; publishingDomains.length &gt; 0) {\ntry {\nFrameworkUtils.startTenantFlow(MultitenantConstants.SUPER_TENANT_DOMAIN_NAME);\nfor (String publishingDomain : publishingDomains) {\nObject[] metadataArray = AuthnDataPublisherUtils.getMetaDataArray(publishingDomain);\norg.wso2.carbon.databridge.commons.Event event =\nnew org.wso2.carbon.databridge.commons.Event(SessionDataPublisherConstants.\nSESSION_DATA_STREAM_NAME, System.currentTimeMillis(),\nmetadataArray, null, payloadData);\nSessionDataPublishServiceHolder.getInstance().getPublisherService().publish(event);\nif (LOG.isDebugEnabled() &amp;&amp; event != null) {\nLOG.debug(\"Sending out to publishing domain:\" + publishingDomain + \" \\n event : \"\n+ event.toString());\n}\n}\n} finally {\nFrameworkUtils.endTenantFlow();\n}\n}\n}\n\nprivate Object[] createPayload(SessionData sessionData, int actionId) {\n\nObject[] payloadData = new Object[15];\npayloadData[0] = AuthnDataPublisherUtils.replaceIfNotAvailable(AuthPublisherConstants.CONFIG_PREFIX +\nAuthPublisherConstants.SESSION_ID, sessionData.getSessionId());\npayloadData[1] = sessionData.getCreatedTimestamp();\npayloadData[2] = sessionData.getUpdatedTimestamp();\npayloadData[3] = sessionData.getTerminationTimestamp();\npayloadData[4] = actionId;\npayloadData[5] = AuthnDataPublisherUtils.replaceIfNotAvailable(AuthPublisherConstants.CONFIG_PREFIX +\nAuthPublisherConstants.USERNAME, sessionData.getUser());\npayloadData[6] = AuthnDataPublisherUtils.replaceIfNotAvailable(AuthPublisherConstants.CONFIG_PREFIX +\nAuthPublisherConstants.USER_STORE_DOMAIN, sessionData.getUserStoreDomain());\npayloadData[7] = sessionData.getRemoteIP();\npayloadData[8] = AuthPublisherConstants.NOT_AVAILABLE;\npayloadData[9] = sessionData.getTenantDomain();\npayloadData[10] = sessionData.getServiceProvider();\npayloadData[11] = sessionData.getIdentityProviders();\npayloadData[12] = sessionData.isRememberMe();\npayloadData[13] = sessionData.getUserAgent();\npayloadData[14] = System.currentTimeMillis();\n\nif (LOG.isDebugEnabled()) {\nLOG.debug(\"The created payload :\" + Arrays.asList(payloadData));\n}\nreturn payloadData;\n}\n\n@Override\npublic boolean isEnabled(MessageContext messageContext) {\nIdentityEventListenerConfig identityEventListenerConfig = IdentityUtil.readEventListenerProperty\n(AbstractIdentityMessageHandler.class.getName(), this.getClass().getName());\n\nif (identityEventListenerConfig == null) {\nreturn false;\n}\n\nreturn Boolean.parseBoolean(identityEventListenerConfig.getEnable());\n}\n\nprivate boolean isAnalyticsSessionDataPublishingEnabled(Event event) throws IdentityEventException {\n\nboolean isEnabled = false;\n\nString handlerEnabled = this.configs.getModuleProperties().getProperty(SessionDataPublisherConstants.\nANALYTICS_SESSION_DATA_PUBLISHER_ENABLED);\nisEnabled = Boolean.parseBoolean(handlerEnabled);\n\nreturn isEnabled;\n}\n}\n</code></pre> </li> <li> <p>Register the service to the OSGi runtime using the following code.</p> <pre><code>    BundleContext bundleContext = context.getBundleContext();\nbundleContext.registerService(AbstractEventHandler.class, new AnalyticsSessionDataPublishHandler(), null);\n</code></pre> </li> </ol>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-preparing-for-migration/","title":"Preparing for migration","text":"<p>note</p> <ul> <li>Before you follow this section, see the Before you begin document.</li> <li>In this section, <code>&lt;OLD_IS_HOME&gt;</code> is the directory that current Identity Server resides in, and <code>&lt;NEW_IS_HOME&gt;</code> is the directory that WSO2 Identity Server 5.10.0 resides in. </li> </ul>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-preparing-for-migration/#disabling-versioning-in-the-registry-configuration","title":"Disabling versioning in the registry configuration","text":"<p>If there are frequently updating registry properties, having the versioning enabled for  registry resources in the registry can lead to unnecessary growth in the registry related tables in the database. To avoid this, we have disabled versioning by default in Identity  Server 5.10.0.</p> <p>Therefore, when migrating to IS 5.10.0 it is required to turn off the registry versioning in your current Identity Server and run the below scripts against the database that is used by the registry.</p> <p>NOTE</p> <p>Alternatively, it is possible to turn on registry versioning in IS 5.10.0 and continue. But this is     highly NOTE RECOMMENDED and these configurations should only be changed once.</p> <p>Turning off registry versioning in your current IS and running the scripts</p> <p>Open the <code>registry.xml</code> file in the <code>&lt;OLD_IS_HOME&gt;/repository/conf</code> directory. Set the <code>versioningProperties</code>, <code>versioningComments</code>, <code>versioningTags</code> and <code>versioningRatings</code> false.</p> <pre><code>&lt;staticConfiguration&gt;\n      &lt;versioningProperties&gt;false&lt;/versioningProperties&gt;\n      &lt;versioningComments&gt;false&lt;/versioningComments&gt;\n      &lt;versioningTags&gt;false&lt;/versioningTags&gt;\n      &lt;versioningRatings&gt;false&lt;/versioningRatings&gt;\n&lt;/staticConfiguration&gt;\n</code></pre> <p>warning</p> <p>If the above configurations are already set as <code>false</code> you should not run the below scripts.</p> <p>When the above configurations are turned off, we need to remove the versioning detatils from the database in order for the registry resources to work properly. Choose the relevant DB type and run the script against the DB that the registry resides in.</p> <p>DB Scripts</p> <p>Get the DB scripts provided by the WSO2 team.</p> <ul> <li>H2 - 1_H2.h2.db</li> <li>DB2 - 2_DB2.db2 </li> <li>MSSQL - 3_MSSQL.sql</li> <li>MySQL - 4_MySQL.sql</li> <li>Oracle - 5_Oracle.sql     </li> <li>PostgreSQL - 6_PostgreSQL.sql</li> </ul> <p>Not recommended</p> <p>If you decide to proceed with registry resource versioning enabled, Add the following configuration to the <code>deployment.toml</code> file of new WSO2 Identity Server. <code>&lt;NEW_IS_HOME&gt;/repository/conf/deployment.toml</code></p> <pre><code>[registory.static_configuration]\nenable=false\n</code></pre> <p>Note</p> <p>Changing these configuration should only be done before the initial Identity Server startup. If changes are done after the initial startup, the registry resource created previously will not be available.</p>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-preparing-for-migration/#migrating-the-secondary-userstore-password-to-the-internal-keystore","title":"Migrating the Secondary Userstore Password to the Internal Keystore","text":"<p>Ideally, the internal keystore should be used for encrypting internal critical data. However, in  previous versions, the secondary userstore passwords are encrypted using the primary keystore,  which is also used to sign and encrypt tokens.</p> <p>From WSO2 Identity Server 5.9.0, we have moved the secondary userstore password encryption functionality  from the primary keystore to the internal keystore.</p> <p>If you are migrating from a version earlier than WSO2 IS 5.9.0, see the document on migrating the secondary userstore password to the internal keystore (IS 5.9.0) document. </p>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-preparing-for-migration/#migrating-custom-components","title":"Migrating custom components","text":"<p>In WSO2 Identity Server 5.10.0 we have done a major upgrade to our kernel and our main components.  Any custom OSGI bundles which are added manually should be recompiled with new dependency versions  that are relevant to the new WSO2 IS version.  All custom OSGI components reside in the  <code>&lt;OLD_IS_HOME&gt;/repository/components/dropins</code> directory.</p> <ol> <li> <p>Get the source codes of the custom OSGI components located in the dropins directory. </p> </li> <li> <p>Change the dependency versions in the relevant POM files according to the WSO2 IS version that      you are upgrading to, and compile them. The compatible dependency versions can be found      here. </p> </li> <li> <p>If you come across any compile time errors, refer to the WSO2 IS code base and make the      necessary changes related to that particular component version.</p> </li> <li> <p>Add the compiled JAR files to the <code>&lt;NEW_IS_HOME&gt;/repository/components/dropins</code> directory.</p> </li> <li> <p>If there were any custom OSGI components in <code>&lt;OLD_IS_HOME&gt;/repository/components/lib</code> directory,      add newly compiled versions of those components to the <code>&lt;NEW_IS_HOME&gt;/repository/components/lib</code>  directory.</p> </li> </ol> <p>warning</p> <p>WSO2 Identity Server 5.9.0 switched from log4j to log4j2. If any custom components are already using <code>carbon.logging</code> jar for logging purposes, make sure to update the custom components for logging to work with log4j2. For instructions, see the Migrating to log4j2 document.</p>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-preparing-for-migration/#migrating-the-configurations","title":"Migrating the configurations","text":"<p>Previous WSO2 Identity Server versions supported multiple configuration files  such as <code>carbon.xml</code>, <code>identity.xml</code>, and <code>axis2.xml</code>. With the  new configuration model in WSO2 Identity Server 5.10.0,  configurations are handled by the a single file named  <code>deployment.toml</code> in the <code>&lt;IS_HOME&gt;/repository/conf</code> directory.</p> <p>Note</p> <p>When you are migrating from an older version of WSO2 Identity Server to 5.10.0, you need to convert old configurations to new configuration model as well.</p> <p>Refer to the relevant feature documents and the What Has Changed in IS 5.10.0 document to add the necessary configurations according to the new configuration model.</p> <p>info</p> <p>If you have a WSO2 Subscription, it is highly recommended to reach  WSO2 Support     before attempting to proceed with the configuration migration.</p>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-preparing-for-migration/#zero-down-time-migration","title":"Zero down time migration","text":"<p>Info</p> <p>If you do not require a zero down time migration, then you can directly proceed to the next section, the document on Migrating to 5.10.0.</p> <p>A typical WSO2 Identity Server deployment requires an update or upgrade from time to time,  usually when there\u2019s a patch, or critical security upgrade for products used in the solution,  or an upgrade to a newer version. To address this situation while avoiding downtime, system  admins and DevOps follow blue-green deployments to roll out updates.</p> <p>Blue-Green Migration</p> <p></p> <p>A blue-green deployment is a change management strategy for releasing software. Blue-green deployments require two identical hardware environments that are configured the same way. While one environment is live and serving all production traffic, the other environment remains idle. In the diagram below, the blue environment is live and the green is idle.</p> <p>As you prepare a new version of WSO2 Identity Server to be deployed into production, the final stage of testing takes place in an environment that is idle, i.e., in this example, the green environment. Once you have deployed and fully tested the deployment in green, you switch the load balancer so all incoming requests now go to green instead of blue. The green environment is now live, and blue is idle.</p> <p>This guide provides instructions to do a blue-green deployment with mission-critical services enabled in the deployment. At the moment WSO2 allows,     <ul> <li>Authentication with</li> <ul> <li>OAuth 2.0 / OIDC</li> <li>SAML 2</li> <li>WS-Federation (Passive)</li> </ul> </ul> Data created when using the above-mentioned services are synced from the old system to the new system.  All the other data will not be preserved in the new system.</p> <p>Now let's see how to do the blue-green deployment with WSO2 Identity Server.</p> <p>info</p> <p>Note that this data sync tool is only recommended for use with MySQL and Oracle databases since it has only been tested with MySQL and Oracle.</p> <ol> <li>Create a new databases for the new WSO2 Identity Server version (5.10.0)      that you are migrating to.</li> <li>Unzip a WSO2 Identity Server 5.10.0 distribution (use a WUM updated distribution      if possible). This will be used as the data sync tool between the Identity      Server versions. We will refer to WSO2 Identity Server distribution as      \u201cdata sync tool\u201d and location as <code>&lt;SYNC-TOOL-HOME&gt;</code>. </li> <li>Get the sync client jar file provided by the WSO2 team and compy it to the <code>&lt;SYNC-TOOL-HOME&gt;/repository/components/dropins</code> directory.</li> <li>Replace the <code>log4j2.properties</code> file located in <code>&lt;SYNC-TOOL-HOME&gt;/repository/conf</code>      with the log4j2.properties file provided by the WSO2 team.     This will create a separate log file <code>syn.log</code> in the <code>&lt;SYNC-TOOL-HOME&gt;/repository/logs</code> directory      which will contain the sync tool related logs.</li> <li> <p>Add the data sources used in source and target WSO2 Identity Server deployments involved in the migration      to <code>deployment.toml</code> file located <code>&lt;SYNC-TOOL-HOME&gt;/repository/conf/deployment.toml</code>.</p> <p>Sample configuration written for the MySQL DB type</p> <p>```    [[datasource]]    id=\"source\"    url=\"jdbc:mysql://localhost:3306/sourcedb\"    username=\"sourceUsername\"    password=\"sourcePassword\"    driver=\"com.mysql.jdbc.Driver\"    [datasource.pool_options]    maxActive=\"80\"    maxWait=\"60000\"    minIdle=\"5\"    testOnBorrow=\"true\"    validationQuery=\"SELECT 1\"    validationInterval=\"30000\"    defaultAutoCommit=\"false\"</p> <p>[[datasource]]    id=\"target\"    url=\"jdbc:mysql://localhost:3306/targetdb\"    username=\"targetUsername\"    password=\"targetPassword\"    driver=\"com.mysql.jdbc.Driver\"    [datasource.pool_options]    maxActive=\"80\"    maxWait=\"60000\"    minIdle=\"5\"    testOnBorrow=\"true\"    validationQuery=\"SELECT 1\"    validationInterval=\"30000\"    defaultAutoCommit=\"false\"    ```</p> <p>Sample configuration written for the Oracle DB type</p> <pre><code>[[datasource]]\nid=\"source\"\nurl=\"jdbc:oracle:thin:@localhost:1521/SID\"\nusername=\"sourceUsername\"\npassword=\"sourcePassword\"\ndriver=\"oracle.jdbc.OracleDriver\"\n\n[[datasource]]\nid=\"target\"\nurl=\"jdbc:oracle:thin:@localhost:1521/SID\"\nusername=\"targetUsername\"\npassword=\"targetPassword\"\ndriver=\"oracle.jdbc.OracleDriver\"\n</code></pre> </li> <li> <p>Create a property file with below properties as required and name it as <code>sync.properties</code>.</p> Property Description Mandatory/Optional Default value sourceVersion= Source product version Mandatory - targetVersion= Target product version Mandatory - batchSize= Size of a sync batch Optional 100 syncInterval= Interval in milliseconds between data sync batches Optional 5000 syncTables= Tables to be synced. Tables should be comma separated. Mandatory - identitySchema= JNDI names of source and target data sources for an identity schema. Mandatory - <p>Tables that support syncing</p> Table Purpose Recommendation IDN_IDENTITY_USER_DATA Identity claims when the identity data store is enabled Usually recommended to sync if identity management features are enabled in the system. IDN_OAUTH2_ACCESS_TOKEN OAuth 2.0 tokens Need to sync if the tokens created during the migration period needs to be valid after migration. IDN_OAUTH2_ACCESS_TOKEN_SCOPE OAuth 2.0 scopes If the IDN_OAUTH2_ACCESS_TOKEN is synced, this table also needs to be synced. IDN_OAUTH2_AUTHORIZATION_CODE OAuth 2.0 authorization codes Need to sync if the authorization codes created during the migration period need to be valid after migration. Not generally required since the validity period is small. <p>tip</p> <p>A sample <code>sync.properties</code> file will be provide by the WSO2 team.</p> </li> <li> <p>Disable the endpoints in the WSO2 Identity Server that are not mission-critical for the maintenance window.</p> <p>Currently traffic allowed endpoints</p> <ul> <li> <p>For login common</p> Endpoint (pattern) Use case /commonauth All authentication use cases /authenticationendpoint All authentication use cases /x509certificateauthenticationendpoint Client certificate based authentication </li> <li> <p>For OAuth 2.0/OpenID Connect</p> Endpoint (pattern) Use case /oauth2/token OAuth 2.0 token generation /oauth2/userinfo OAuth 2.0 user info retrieval /oauth2/introspect OAuth 2.0 token introspection /oauth2/revoke OAuth 2.0 token revocation /oauth2/authorize OAuth 2.0 authorization /oauth2/jwks OAuth 2.0 jwks /oidc/checksession OIDC session management /oidc/logout OIDC logout </li> <li> <p>For SAML2 Web SSO</p> Endpoint (pattern) Use case /samlsso SAML 2.0 login </li> <li> <p>For WS-Federation (Passive)</p> Endpoint (pattern) Use case /passivests Passive sts login </li> <li> <p>For the second factors in the login</p> Endpoint (pattern) Use case /smsotpauthenticationendpoint SMS OTP authentication /totpauthenticationendpoint TOTP authentication /emailotpauthenticationendpoint Email OTP authentication </li> <li> <p>For authorization XACML</p> Endpoint (pattern) Use case /api/identity/entitlement XACML REST Profile </li> </ul> </li> <li> <p>Start the sync tool with the following command.</p> <ul> <li>If you want to create the required tables and trigger directly on the database.     <pre><code>sh wso2server.sh -DprepareSync -DconfigFile=&lt;path to sync.properties file&gt;/sync.properties\n</code></pre></li> <li>If you want to generate the DDL scripts for the required tables and trigger      (after generating you need to manually execute them) on the database.     <pre><code>sh wso2server.sh -DprepareSync -DgenerateDDL -DconfigFile=&lt;path to sync.properties file&gt;/sync.properties\n</code></pre> This will generate the required triggers and the metadata tables to sync the data between the databases used for  the 2 versions of the identity server. At the moment below tables are supported to be synced.<ul> <li>IDN_IDENTITY_USER_DATA</li> <li>IDN_OAUTH2_ACCESS_TOKEN</li> <li>IDN_OAUTH2_ACCESS_TOKEN_SCOPE</li> <li>IDN_OAUTH2_AUTHORIZATION_CODE</li> </ul> </li> </ul> </li> <li> <p>Create database dumps from the old databases (databases used in the old version of the WSO2 Identity Server)  and restore in the new databases created.</p> </li> <li> <p>Proceed to the Migrating to 5.10.0 document.</p> </li> </ol>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-the-secondary-userstore-password-to-the-internal-keystore/","title":"Migrating the Secondary Userstore Password to the Internal Keystore","text":"<p>WSO2 Identity Server by default has one keystore. To mitigate security incidents it is advisable to maintain multiple keystores. For example, if one keystores gets compromised, you can continue with the other keystores that are intact. Mainly, you may maintain three keystores:</p> <ul> <li>A keystore to store tokens, which is mentioned in the <code>deployment.toml</code> file.</li> <li>An internal keystore to store internal critical data such as encrypted passwords. </li> <li>A keystore for Tomcat SSL connection, which is the secondary keystore of the WSO2 Identity Server.</li> </ul> <p>Ideally, the internal keystore should be used for encrypting internal critical data. However, currently, the secondary userstore passwords are encrypted using the primary keystore, which is also used to sign and encrypt tokens. Thus, it is preferable to move the secondary userstore password encryption functionality from the primary keystore to the internal keystore.</p> <p></p> <p>After moving the secondary userstore password encryption functionality to the internal keystore, WSO2 Identity Server secondary userstore password encryption tool allows you to decrypt all the existing secondary userstore passwords using the primary keystore and re-encrypt them using the internal keystore.</p> <p>Let's get started! </p> <p>Note</p> <ul> <li>If you are using an NFS-like file system, make sure to isolate the newly-downloaded binary from others.</li> <li>The secondary userstore password encryption tool is a one-time tool. Do not use the WSO2 Identity Server pack that contains this tool in production.</li> </ul>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-the-secondary-userstore-password-to-the-internal-keystore/#set-up","title":"Set up","text":"<ol> <li> <p>To add the details about the primary keystore and internal keystore, add the following configurations to the <code>deployment.toml</code> file in the <code>&lt;IS_HOME&gt;/repository/conf</code> directory.</p> <pre><code>[keystore]\nuserstore_password_encryption=\"InternalKeyStore\"\n</code></pre> </li> <li> <p>Copy the following files and directories from your existing WSO2 Identity Server pack to the respective directories of the newly-downloaded pack.</p> <p> File/Directory Purpose The <code>/repository/tenants</code> directory. This contains the tenant's secondary userstore configurations. The <code>/repository/deployment/server/userstores</code> directory. This contains the super tenant secondary userstore configurations. The keystore in the <code>/repository/resources/security</code> directory. This is the primary keystore. The internal keystore in the <code>/repository/resources/security</code> directory. This is the internal keystore. </p> </li> <li> <p>If you are using a cipher tool, copy the following files in the <code>&lt;IS_HOME&gt;/repository/conf/security</code> directory in your existing WSO2 Identity Server pack to the respective directory of the newly-downloaded pack.</p> <ul> <li><code>cipher-tool.properties</code></li> <li><code>cipher-text.properties</code></li> <li><code>secret-conf.properties</code></li> </ul> </li> <li> <p>Open the <code>secret-conf.properties</code> file in an editor and replace the <code>keystore.identity.location</code> element value with the directory path of the current internal keystore.</p> </li> </ol>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-the-secondary-userstore-password-to-the-internal-keystore/#re-encrypt-the-secondary-userstore-passwords","title":"Re-encrypt the secondary userstore passwords","text":"<p>Follow the steps below to re-encrypt the secondary userstore passwords:</p> <ol> <li> <p>Get the password encryption tool provided by the WSO2 team and copy the <code>.jar</code> into the <code>&lt;IS_HOME&gt;/repository/components/dropins</code> directory.</p> </li> <li> <p>To start the modified WSO2 Identity Server pack: </p> <ol> <li> <p>Navigate to the directory where the modified WSO2 Identity Server pack is located in a command prompt.</p> </li> <li> <p>Execute the following command. </p> </li> </ol> <pre><code>sh wso2server.sh -DreEncryptSecondaryUserStorePassword\n</code></pre> </li> <li> <p>Observe the logs in the <code>wso2carbon.log</code> file located in the <code>&lt;IS_HOME&gt;/repository/logs</code> directory to monitor the re-encryption of the secondary userstore passwords.</p> <ol> <li> <p>The following appears when the <code>.jar</code> file is being read by the server. </p> <pre><code>\"secondary userstore password re-encryption component activated\"\n</code></pre> </li> <li> <p>The following appears when the migration starts. </p> <pre><code>\"secondary userstore password re-encryption started\"\n</code></pre> </li> <li> <p>The following appears when the migration ends. </p> <pre><code>\"secondary userstore password re-encryption ended\"\n</code></pre> </li> </ol> </li> <li> <p>Once the process ends, stop the WSO2 Identity Server.</p> </li> </ol>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-the-secondary-userstore-password-to-the-internal-keystore/#copy-the-userstore-to-the-existing-wso2-identity-server-pack","title":"Copy the userstore to the existing WSO2 Identity Server pack","text":"<p>To copy the user store to the existing WSO2 Identity Server pack, copy the following directories in the modified WSO2 Identity Server pack into the respective directories of the original pack. </p> <p>Warning</p> <ul> <li>As a precautionary measure, take a backup of the existing userstore.</li> <li>During the directory copying process, the userstores may get unavailable for a few seconds.</li> </ul> Directory Purpose The <code>/repository/tenants</code> directory This contains the tenant's secondary user store configurations. The <code>/repository/deployment/server/userstores</code> directory This contains the super tenant secondary user store configurations."},{"location":"identity-server/migration-docs/is-5.10.0/migrating-to-5100/","title":"Migrating to 5.10.0","text":"<p>Before you begin   -   Make sure you satisfy the prerequisites in the Before you begin document.   -   Carry out the pre-processing steps in Preparing for migration.</p> <p>Note</p> <p>In this section, <code>&lt;OLD_IS_HOME&gt;</code> is the directory that the current Identity Server resides in, and <code>&lt;NEW_IS_HOME&gt;</code> is the directory that WSO2 Identity Server 5.10.0 resides in. </p> <p>If you are using DB2</p> <p>Move indexes to the TS32K Tablespace. The index tablespace in the      <code>IDN_OAUTH2_ACCESS_TOKEN</code>  and      <code>IDN_OAUTH2_AUTHORIZATION_CODE</code> tables need     to be\u00a0moved\u00a0to the existing TS32K tablespace in order to support     newly added table indexes.     SQLADM or DBADM authority is required in order to invoke     the <code>ADMIN_MOVE_TABLE</code> stored procedure. You     must also have the appropriate object creation authorities,     including authorities to issue the SELECT statement on the source     table, and to issue the INSERT statement on the target table.</p> <p>Stored procedure</p> <p>Replace the <code>&lt;TABLE_SCHEMA_OF_IDN_OAUTH2_ACCESS_TOKEN_TABLE&gt;</code> and <code>&lt;TABLE_SCHEMA_OF_IDN_OAUTH2_AUTHORIZATION_CODE_TABLE&gt;</code> tags with the respective schema for the table. </p> <pre><code>CREATE BUFFERPOOL BP32K IMMEDIATE SIZE 250 AUTOMATIC PAGESIZE 32K;\n\nCREATE LARGE TABLESPACE TS32K PAGESIZE 32K MANAGED by AUTOMATIC &gt;STORAGE BUFFERPOOL BP32K;\n\nCALL SYSPROC.ADMIN_MOVE_TABLE(\n&lt;TABLE_SCHEMA_OF_IDN_OAUTH2_ACCESS_TOKEN_TABLE&gt;,\n'IDN_OAUTH2_ACCESS_TOKEN',\n(SELECT TBSPACE FROM SYSCAT.TABLES WHERE TABNAME = 'IDN_OAUTH2_ACCESS_TOKEN' AND TABSCHEMA = &lt;TABLE_SCHEMA_OF_IDN_OAUTH2_ACCESS_TOKEN_TABLE&gt;),\n'TS32K',\n(SELECT TBSPACE FROM SYSCAT.TABLES WHERE TABNAME = 'IDN_OAUTH2_ACCESS_TOKEN' AND TABSCHEMA = &lt;TABLE_SCHEMA_OF_IDN_OAUTH2_ACCESS_TOKEN_TABLE&gt;),\n'',\n'',\n'',\n'',\n'',\n'MOVE');\n\nCALL SYSPROC.ADMIN_MOVE_TABLE(\n&lt;TABLE_SCHEMA_OF_IDN_OAUTH2_AUTHORIZATION_CODE_TABLE&gt;,\n'IDN_OAUTH2_AUTHORIZATION_CODE',\n(SELECT TBSPACE FROM SYSCAT.TABLES WHERE TABNAME = 'IDN_OAUTH2_AUTHORIZATION_CODE' AND TABSCHEMA = &gt;&lt;TABLE_SCHEMA_OF_IDN_OAUTH2_AUTHORIZATION_CODE_TABLE&gt;),\n'TS32K',\n(SELECT TBSPACE FROM SYSCAT.TABLES WHERE TABNAME = 'IDN_OAUTH2_AUTHORIZATION_CODE' AND TABSCHEMA = &gt;&lt;TABLE_SCHEMA_OF_IDN_OAUTH2_AUTHORIZATION_CODE_TABLE&gt;),\n'',\n'',\n'',\n'',\n'',\n'MOVE');\n</code></pre> <p>If you recieve an error due to missing <code>SYSTOOLSPACE</code> or <code>SYSTOOLSTMPSPACE</code> tablespaces, create those tablespaces manually using the following script prior to executing the stored procedure given above. For more information, see SYSTOOLSPACE and SYSTOOLSTMPSPACE table spaces in the IBM documentation.           </p> <pre><code>CREATE TABLESPACE SYSTOOLSPACE IN IBMCATGROUP\nMANAGED BY AUTOMATIC STORAGE USING STOGROUP IBMSTOGROUP\nEXTENTSIZE 4;\n\nCREATE USER TEMPORARY TABLESPACE SYSTOOLSTMPSPACE IN IBMCATGROUP\nMANAGED BY AUTOMATIC STORAGE USING STOGROUP IBMSTOGROUP\nEXTENTSIZE 4;\n</code></pre> <ol> <li> <p>If you have manually added any custom OSGI bundles to the     <code>&lt;OLD_IS_HOME&gt;/repository/components/dropins</code>     directory, copy those OSGI bundles to\u00a0the     <code>&lt;NEW_IS_HOME&gt;/repository/components/dropins</code>     directory.</p> <p>Important   You may need to update the custom components to work with WSO2 Identity Server 5.10.0. Refer the Migrating custom components document.     If applicable, see the documents on migrating     Data Publishers and     Custom Scope validators.</p> </li> <li> <p>If you have manually added any JAR files to the     <code>&lt;OLD_IS_HOME&gt;/repository/components/lib</code>     directory, copy\u00a0and paste those JARs in the     <code>&lt;NEW_IS_HOME&gt;/repository/components/lib</code>     directory.</p> </li> <li> <p>Copy the <code>.jks</code> files from the     <code>&lt;OLD_IS_HOME&gt;/repository/resources/security</code>     directory and paste them in the     <code>&lt;NEW_IS_HOME&gt;/repository/resources/security</code>     directory.</p> <p>Note</p> <p>In WSO2 Identity Server 5.10.0, it is required to use a certificate with the RSA key size greater than 2048. If you have used a certificate that has a weak RSA key (key size less than 2048) in the previous IS version, add the following configuration to <code>&lt;NEW_IS_HOME&gt;/repository/conf/deployment.toml</code> to configure internal and primary keystores. </p> <pre><code>[keystore.primary]\nfile_name = \"primary.jks\"\ntype = \"JKS\"\npassword = \"wso2carbon\"\nalias = \"wso2carbon\"\nkey_password = \"wso2carbon\"\n\n[keystore.internal]\nfile_name = \"internal.jks\"\ntype = \"JKS\"\npassword = \"wso2carbon\"\nalias = \"wso2carbon\"\nkey_password = \"wso2carbon\"\n</code></pre> <p>Make sure to point the internal keystore to the keystore that is copied from the previous WSO2 Identity Server version. The primary keystore can be pointed to a keystore with a certificate that has a strong RSA key.</p> </li> <li> <p>If you have created tenants in the previous WSO2 Identity Server     version that contain resources, copy the content from <code>&lt;OLD_IS_HOME&gt;/repository/tenants</code> directory,     to the <code>&lt;NEW_IS_HOME&gt;/repository/tenants</code> directory.</p> </li> <li> <p>If you have created secondary user stores in\u00a0the previous WSO2 IS     version, copy the content in the     <code>&lt;OLD_IS_HOME&gt;/repository/deployment/server/userstores</code>     directory to the     <code>&lt;NEW_IS_HOME&gt;/repository/deployment/server/userstores</code>     directory.</p> </li> <li> <p>Ensure that you have migrated the configurations into the new version as advised in the preparing for migration document.</p> </li> <li> <p>See the document on migrating Log4j2 configurations.</p> </li> <li> <p>Replace the <code>&lt;NEW_IS_HOME&gt;/repository/conf/email/email-admin-config.xml</code> file with    <code>&lt;OLD_IS_HOME&gt;/repository/conf/email/email-admin-config.xml</code>.   </p> </li> <li> <p>Follow the steps given below to perform database updates:</p> <ol> <li> <p>Get the migration client (<code>wso2is-migration-x.x.x.zip</code>) provided by the WSO2 team. Unzip it to a local directory.</p> <p>Note </p> <ul> <li>x.x.x of <code>wso2is-migration-x.x.x.zip</code> denotes the     version number of the most recently-released migration resources. </li> <li>The directory where the <code>wso2is-migration-x.x.x.zip</code> is unziped will be referred to as <code>&lt;IS_MIGRATION_TOOL_HOME&gt;</code>.</li> </ul> </li> <li> <p>Copy the <code>org.wso2.carbon.is.migration-x.x.x.jar</code> file in the     <code>&lt;IS_MIGRATION_TOOL_HOME&gt;/dropins</code> directory into the <code>&lt;NEW_IS_HOME&gt;/repository/components/dropins</code>     directory.</p> </li> <li> <p>Copy migration-resources\u00a0directory to the     <code>&lt;NEW_IS_HOME&gt;</code> root directory.</p> </li> <li> <p>Ensure that the property values are as follows in the     <code>&lt;NEW_IS_HOME&gt;/migration-resources migration-config.yaml</code> file.</p> <pre><code>migrationEnable: \"true\"\n\ncurrentVersion: \"5.7.0\"\n\nmigrateVersion: \"5.10.0\"\n</code></pre> <p>note</p> <p>Here, the <code>currentVersion</code> is the current WSO2 Identity Server version that you are using.</p> </li> </ol> <p>If you are using PostgreSQL</p> <p>During the migration, \"uuid-ossp\" extension is created in the database. In order to create this extension, the database user should have the 'Superuser' permission. If the user is not already a superuser, assign the permission before starting the migration.</p> <pre><code>ALTER USER &lt;user&gt; WITH SUPERUSER;\n</code></pre> </li> <li> <p>If you are migrating your user stores to the new user store managers with the unique ID capabilities, Follow      the guidelines given in the Migrating User Store Managers document before moving to the next section.</p> </li> <li> <p>Start the WSO2 Identity Server 5.10.0 with the following command to execute the migration client.</p> <ul> <li> <p>Linux/Unix:</p> <pre><code>sh wso2server.sh -Dmigrate -Dcomponent=identity\n</code></pre> </li> <li> <p>Windows:</p> <pre><code>wso2server.bat -Dmigrate -Dcomponent=identity\n</code></pre> </li> </ul> </li> <li> <p>Stop the server once the migration client execution is complete.</p> </li> </ol>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-to-5100/#executing-the-sync-tool","title":"Executing the sync tool","text":"<p>warning</p> <p>Proceed with this step only if you have opted in for Zero down time migration. If not, your migration task is complete now. You can omit the following steps.</p> <ol> <li> <p>Start the data sync tool with the following command pointing to the <code>sync.properties</code> file.  This will start syncing data created in the old WSO2 Identity Server database after taking the database dump  to the new WSO2 Identity Server database.     <pre><code>sh wso2server.sh -DsyncData -DconfigFile=&lt;path to sync.properties file&gt;/sync.properties\n</code></pre></p> </li> <li> <p>Monitor the logs in the sync tool to see how many entries are synced at a given time and to keep track of the progress in the data sync process. The following line will be printed in the logs in each table you have specified, that has no data to be synced.</p> <p><code>tab=\"Sample\" [2019-02-27 17:26:32,388]  INFO {org.wso2.is.data.sync.system.pipeline.process.BatchProcessor} -  No data to sync for: &lt;TABLE_NAME&gt;</code></p> <p>info</p> <p>If you have some traffic to the old version of the WSO2 Identity Server, the number of entries to be synced might not become zero at any time. In that case, observe the logs to decide on a point where the number of entries that are synced is low.</p> </li> <li> <p>When the data sync is complete, switch the traffic from the old setup to the new setup.</p> </li> <li> <p>Allow the sync client to run for some time to sync the entries that were not synced before switching  the deployments. When the number of entries synced by the sync tool becomes zero, stop the sync client.</p> </li> </ol>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-to-5100/#verifying-the-migration","title":"Verifying the migration","text":"<p>After the migration is complete, proceed to the following verification steps.</p> <ul> <li>Monitor the system health (CPU, memory usage etc).</li> <li>Monitor the WSO2 logs to see if there are errors logged in the log files.</li> <li>Run functional tests against the migrated deployment to verify that all the functionalies are working as expected.</li> </ul> <p>If you see any problems in the migrated system, revert the traffic back to the previous setup and  investigate the problem.</p>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-to-5100/#after-migration","title":"After migration","text":"<p>If you are using the data cleanup scripts to perform data purging, use the latest cleanup scripts or cleanup scripts specific to the migrated version. You can find the latest cleanup scripts from here.</p>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-to-log4j2/","title":"Migrating to Log4j2","text":"<p>From kernel 4.5.x onwards the carbon.logging jar is not packed and the pax-logging-api is used instead. With this upgrade the log4j version is also updated to log4j2.</p> <p>Warning</p> <p>Note that WSO2 Identity Server 5.9.0, 5.10.0, and 5.11.0 are affected by the Log4j2 zero-day vulnerability, which has been reported to WSO2 on 10th December 2021. You can mitigate this vulnerability in your product by following our instructions and guidelines.</p> <p>Refer to the following steps for log4j2 migration.</p> <ol> <li> <p>Replace carbon logging or commons.logging dependencies with pax-logging dependency.</p> <pre><code>&lt;!-- Pax Logging --&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.ops4j.pax.logging&lt;/groupId&gt;\n    &lt;artifactId&gt;pax-logging-api&lt;/artifactId&gt;\n    &lt;version&gt;${pax.logging.api.version}&lt;/version&gt;\n&lt;/dependency&gt;\n\n&lt;!-- Pax Logging Version --&gt;\n&lt;pax.logging.api.version&gt;1.10.1&lt;/pax.logging.api.version&gt;\n</code></pre> </li> <li> <p>If log4j dependency is directly used:</p> <ul> <li> <p>Option 1</p> <p>Replace log4j dependency with log4j2 dependency and rewrite the loggers accordingly.</p> <pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;org.ops4j.pax.logging&lt;/groupId&gt;\n    &lt;artifactId&gt;pax-logging-log4j2&lt;/artifactId&gt;\n    &lt;version&gt;${pax.logging.log4j2.version}&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre> </li> <li> <p>Option 2</p> <p>Replace log4j dependency with pax-logging dependency and rewrite the loggers using commons.logging accordingly.</p> </li> </ul> </li> <li> <p>If <code>commons.logging</code> is imported using Import-Package add the version range.</p> <pre><code>org.apache.commons.logging; version=\"${commons.logging.version.range}\"\n\n\n&lt;commons.logging.version.range&gt;[1.2.0,2.0.0)&lt;/commons.logging.version.range&gt;\n</code></pre> </li> <li> <p>Change appenders in the log4j2.properties file and add the appender to the appenders list.</p> <pre><code>appender.CARBON_LOGFILE.type = RollingFile\nappender.CARBON_LOGFILE.name = CARBON_LOGFILE\nappender.CARBON_LOGFILE.fileName = ${sys:carbon.home}/repository/logs/wso2carbon.log\nappender.CARBON_LOGFILE.filePattern = ${sys:carbon.home}/repository/logs/wso2carbon-%d{MM-dd-yyyy}.log\nappender.CARBON_LOGFILE.layout.type = PatternLayout\nappender.CARBON_LOGFILE.layout.pattern = TID: [%tenantId] [%appName] [%d] %5p [%c] - %m%ex%n\nappender.CARBON_LOGFILE.policies.type = Policies\nappender.CARBON_LOGFILE.policies.time.type = TimeBasedTriggeringPolicy\nappender.CARBON_LOGFILE.policies.time.interval = 1\nappender.CARBON_LOGFILE.policies.time.modulate = true\nappender.CARBON_LOGFILE.policies.size.type = SizeBasedTriggeringPolicy\nappender.CARBON_LOGFILE.policies.size.size=10MB\nappender.CARBON_LOGFILE.strategy.type = DefaultRolloverStrategy\nappender.CARBON_LOGFILE.strategy.max = 20\nappender.CARBON_LOGFILE.filter.threshold.type = ThresholdFilter\nappender.CARBON_LOGFILE.filter.threshold.level = DEBUG\n\nappenders = CARBON_LOGFILE, CARBON_CONSOLE, AUDIT_LOGFILE, ATOMIKOS_LOGFILE, CARBON_TRACE_LOGFILE, CARBON_MEMORY, \nDELETE_EVENT_LOGFILE, TRANSACTION_LOGFILE\n</code></pre> </li> <li> <p>Add logger in the log4j2.properties file and add the logger to the loggers list.</p> <pre><code>logger.&lt;Logger_Name&gt;.name = &lt;Component_name&gt;\nlogger.&lt;Logger_Name&gt;.type = INFO\n</code></pre> <p>Then add the  to the loggers list by comma-separate. <pre><code>logger.org-wso2-carbon-identity-core.name = org.wso2.carbon.identity.core\nlogger.org-wso2-carbon-identity-core.level = INFO\n\nloggers = org-wso2-carbon-identity-core, trace-messages, org-apache-coyote,com-hazelcast\n</code></pre>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-userstore-managers/","title":"Migrating User Stores","text":"<p>Before doing the actual user store migration, it is recommended to do a dry run and analyze the generated report for  any recommendations related to the migration. </p>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-userstore-managers/#dry-run","title":"Dry Run","text":"<p>Dry-run capability in the user store migrator will allow the migration utility to validate the system for the  user store configurations and generate a report regarding the migration compatibility. In the generated migration report,  if there are any warnings in the generated migration report, it is recommended to contact the WSO2 support to identify the best migration strategy.</p>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-userstore-managers/#how-to-run","title":"How to Run","text":"<p>Configure the migration report path using the value of <code>reportPath</code> <code>&lt;IS_HOME&gt;/migration-resources/migration-config.yaml</code> in the <code>migration-config.yaml</code>.  This path should be an absolute path. </p> <p>Run the migration utility with system property \u201cdryRun\u201d. </p> <ul> <li>On Unix/Linux</li> </ul> <pre><code>sh wso2server.sh -Dmigrate -Dcomponent=identity -DdryRun\n</code></pre> <ul> <li>On Windows</li> </ul> <pre><code>wso2server.bat -Dmigrate -Dcomponent=identity -DdryRun\n</code></pre> <p>After that analyze the generated report that resides in the provided location.</p>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-userstore-managers/#migrating-user-stores_1","title":"Migrating User Stores","text":"<p>If you have multiple tenants and multiple user stores and you only need to migrate a few of them, refer to the  configuration section below. If you need to migrate all of them, use the <code>migrateAll</code> property (This is set to true by default).  </p>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-userstore-managers/#special-scenarios","title":"Special Scenarios","text":"<p>If the user store is an LDAP user store and SCIM is enabled for that user store, migrating that user store is not  required.  As SCIM will create a user ID for the users in that user store, the SCIM ID can be used as the unique user ID. To do that,  change the <code>user_id_attribute</code> to the value of the SCIM ID, in the <code>&lt;IS_HOME&gt;/repository/conf/deployment.toml</code> file.</p>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-userstore-managers/#configurations","title":"Configurations","text":"<p>Apply the following configurations to the <code>migration-config.yaml</code> file:</p> Property Name Description migrateAll Migrate all the tenants and all the user store domains in it. reportPath Absolute path for the dry report. This is required in the dry run mode. <p>You can configure the user ID migrator as shown below, which is for adding UUID values to user records. This is only required if your primary user store is not an Active Directory. </p> <pre><code>-\n  name: \"UserIDMigrator\"\n  order: 7\n  parameters:\n    &lt;tenant-param&gt;:\n</code></pre> Property Name Description tenantDomain Domain name of the tenant. (Mandatory) increment Number of users to be updated in each iteration. (Optional) startingPoint Where should the migration start from (Offset). This is useful if the migration stopped in the middle and needs to restart. (Optional) scimEnabled Whether SCIM is enabled for user stores in this tenant. (Optional) migratingDomains List of comma-separated domain names that should be migrated to this domain. (Optional) forceUpdateUserId Mark whether user IDs should be updated even though there is already an existing ID. (Optional) <p>If the primary user store in your deployment is an Active Directory, you don't need to run the user ID migrator as the user store already has an attribute named <code>objectGuid</code>, which can be used as the UUID of the user. Therefore, you can remove the above user ID migrator configuration from the <code>migration-config.yaml</code> file. However, if you are planning to use a unique ID Active Directory user store manager, be sure to map the <code>UserIDAttribute</code> attribute to the <code>objectGuid</code> attribute in the Active Directory as follows:</p> <pre><code>[user_store]\nclass = \"org.wso2.carbon.user.core.ldap.UniqueIDReadWriteLDAPUserStoreManager\"\n\n[user_store.properties]\nUserIDAttribute = \"objectGuid\"\n</code></pre> <p>Note</p> <p>UUID support for user store managers were added from IS 5.10.0 onwards.</p>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-userstore-managers/#populating-userids-for-the-userstores","title":"Populating UserIds for the userstores","text":"<p>These steps should be carried out for the old database before the migration. A backup of UM database should be taken and database triggers should be set to update the backup database based on the updates of the live database. After performing the following steps the backup database should be migrated to the next version.</p> <ol> <li> <p>If you have JDBC secondary user stores with SCIM disabled, execute the following queries on the UM database. This will add a <code>UM_USER_ID</code> column to the <code>UM_USER</code> table with a random <code>UUID</code> as the default value for <code>UM_USER_ID</code>.</p> <ul> <li>Postgresql</li> </ul> <pre><code>/* User should have the Superuser permission */\nCREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";\n\nALTER TABLE UM_USER\n    ADD COLUMN UM_USER_ID CHAR(36) DEFAULT uuid_generate_v4(),\n    ADD CONSTRAINT UM_USER_UUID_CONSTRAINT UNIQUE(UM_USER_ID);\n</code></pre> <ul> <li>Oracle</li> </ul> <pre><code>ALTER TABLE UM_USER\n    ADD (\n        UM_USER_ID CHAR(36) DEFAULT LOWER(regexp_replace(rawtohex(sys_guid()), '([A-F0-9]{8})([A-F0-9]{4})([A-F0-9]{4})([A-F0-9]{4})([A-F0-9]{12})', '\\1-\\2-\\3-\\4-\\5')))\n/\n\nALTER TABLE UM_USER ADD UNIQUE (UM_USER_ID)\n/\n</code></pre> <ul> <li>Oracle_rac</li> </ul> <pre><code>ALTER TABLE UM_USER\n    ADD (\n        UM_USER_ID CHAR(36) DEFAULT LOWER(regexp_replace(rawtohex(sys_guid()), '([A-F0-9]{8})([A-F0-9]{4})([A-F0-9]{4})([A-F0-9]{4})([A-F0-9]{12})', '\\1-\\2-\\3-\\4-\\5')))\n/\n\nALTER TABLE UM_USER ADD UNIQUE (UM_USER_ID)\n/\n</code></pre> <ul> <li>MySQL</li> </ul> <pre><code>ALTER TABLE UM_USER ADD COLUMN UM_USER_ID CHAR(36) NOT NULL DEFAULT 'NONE';\nUPDATE UM_USER SET UM_USER_ID = UUID();\nALTER TABLE UM_USER ADD UNIQUE(UM_USER_ID, UM_TENANT_ID);\n</code></pre> <ul> <li>MySQL_cluster</li> </ul> <pre><code>ALTER TABLE UM_USER ADD COLUMN UM_USER_ID CHAR(36) NOT NULL DEFAULT 'NONE';\nUPDATE UM_USER SET UM_USER_ID = UUID();\nALTER TABLE UM_USER ADD UNIQUE(UM_USER_ID, UM_TENANT_ID);\n</code></pre> <ul> <li>MS SQL</li> </ul> <pre><code>ALTER TABLE UM_USER\n    ADD UM_USER_ID CHAR(36) DEFAULT LOWER(NEWID()) NOT NULL,\n    UNIQUE(UM_USER_ID);\n</code></pre> <ul> <li>H2</li> </ul> <pre><code>ALTER TABLE UM_USER ADD COLUMN (UM_USER_ID CHAR(36) DEFAULT RANDOM_UUID());\nALTER TABLE UM_USER ADD UNIQUE (UM_USER_ID);\n</code></pre> <ul> <li>DB2</li> </ul> <pre><code>CREATE OR REPLACE FUNCTION NEWUUID()\nRETURNS CHAR(36)\nBEGIN\n    DECLARE @UUID CHAR(32);\n    SET @UUID=LOWER(HEX(RAND()*255) || HEX(RAND()*255));\n    RETURN LEFT(@UUID,8)||'-'||\n        SUBSTR(@UUID,9,4)||'-'||\n        SUBSTR(@UUID,13,4)||'-'||\n        SUBSTR(@UUID,17,4)||'-'||\n        RIGHT(@UUID,12);\nEND\n/\n\nALTER TABLE UM_USER ADD COLUMN UM_USER_ID CHAR(36) NOT NULL DEFAULT 'NONE'\n/\nCALL SYSPROC.ADMIN_CMD('REORG TABLE UM_USER')\n/\n\nUPDATE UM_USER SET UM_USER_ID = NEWUUID()\n/\nCALL SYSPROC.ADMIN_CMD('REORG TABLE UM_USER')\n/\n</code></pre> </li> <li> <p>If you have JDBC secondary user stores with SCIM enabled, execute the following queries on the UM database.</p> <ul> <li>PostgreSQL</li> </ul> <pre><code>SELECT DISTINCT t.ATTRIBUTE_NAME\n    FROM IDN_CLAIM_MAPPED_ATTRIBUTE AS t\n    WHERE t.LOCAL_CLAIM_ID IN (SELECT t2.MAPPED_LOCAL_CLAIM_ID\n    FROM IDN_CLAIM_MAPPING AS t2\n    JOIN IDN_CLAIM AS t1\n    ON t1.ID = t2.EXT_CLAIM_ID\n    WHERE t1.CLAIM_URI = 'urn:ietf:params:scim:schemas:core:2.0:id');\n</code></pre> <ul> <li>Oracle</li> </ul> <pre><code>select DISTINCT t.ATTRIBUTE_NAME\n    FROM IDN_CLAIM_MAPPED_ATTRIBUTE t\n      WHERE t.LOCAL_CLAIM_ID IN ( SELECT t2.MAPPED_LOCAL_CLAIM_ID\n      FROM IDN_CLAIM_MAPPING t2\n      JOIN IDN_CLAIM t1\n      ON t1.ID = t2.EXT_CLAIM_ID\n      WHERE t1.CLAIM_URI = 'urn:ietf:params:scim:schemas:core:2.0:id'   \n)\n/\n</code></pre> <ul> <li>MySQL</li> </ul> <pre><code>SELECT DISTINCT t.ATTRIBUTE_NAME \n  FROM IDN_CLAIM_MAPPED_ATTRIBUTE t \n  WHERE t.LOCAL_CLAIM_ID IN(\n  SELECT t2.MAPPED_LOCAL_CLAIM_ID\n  FROM IDN_CLAIM_MAPPING t2 \n  JOIN IDN_CLAIM t1\n  ON t1.ID = t2.EXT_CLAIM_ID \n  WHERE t1.CLAIM_URI ='urn:ietf:params:scim:schemas:core:2.0:id' \n) ;\n</code></pre> <ul> <li>MS SQL</li> </ul> <pre><code>SELECT DISTINCT t.ATTRIBUTE_NAME \n    FROM IDN_CLAIM_MAPPED_ATTRIBUTE AS t\n    WHERE t.LOCAL_CLAIM_ID IN ( SELECT t2.MAPPED_LOCAL_CLAIM_ID\n    FROM IDN_CLAIM_MAPPING AS t2\n    JOIN IDN_CLAIM AS t1\n    ON t1.ID = t2.EXT_CLAIM_ID\n    WHERE t1.CLAIM_URI = 'urn:ietf:params:scim:schemas:core:2.0:id'\n);\n</code></pre> </li> <li> <p>If the result of the above query is <code>scimId</code> then follow this step. Otherwise, skip this and move on to step-4.  </p> <p>If the result of the above query is <code>scimId</code>, it means the default mapped attribute(scimId) of <code>http://wso2.org/claims/userid</code> or the default local claim (<code>http://wso2.org/claims/userid</code>) mapped to the <code>urn:ietf:params:scim:schemas:core:2.0:id</code> claim is not updated in the WSO2 IS server.  Hence, the following queries are used to update the <code>UM_USER_ID</code> of <code>UM_USER</code> with SCIM Id based on the mapped attribute <code>scimId</code>.</p> <ul> <li>PostgreSQL</li> </ul> <pre><code>CREATE OR REPLACE FUNCTION update_um_user_id()    returns int \nLANGUAGE plpgsql\nAS $$\nDECLARE \ncount_rows int;\ncur_um_attr cursor for select T2.um_attr_value, T1.um_id\n          from um_user_attribute  T2\n            join um_user T1\n            on T1.um_Id = T2.um_user_id \n            where T2.um_attr_name ='scimId';\n\nrec_um_attr RECORD;       \nBEGIN\n  count_rows = 0; \n  open cur_um_attr;\n    LOOP\n          fetch cur_um_attr into rec_um_attr;\n      exit when not found;\n\n        update um_user\n        set um_user_id=rec_um_attr.um_attr_value\n        where um_id = rec_um_attr.um_id;  \n\n    count_rows = count_rows + 1;\n    END LOOP;         \n  close cur_um_attr;\nreturn count_rows;        \nEND;\n$$;\nselect update_um_user_id();\nCREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";\nupdate um_user set um_user_id=uuid_generate_v4() where um_user_id = 'N';\n</code></pre> <ul> <li>Oracle</li> </ul> <pre><code>DECLARE\nv_um_attr_value varchar2(100);\nv_um_id number;\nCURSOR cur_um_attr IS\n      select T2.um_attr_value, T1.um_id\n        from um_user_attribute  T2\n          join um_user T1\n          on T1.um_Id = T2.um_user_id \n          where T2.um_attr_name ='scimId';    \nBEGIN \n\n  OPEN cur_um_attr;\n  LOOP\n    FETCH cur_um_attr INTO v_um_attr_value, v_um_id;\n      IF cur_um_attr%NOTFOUND THEN\n              EXIT;\n            END If;\n\n          update um_user\n      set um_user_id = v_um_attr_value\n      where um_id =  v_um_id;     \n\n  END LOOP;\n  CLOSE cur_um_attr; \n\nEND;\n/\n</code></pre> <ul> <li>My SQL</li> </ul> <pre><code>ALTER TABLE UM_USER ADD COLUMN UM_USER_ID CHAR(36) NOT NULL DEFAULT 'NONE';\nALTER TABLE UM_USER ADD UNIQUE(UM_USER_ID, UM_TENANT_ID);\nDELIMITER $$\nCREATE FUNCTION update_um_user_id() RETURNS int\nDETERMINISTIC \nBEGIN\n  DECLARE count_rows int;\n  DECLARE um_usr_attr_value varchar(100);\n  DECLARE um_id int;\n  DECLARE done INT DEFAULT FALSE;\n  DECLARE cur_um_attr CURSOR FOR \nSELECT\n  T2.UM_ATTR_VALUE,\n  T1.UM_ID \nFROM\n  UM_USER_ATTRIBUTE T2 \n  JOIN\n      UM_USER T1 \n      ON T1.UM_ID = T2.UM_USER_ID \nWHERE\n  T2.UM_ATTR_NAME = 'scimId';\nDECLARE CONTINUE HANDLER FOR NOT FOUND \nSET\n  done = TRUE;\nSET\n  count_rows = 0;\nOPEN cur_um_attr;\nread_loop: loop FETCH cur_um_attr INTO um_usr_attr_value,\num_id;\nIF done \nTHEN\n  LEAVE read_loop;\nEND\nIF;\nUPDATE\n  UM_USER \nSET\n  UM_USER_ID = um_usr_attr_value \nWHERE\n  UM_ID = um_id;\nSET\n  count_rows = count_rows + 1;\nEND\nloop;\nCLOSE cur_um_attr;\nRETURN count_rows;\nEND\n$$ DELIMITER ;\nSELECT\n  update_um_user_id();\nUPDATE\n  UM_USER \nSET\n  UM_USER_ID = UUID() \nWHERE\n  UM_USER_ID IS NULL;\n</code></pre> <ul> <li>MS SQL</li> </ul> <pre><code>IF NOT EXISTS(SELECT * FROM sys.columns WHERE Name = 'UM_USER_ID' \n          AND object_id = OBJECT_ID('UM_USER'))\nBEGIN\nALTER TABLE UM_USER ADD UM_USER_ID CHAR(36) DEFAULT 'N' \nEND\nBEGIN\n  DECLARE @count_rows int\n  DECLARE @um_attr_value varchar(100)\n  DECLARE @um_id int\n\n    DECLARE cur_um_attr CURSOR LOCAL FOR select T2.UM_ATTR_VALUE, T1.UM_ID\n          from UM_USER_ATTRIBUTE T2\n            join UM_USER T1\n            on T1.UM_ID = T2.UM_USER_ID \n            where T2.um_attr_name ='scimId'       \n\n  SET @count_rows = 0\n\n  OPEN cur_um_attr    \n  -- loop through a cursor\n  FETCH NEXT FROM cur_um_attr INTO @um_attr_value, @um_id\n    WHILE @@FETCH_STATUS = 0\n        BEGIN     \n        update UM_USER \n        set UM_USER_ID = @um_attr_value\n        where UM_ID =  @um_id \n\n      SET @count_rows = @count_rows + 1\n      FETCH NEXT FROM cur_um_attr INTO @um_attr_value, @um_id\n    END   \n\n  CLOSE cur_um_attr\nEND;\n\nupdate UM_USER set UM_USER_ID =LOWER(NEWID())  where UM_USER_ID='N' ;\n</code></pre> </li> <li> <p>If the result of the above query is something different from <code>scimId</code>, it means the local claim mapped to the <code>urn:ietf:params:scim:schemas:core:2.0:id</code>  claim is different than   <code>http://wso2.org/claims/userid</code> or the mapped attribute for the local claim <code>http://wso2.org/claims/userid</code> is different than <code>scimId</code>. Hence the following queries are used to update the <code>UM_USER_ID</code> of <code>UM_USER</code> with SCIM Id based on the updated mapped attribute.</p> <ul> <li>PostgreSQL</li> </ul> <pre><code>CREATE OR REPLACE FUNCTION update_um_user_id()    returns int \nLANGUAGE plpgsql\nAS $$\nDECLARE \ncount_rows int;\ncur_um_attr CURSOR FOR SELECT T2.um_attr_value, T1.um_id \n  FROM   um_user_attribute T2 \n  JOIN   um_user T1 \n  ON     T1.um_id = T2.um_user_id \n  WHERE  T2.um_attr_name IN \n        ( \n                SELECT T.attribute_name \n                FROM   idn_claim_mapped_attribute AS T \n                WHERE  T.local_claim_id IN \n                      (      SELECT T3.mapped_local_claim_id \n                              FROM   idn_claim_mapping AS T3 \n                              JOIN   idn_claim         AS T4 \n                              ON     T4.id = T3.ext_claim_id \n                              WHERE  T4.claim_uri = 'urn:ietf:params:scim:schemas:core:2.0:id') );\n\nrec_um_attr RECORD;       \nBEGIN\n  count_rows = 0; \n  open cur_um_attr;\n    LOOP\n          fetch cur_um_attr into rec_um_attr;\n      exit when not found;\n\n        update um_user\n        set um_user_id=rec_um_attr.um_attr_value\n        where um_id = rec_um_attr.um_id;  \n\n    count_rows = count_rows + 1;\n    END LOOP;         \n  close cur_um_attr;\nreturn count_rows;        \nEND;\n$$;\nselect update_um_user_id();\nCREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";\nupdate um_user set um_user_id=uuid_generate_v4() where um_user_id = 'N';\n</code></pre> <ul> <li>Oracle</li> </ul> <pre><code>DECLARE\nv_um_attr_value varchar2(100);\nv_um_id number;\nCURSOR cur_um_attr IS\n        select DISTINCT t.ATTRIBUTE_NAME\n        FROM IDN_CLAIM_MAPPED_ATTRIBUTE t\n          WHERE t.LOCAL_CLAIM_ID IN ( SELECT t2.MAPPED_LOCAL_CLAIM_ID\n          FROM IDN_CLAIM_MAPPING t2\n          JOIN IDN_CLAIM t1\n          ON t1.ID = t2.EXT_CLAIM_ID\n          WHERE t1.CLAIM_URI = 'urn:ietf:params:scim:schemas:core:2.0:id'   \n)\n\nBEGIN \n\n  OPEN cur_um_attr;\n  LOOP\n    FETCH cur_um_attr INTO v_um_attr_value, v_um_id;\n      IF cur_um_attr%NOTFOUND THEN\n              EXIT;\n            END If;\n\n          update um_user\n      set um_user_id = v_um_attr_value\n      where um_id =  v_um_id;     \n\n  END LOOP;\n  CLOSE cur_um_attr; \n\nEND;\n/\n</code></pre> <ul> <li>My SQL </li> </ul> <pre><code>ALTER TABLE UM_USER ADD COLUMN UM_USER_ID CHAR(36) NOT NULL DEFAULT 'NONE';\nALTER TABLE UM_USER ADD UNIQUE(UM_USER_ID, UM_TENANT_ID);\nDELIMITER $$ CREATE FUNCTION update_um_user_id() RETURNS int DETERMINISTIC \nBEGIN\n  DECLARE count_rows int;\n  DECLARE um_usr_attr_value varchar(100);\n  DECLARE um_id int;\n  DECLARE done INT DEFAULT FALSE;\n  DECLARE cur_um_attr CURSOR FOR \nSELECT\n  T2.UM_ATTR_VALUE,\n  T1.UM_ID \nFROM\n  UM_USER_ATTRIBUTE T2 \n  join\n      UM_USER T1 \n      on T1.UM_ID = T2.UM_USER_ID \nWHERE\n  T2.UM_ATTR_NAME in \n  (\n      SELECT\n        T.ATTRIBUTE_NAME \n      FROM\n        IDN_CLAIM_MAPPED_ATTRIBUTE as T \n      WHERE\n        T.LOCAL_CLAIM_ID in \n        (\n            SELECT\n              T3.MAPPED_LOCAL_CLAIM_ID \n            FROM\n              IDN_CLAIM_MAPPING as T3 \n              JOIN\n                  IDN_CLAIM as T4 \n                  on T4.ID = T3.EXT_CLAIM_ID \n            WHERE\n              T4.CLAIM_URI = 'urn:ietf:params:scim:schemas:core:2.0:id' \n        )\n  )\n;\nDECLARE CONTINUE HANDLER FOR NOT FOUND \nSET\n  done = TRUE;\nSET\n  count_rows = 0;\nOPEN cur_um_attr;\nread_loop: loop FETCH cur_um_attr INTO um_usr_attr_value,\num_id;\nIF done \nTHEN\n  LEAVE read_loop;\nEND\nIF;\nUPDATE\n  UM_USER \nSET\n  UM_USER_ID = um_usr_attr_value \nWHERE\n  UM_ID = um_id;\nSET\n  count_rows = count_rows + 1;\nEND\nloop;\nCLOSE cur_um_attr;\nRETURN count_rows;\nEND\n$$ DELIMITER ;\nSELECT\n  update_um_user_id();\nUPDATE\n  UM_USER \nSET\n  UM_USER_ID = UUID() \nWHERE\n  UM_USER_ID IS NULL;\n</code></pre> <ul> <li>MS SQL</li> </ul> <pre><code>IF NOT EXISTS(SELECT * FROM sys.columns WHERE Name = 'UM_USER_ID' \n          AND object_id = OBJECT_ID('UM_USER'))\nBEGIN\nALTER TABLE UM_USER ADD UM_USER_ID CHAR(36) DEFAULT 'N' \nEND\nBEGIN\n  DECLARE @count_rows int\n  DECLARE @um_attr_value varchar(100)\n  DECLARE @um_id int\n\n    DECLARE cur_um_attr CURSOR LOCAL FOR SELECT T2.um_attr_value, T1.um_id \n      FROM um_user_attribute T2 \n      JOIN um_user T1 \n      ON T1.um_id = T2.um_user_id \n      WHERE  T2.um_attr_name \n          IN (SELECT T.attribute_name \n                          FROM   idn_claim_mapped_attribute AS T \n                          WHERE  T.local_claim_id IN \n                                  (SELECT T3.mapped_local_claim_id \n                                  FROM   idn_claim_mapping AS T3 \n                                  JOIN idn_claim AS T4 \n                                  ON T4.id = T3.ext_claim_id \n                                  WHERE T4.claim_uri = 'urn:ietf:params:scim:schemas:core:2.0:id'))           \n\n  SET @count_rows = 0\n        OPEN cur_um_attr  \n  -- loop through a cursor\n  FETCH NEXT FROM cur_um_attr INTO @um_attr_value, @um_id\n    WHILE @@FETCH_STATUS = 0\n        BEGIN     \n        UPDATE UM_USER \n    SET UM_USER_ID = @um_attr_value\n    where UM_ID =  @um_id \n\n    SET @count_rows = @count_rows + 1\n    FETCH NEXT FROM cur_um_attr INTO @um_attr_value, @um_id\n      END     \n\n  CLOSE cur_um_attr\nEND;\n\nUPDATE UM_USER SET UM_USER_ID =LOWER(NEWID())  WHERE UM_USER_ID='N' ;\n</code></pre> </li> </ol>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-what-has-changed/","title":"What Has Changed","text":"<p>WSO2 Identity Server 5.10.0 brings a range of new features and major improvements. In IS 5.10.0 following aspects has  been changed compared to the previous IS versions.</p> <p>This page provides details about the behavioral changes from WSO2 Identity Server 5.9.0 to 5.10.0.</p> <p>If you are migrating from an older version of Identity Server</p> <p>In order to find the changes introduced in the previous versions please see the following documents:</p> <ul> <li>What Has Changed in IS 5.9.0</li> <li>Changes introduced in IS 5.8.0 and before can be found in the Migrating Configurations to IS 5.8.0 section of the Upgrading From an Older Version of WSO2 IS document.</li> </ul>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-what-has-changed/#handling-last-login-time-as-an-identity-claim","title":"Handling Last login Time as an Identity Claim","text":"<p>In the previous versions of WSO2 Identity Server, the Last login time claim (used in account suspension) has been handled  as a default claim. From IS 5.10.0 onwards it will be handled as an identity claim. </p> <p>Note</p> <p>If you want to have the previous behaviour please add the following property in the <code>deployment.toml</code> file located at <code>&lt;IS_HOME&gt;/repository/conf/</code> directory.</p> <pre><code>[identity_mgt_account_suspension]\nuse_identity_claims = false\n</code></pre>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-what-has-changed/#scim-has-been-enabled-by-default","title":"SCIM has been enabled by default","text":"<p>From WSO2 Identity Server 5.10.0 onwards SCIM has been enabled by default for all the User Store Manager types. </p>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-what-has-changed/#email-templates-has-been-changed-for-account-lock","title":"Email Templates has been changed for Account Lock","text":"<p>From IS 5.10.0 onwards, different set of email templates will be used for account lock feature to notify the below  events,</p> <ul> <li>Account locking by exceeding <code>Maximum Failed Login Attempts</code> - AccountLockFailedAttempt</li> <li>Account unlocking by exceeding <code>Account Unlock Time</code> - AccountUnlockTimeBased</li> <li>Account locking by administrator - AccountLockAdmin</li> <li>Account unlocking by administrator - AccountUnlockAdmin</li> </ul> <p>If the above new templates are not available in the server, then the old templates will be used to notify account lock  events which are AccountLock and AccountUnLock. </p> <p>If you wish to have the new templates, then please add the following templates at management by referring to the  instructions at Customizing AutomatedEmails. Consider that you should  migrate the customization done to the previous templates to the newly added templates. </p> <ul> <li> <p>Sample template for \"AccountLockFailedAttempt\"</p> <ul> <li>Email Template Type: AccountLockFailedAttempt</li> <li>Email Template Locale: English(United States)</li> <li>Email Content Type:text/html</li> <li>Email Template Subject: WSO2 - Your Account has been Locked</li> <li>Email Body:      <pre><code>&lt;![CDATA[\n&lt;table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\"bgcolor=\"#f0f0f0\"&gt;\n&lt;tr&gt;\n&lt;td style=\"padding: 30px 30px 20px 30px;\"&gt;\n    &lt;table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\" bgcolor=\"#ffffff\" style=\"max-width: 650px; margin: auto;\"&gt;\n        &lt;tr&gt;\n            &lt;td colspan=\"2\" align=\"center\" style=\"background-color: #333; padding: 40px;\"&gt;\n            &lt;a href=\"http://wso2.com/\" target=\"_blank\"&gt;&lt;img src=\"http://cdn.wso2.com/wso2/newsletter/images/nl-2017/wso2-logo-transparent.png\" border=\"0\"/&gt;&lt;/a&gt;\n            &lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td colspan=\"2\" align=\"center\" style=\"padding: 50px 50px 0px 50px;\"&gt;\n            &lt;h1 style=\"padding-right: 0em; margin: 0; line-height: 40px; font-weight:300; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #666; text-align: left; padding-bottom: 1em;\"&gt;\n                Account Locked\n            &lt;/h1&gt;\n            &lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td style=\"text-align: left; padding: 0px 50px;\" valign=\"top\"&gt;\n            &lt;p style=\"font-size: 18px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #666; text-align: left; padding-bottom: 3%;\"&gt;\n                Hi [user.claim.givenname],\n            &lt;/p&gt;\n            &lt;p style=\"font-size: 18px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #666; text-align: left; padding-bottom: 3%;\"&gt;\n                Please note that the account registered with the user name &lt;b&gt;[user-name]&lt;/b&gt; has been locked. Please try again later. &lt;br&gt;\n            &lt;/p&gt;\n            &lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td style=\"text-align: left; padding: 30px 50px 50px 50px\" valign=\"top\"&gt;\n            &lt;p style=\"font-size: 18px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #505050; text-align: left;\"&gt;\n                Thanks,&lt;br/&gt;WSO2 Identity Server Team\n            &lt;/p&gt;\n            &lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td colspan=\"2\" align=\"center\" style=\"padding: 20px 40px 40px 40px;\" bgcolor=\"#f0f0f0\"&gt;\n            &lt;p style=\"font-size: 12px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #777;\"&gt;\n                &amp;copy; 2018\n                &lt;a href=\"http://wso2.com/\" target=\"_blank\" style=\"color: #777; text-decoration: none\"&gt;WSO2&lt;/a&gt;\n                &lt;br&gt;\n                787 Castro Street, Mountain View, CA 94041.\n            &lt;/p&gt;\n            &lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/table&gt;\n&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/table&gt;\n]]\n</code></pre></li> <li>Email Footer: ---</li> </ul> </li> <li> <p>Sample template for \"AccountUnlockTimeBased\"</p> <ul> <li>Email Template Type: AccountUnlockTimeBased</li> <li>Email Template Locale: English(United States)</li> <li>Email Content Type:text/html</li> <li>Email Template Subject: WSO2 - Your Account has been Unlocked</li> <li> <p>Email Body: </p> <p><pre><code>&lt;![CDATA[&lt;table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\"bgcolor=\"#f0f0f0\"&gt;\n    &lt;tr&gt;\n    &lt;td style=\"padding: 30px 30px 20px 30px;\"&gt;\n        &lt;table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\" bgcolor=\"#ffffff\" style=\"max-width: 650px; margin: auto;\"&gt;\n        &lt;tr&gt;\n            &lt;td colspan=\"2\" align=\"center\" style=\"background-color: #333; padding: 40px;\"&gt;\n                &lt;a href=\"http://wso2.com/\" target=\"_blank\"&gt;&lt;img src=\"http://cdn.wso2.com/wso2/newsletter/images/nl-2017/wso2-logo-transparent.png\" border=\"0\" /&gt;&lt;/a&gt;\n            &lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td colspan=\"2\" align=\"center\" style=\"padding: 50px 50px 0px 50px;\"&gt;\n                &lt;h1 style=\"padding-right: 0em; margin: 0; line-height: 40px; font-weight:300; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #666; text-align: left; padding-bottom: 1em;\"&gt;\n                    Account Unlocked\n                &lt;/h1&gt;\n            &lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td style=\"text-align: left; padding: 0px 50px;\" valign=\"top\"&gt;\n                &lt;p style=\"font-size: 18px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #666; text-align: left; padding-bottom: 3%;\"&gt;\n                    Hi [user.claim.givenname]\n                &lt;/p&gt;\n                &lt;p style=\"font-size: 18px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #666; text-align: left; padding-bottom: 3%;\"&gt;\n                    Please note that the account registered with the user name &lt;b&gt;[user-name]&lt;/b&gt; has been unlocked automatically as locked time exceeded.  &lt;br&gt;\n                &lt;/p&gt;\n            &lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td style=\"text-align: left; padding: 30px 50px 50px 50px\" valign=\"top\"&gt;\n                &lt;p style=\"font-size: 18px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #505050; text-align: left;\"&gt;\n                    Thanks,&lt;br/&gt;WSO2 Identity Server Team\n                &lt;/p&gt;\n            &lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td colspan=\"2\" align=\"center\" style=\"padding: 20px 40px 40px 40px;\" bgcolor=\"#f0f0f0\"&gt;\n                &lt;p style=\"font-size: 12px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #777;\"&gt;\n                    &amp;copy; 2018\n                    &lt;a href=\"http://wso2.com/\" target=\"_blank\" style=\"color: #777; text-decoration: none\"&gt;WSO2&lt;/a&gt;\n                    &lt;br&gt;\n                    787 Castro Street, Mountain View, CA 94041.\n                &lt;/p&gt;\n            &lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;/table&gt;\n    &lt;/td&gt;\n &lt;/tr&gt;\n&lt;/table&gt;]]&gt;\n</code></pre>      - Email Footer: ---</p> </li> </ul> </li> <li> <p>Sample template for \"AccountLockAdmin\"</p> <ul> <li>Email Template Type: AccountLockAdmin</li> <li>Email Template Locale: English(United States)</li> <li>Email Content Type:text/html</li> <li>Email Template Subject: WSO2 - Your Account has been Locked</li> <li>Email Body:      <code>&lt;![CDATA[&lt;table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\"bgcolor=\"#f0f0f0\"&gt;     &lt;tr&gt;     &lt;td style=\"padding: 30px 30px 20px 30px;\"&gt;         &lt;table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\" bgcolor=\"#ffffff\" style=\"max-width: 650px; margin: auto;\"&gt;         &lt;tr&gt;             &lt;td colspan=\"2\" align=\"center\" style=\"background-color: #333; padding: 40px;\"&gt;                 &lt;a href=\"http://wso2.com/\" target=\"_blank\"&gt;&lt;img src=\"http://cdn.wso2.com/wso2/newsletter/images/nl-2017/wso2-logo-transparent.png\" border=\"0\"/&gt;&lt;/a&gt;             &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td colspan=\"2\" align=\"center\" style=\"padding: 50px 50px 0px 50px;\"&gt;                 &lt;h1 style=\"padding-right: 0em; margin: 0; line-height: 40px; font-weight:300; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #666; text-align: left; padding-bottom: 1em;\"&gt;                     Account Locked                 &lt;/h1&gt;             &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td style=\"text-align: left; padding: 0px 50px;\" valign=\"top\"&gt;                 &lt;p style=\"font-size: 18px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #666; text-align: left; padding-bottom: 3%;\"&gt;                     Hi [user.claim.givenname],                 &lt;/p&gt;                 &lt;p style=\"font-size: 18px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #666; text-align: left; padding-bottom: 3%;\"&gt;                     Please note that the account registered with the user name &lt;b&gt;[user-name]&lt;/b&gt; has been locked. Please Contact the Administrator.&lt;br&gt;                 &lt;/p&gt;             &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td style=\"text-align: left; padding: 30px 50px 50px 50px\" valign=\"top\"&gt;                 &lt;p style=\"font-size: 18px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #505050; text-align: left;\"&gt;                     Thanks,&lt;br/&gt;WSO2 Identity Server Team                 &lt;/p&gt;             &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td colspan=\"2\" align=\"center\" style=\"padding: 20px 40px 40px 40px;\" bgcolor=\"#f0f0f0\"&gt;                 &lt;p style=\"font-size: 12px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #777;\"&gt;                     &amp;copy; 2018                     &lt;a href=\"http://wso2.com/\" target=\"_blank\" style=\"color: #777; text-decoration: none\"&gt;WSO2&lt;/a&gt;                     &lt;br&gt;                     787 Castro Street, Mountain View, CA 94041.                 &lt;/p&gt;             &lt;/td&gt;         &lt;/tr&gt;         &lt;/table&gt;      &lt;/td&gt;      &lt;/tr&gt;     &lt;/table&gt;]]&gt;</code></li> <li>Email Footer: ---</li> </ul> </li> <li> <p>Sample template for \"AccountUnlockAdmin\"</p> <ul> <li>Email Template Type: AccountUnlockAdmin</li> <li>Email Template Locale: English(United States)</li> <li>Email Content Type:text/html</li> <li>Email Template Subject: WSO2 - Your Account has been Unlocked</li> <li>Email Body:      <pre><code>&lt;![CDATA[&lt;table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\"bgcolor=\"#f0f0f0\"&gt;\n&lt;tr&gt;\n&lt;td style=\"padding: 30px 30px 20px 30px;\"&gt;\n    &lt;table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\" bgcolor=\"#ffffff\" style=\"max-width: 650px; margin: auto;\"&gt;\n    &lt;tr&gt;\n        &lt;td colspan=\"2\" align=\"center\" style=\"background-color: #333; padding: 40px;\"&gt;\n            &lt;a href=\"http://wso2.com/\" target=\"_blank\"&gt;&lt;img src=\"http://cdn.wso2.com/wso2/newsletter/images/nl-2017/wso2-logo-transparent.png\" border=\"0\" /&gt;&lt;/a&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td colspan=\"2\" align=\"center\" style=\"padding: 50px 50px 0px 50px;\"&gt;\n            &lt;h1 style=\"padding-right: 0em; margin: 0; line-height: 40px; font-weight:300; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #666; text-align: left; padding-bottom: 1em;\"&gt;\n                Account Unlocked\n            &lt;/h1&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td style=\"text-align: left; padding: 0px 50px;\" valign=\"top\"&gt;\n            &lt;p style=\"font-size: 18px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #666; text-align: left; padding-bottom: 3%;\"&gt;\n                Hi [user.claim.givenname],\n            &lt;/p&gt;\n            &lt;p style=\"font-size: 18px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #666; text-align: left; padding-bottom: 3%;\"&gt;\n                Please note that the account registered with the user name &lt;b&gt;[user-name]&lt;/b&gt; has been unlocked by administrator. &lt;br&gt;\n            &lt;/p&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td style=\"text-align: left; padding: 30px 50px 50px 50px\" valign=\"top\"&gt;\n            &lt;p style=\"font-size: 18px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #505050; text-align: left;\"&gt;\n                Thanks,&lt;br/&gt;WSO2 Identity Server Team\n            &lt;/p&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td colspan=\"2\" align=\"center\" style=\"padding: 20px 40px 40px 40px;\" bgcolor=\"#f0f0f0\"&gt;\n            &lt;p style=\"font-size: 12px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #777;\"&gt;\n                &amp;copy; 2018\n                &lt;a href=\"http://wso2.com/\" target=\"_blank\" style=\"color: #777; text-decoration: none\"&gt;WSO2&lt;/a&gt;\n                &lt;br&gt;\n                787 Castro Street, Mountain View, CA 94041.\n            &lt;/p&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;/table&gt;\n&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/table&gt;]]&gt;\n&lt;![CDATA[&lt;table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\"bgcolor=\"#f0f0f0\"&gt;\n&lt;tr&gt;\n&lt;td style=\"padding: 30px 30px 20px 30px;\"&gt;\n    &lt;table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\" bgcolor=\"#ffffff\" style=\"max-width: 650px; margin: auto;\"&gt;\n    &lt;tr&gt;\n        &lt;td colspan=\"2\" align=\"center\" style=\"background-color: #333; padding: 40px;\"&gt;\n            &lt;a href=\"http://wso2.com/\" target=\"_blank\"&gt;&lt;img src=\"http://cdn.wso2.com/wso2/newsletter/images/nl-2017/wso2-logo-transparent.png\" border=\"0\" /&gt;&lt;/a&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td colspan=\"2\" align=\"center\" style=\"padding: 50px 50px 0px 50px;\"&gt;\n            &lt;h1 style=\"padding-right: 0em; margin: 0; line-height: 40px; font-weight:300; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #666; text-align: left; padding-bottom: 1em;\"&gt;\n                Account Unlocked\n            &lt;/h1&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td style=\"text-align: left; padding: 0px 50px;\" valign=\"top\"&gt;\n            &lt;p style=\"font-size: 18px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #666; text-align: left; padding-bottom: 3%;\"&gt;\n                Hi [user.claim.givenname],\n            &lt;/p&gt;\n            &lt;p style=\"font-size: 18px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #666; text-align: left; padding-bottom: 3%;\"&gt;\n                Please note that the account registered with the user name &lt;b&gt;[user-name]&lt;/b&gt; has been unlocked by administrator. &lt;br&gt;\n            &lt;/p&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td style=\"text-align: left; padding: 30px 50px 50px 50px\" valign=\"top\"&gt;\n            &lt;p style=\"font-size: 18px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #505050; text-align: left;\"&gt;\n                Thanks,&lt;br/&gt;WSO2 Identity Server Team\n            &lt;/p&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td colspan=\"2\" align=\"center\" style=\"padding: 20px 40px 40px 40px;\" bgcolor=\"#f0f0f0\"&gt;\n            &lt;p style=\"font-size: 12px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #777;\"&gt;\n                &amp;copy; 2018\n                &lt;a href=\"http://wso2.com/\" target=\"_blank\" style=\"color: #777; text-decoration: none\"&gt;WSO2&lt;/a&gt;\n                &lt;br&gt;\n                787 Castro Street, Mountain View, CA 94041.\n            &lt;/p&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;/table&gt;\n&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/table&gt;]]&gt;\n</code></pre></li> <li>Email Footer: ---</li> </ul> </li> </ul>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-what-has-changed/#handling-internal-scopes","title":"Handling Internal Scopes","text":"<p>From IS 5.10.0 onwards, internal scopes validation while accessing internal resources will be enabled by default,  but this will break existing applications using some APIs such as scim2/Me.</p> <p>Note</p> <p>We can go back to the previous behaviour and disable scope based permissions with the following config in the <code>deployment.toml</code> file.</p> <pre><code>[resource_access_control]\ndisable_scope_validation=true\n</code></pre>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-what-has-changed/#introducing-two-separate-configuration-to-manage-oidc-consent-flow","title":"Introducing two Separate Configuration to Manage OIDC Consent Flow","text":"<p>This will introduce the following two new properties in the <code>identity.xml</code> inside OpenIDConnect tag to manage the  consent during OIDC login and logout flows. - SkipLoginConsent - Skip the OIDC login consent - SkipLogoutConsent - Skip the OIDC logout consent</p> <p>If these properties are not defined, the value will be retrieved from SkipUserConsent</p> <p>These properties can be managed by adding the below configuration to <code>deployment.toml</code> file <pre><code>[oauth]\nprompt_login_consent = false\nprompt_logout_consent = false\n</code></pre></p>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-what-has-changed/#wsdl-of-the-application-management-service-has-been-changed","title":"WSDL of the Application Management Service has been changed","text":"<p>In IS 5.10.0, there are significant changes has been introduced to the WSDL of the Application Management Admin Service  with the addition of new properties to the service provider model object. Therefore SOAP API consumers should  regenerate the stub or upgrade the dependency version of the stub.</p>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-what-has-changed/#wsdl-of-the-identity-provider-management-service-has-been-changed","title":"WSDL of the Identity Provider Management Service has been changed","text":"<p>In IS 5.10.0, there are significant changes has been introduced to the WSDL of the Identity Provider Management  Admin Service with the addition of new properties to the service provider model object. Therefore SOAP API consumers  should regenerate the stub or upgrade the dependency version of the stub.</p>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-what-has-changed/#wsdl-of-the-user-account-association-service-has-been-changed","title":"WSDL of the User Account Association Service has been changed","text":"<p>In IS 5.10.0, there are significant changes has been introduced to the WSDL of the User Account Association  Admin Service with the addition of new properties to the service provider model object. Therefore SOAP API consumers  should regenerate the stub or upgrade the dependency version of the stub.</p>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-what-has-changed/#handling-sms-otp-error-response-using-internal-error-codes","title":"Handling SMS OTP Error Response using Internal Error Codes","text":"<p>From IS 5.10.0 onwards, SMS-OTP webapp uses internal error codes when there is an error response returned from the  SMS provider.</p> <p>Note</p> <p>To have the previous behaviour where the SMS-Provider error codes were used by SMS-OTP webapp, please add the below configuration in the <code>deployment.toml</code> file located at <code>&lt;IS_HOME&gt;/repository/conf/</code> directory.</p> <pre><code>[authentication.authenticator.sms_otp.parameters]\nUseInternalErrorCodes = false\n</code></pre>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-what-has-changed/#new-user-store-managers-with-built-in-unique-id-support","title":"New User Store Managers with built in unique ID support","text":"<p>New user store managers with inbuilt unique ID support will provide the capability to enhance the user store operations  that were initially architecturally impossible. These operations include username rename functionality and a  significant performance increase. as well. So migrating to new user store managers will allow us to use those new   features whenever those new features available.  </p> <p>New user store managers are named with the <code>UniqueiId</code> prefix for the old user store managers. For example, <code>JDBCUserStoreManager</code> with unique ID capabilities will be named as <code>UniqueIDJDBCUserStoreManager</code>.</p>"},{"location":"identity-server/migration-docs/is-5.10.0/migrating-what-has-changed/#thumbprint-certificate-hashing-algorithm","title":"Thumbprint certificate hashing algorithm","text":"<p>From IS 5.10.0 onwards, the hashing algorithm used for thumbprint certificate generation is updated to <code>SHA-256</code>. For versions before IS 5.10.0, WSO2 Identity Server used <code>SHA-1</code> as the hashing algorithm for thumbprint certificate generation.</p> <p>Therefore, if a user migrates from IS 5.9.0 or a lower version to 5.10.0, the previously issued JWTs will not be validated against the new thumbprint included in the JWKS response of the latest version.</p>"},{"location":"identity-server/migration-docs/is-5.10.0/migration-guide/","title":"Before you begin","text":"<p>This section walks you through the steps you need to follow to upgrade WSO2 Identity Server to version 5.10.0.\u00a0</p>"},{"location":"identity-server/migration-docs/is-5.10.0/migration-guide/#should-i-migrate","title":"Should I migrate?","text":"<p>WSO2 recommends upgrading to the latest version in order to ensure that users receive the latest updates for the product.</p> <ul> <li>For a high level overview of what has been added, changed, or     deprecated in this release, see About this     release.</li> <li>For a detailed overview of behavioral changes in this release, see the document on What Has Changed in IS 5.10.0.</li> </ul>"},{"location":"identity-server/migration-docs/is-5.10.0/migration-guide/#prerequisites","title":"Prerequisites","text":"<ol> <li> <p>Review what has been changed in this release. For a detailed list of     changes\u00a0from 5.9.0 to 5.10.0, see the document on What Has Changed in IS 5.10.0.</p> </li> <li> <p>Before you migrate, refer to the Migration Process document to get an understanding on the migration process.</p> </li> <li> <p>This release is a WUM-only release. This means that there are no manual patches. You can use WSO2 Update Manager(WUM) to get any fixes or latest updates for this release.</p> <p>Important</p> <p>If you are upgrading to use this version in your production environment, use WSO2 Update Manager to get the latest updates available for WSO2 IS 5.10.0.For more information on how to use WSO2 Update Manager, see Updating WSO2 Products.</p> </li> <li> <p>Take a backup of the existing database used by the current WSO2 Identity Server. This backup is necessary in case the migration causes any issues in the existing database.</p> </li> <li> <p>Download WSO2 Identity Server 5.10.0 and unzip it in the <code>&lt;NEW_IS_HOME&gt;</code> directory.</p> </li> <li> <p>Next, refer to the document on Preparing for migration.</p> </li> </ol>"},{"location":"identity-server/migration-docs/is-5.10.0/migration-process/","title":"Migration Process","text":"<p>This section contains the complete migration process related to the WSO2 Identity Server. Go through the guidelines given below before attempting to migrate the production environment.</p> <ol> <li> <p>If you already have a WSO2 subscription, reach out to our support team through  your support account.</p> </li> <li> <p>Always migrate to the latest version      since latest fixes and new features are available in the newest version. If you have a particular      requirement to migrate to an intermediate version, contact      WSO2 Support.</p> </li> </ol> <p>Note</p> <p>Migrating the production environment requires additional hardware/VM resources since both the old environment and the new environment will be running until all the traffic is routed to the new environment.</p> <ol> <li> <p>If you have customizations in your setup, check if they are supported out of the box in the latest version.</p> <ul> <li>If your customizations are already available in the latest version, you can remove the  customization after migration. You can contact WSO2 Support  for assistance.</li> <li> <p>If any custom requirement is not available in the latest version,  migrate the customization to support the latest product version. Note the following points.</p> <p>Migrating the customizations that are not available in the latest version</p> <ul> <li>First update the dependency version of the dependant WSO2 components and re-build the customized component.</li> <li>As a practice, WSO2 does not make API changes in minor releases of the dependency jars. However, if there are API changes, please update the custom code and re-build.</li> <li>For more information about migrating customizations, see the section on Migrating Custom Components.</li> </ul> </li> </ul> </li> <li> <p>List down the functional and nonfunctional use cases in your deployment and create test cases for them. </p> <p>NOTE</p> <p>This step is crucial to verify that the migrated environment works as expected.     </p> </li> <li> <p>Identify the configuration migrations required for the new setup. </p> <p>Note</p> <p>For more information about this release, see the document What Has Changed in IS 5.10.0.</p> </li> <li> <p>Prepare a test setup of the migrating version with customizations and necessary config changes, and test your functional and nonfunctional requirements.</p> </li> <li> <p>Before starting the migration, run the token and session  cleanup scripts  in the databases of the environment, if you are not doing regular cleanups.</p> <p>Info</p> <p>Clean-up scripts can be found in the relevant db folder in <code>&lt;IS-HOME&gt;/dbscripts/identity/stored-procedures</code>.</p> </li> <li> <p>Start the migration from the lowest environment such as dev and continue up to the highest before the production  such as pre-prod. Run the test cases in the migrated environments to confirm that your functional and nonfunctional  requirements are met in the migrated environment.</p> </li> <li> <p>Prior to the production migration, run a pilot migration on your pre-prod environment. It would be  ideal if the pre-prod environment is similar to the production environment.</p> <ul> <li>If possible, restore a database dump of the production environment to the pre-prod environment and  perform the pilot migration.</li> <li>If the production database dump cannot be used, at least ensure that you have a sufficient amount  of data in the database to mimic the production environment.</li> </ul> </li> <li> <p>When you follow the above steps, you can get a rough estimate of the time for the final  production update and you can allocate time slots as per the above analysis. WSO2 recommends performing the  migration while the system is under minimum traffic.</p> </li> </ol> <p>Once you are satisfied with the above steps, proceed with production migration. After the migration is complete,  verify it using the following steps.</p> <ul> <li>Monitor the system health (CPU, memory usage etc).</li> <li>Monitor the WSO2 logs for errors.</li> </ul> <p>NOTE </p> <p>If you see any problems in the migrated system, revert the traffic back to the previous setup and investigate the problem.</p>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-preparing-for-migration/","title":"Preparing for migration","text":"<p>This guide helps you in preparing for migration to IS 5.11.0.</p> <p>For a high-level overview of what has been added, changed, or deprecated in this IS 5.11.0, see About this release.</p> <p>Note</p> <p>In this section, <code>&lt;OLD_IS_HOME&gt;</code> is the directory that the current Identity Server resides in, and <code>&lt;NEW_IS_HOME&gt;</code> is the directory that WSO2 Identity Server 5.11.0 resides in.</p> <p>Important</p> <p>Before proceeding with the migration, change the following property to <code>false</code> in the <code>&lt;IS_HOME&gt;/repository/conf/deployment.toml</code> file.</p> <pre><code>[super_admin]\ncreate_admin_account = false </code></pre>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-preparing-for-migration/#prerequisites","title":"Prerequisites","text":"<ol> <li> <p>Review what has been changed in this release. For a detailed list of changes from 5.10.0 to 5.11.0, see the What Has Changed in 5.11.0.</p> </li> <li> <p>Before you migrate, refer to the Migration Process document to understand the migration process.</p> </li> <li> <p>You can use the Update Management Tool(UMT) to get any fixes or latest updates for this release.</p> </li> <li> <p>Take a backup of the existing database used by the current WSO2 Identity Server. This backup is necessary if the migration causes any issues in the existing database.</p> </li> <li> <p>Download WSO2 Identity Server 5.11.0 and unzip it in the <code>&lt;NEW_IS_HOME&gt;</code> directory.</p> </li> <li> <p>Next, refer to the document on Preparing for migration.</p> </li> </ol>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-preparing-for-migration/#groups-and-roles-migration","title":"Groups and Roles Migration","text":"<p>With WSO2 Identity Server 5.11.0, groups and roles are separated. For more information, see the document on What Has Changed in 5.11.0.</p>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-preparing-for-migration/#migrating-custom-components","title":"Migrating custom components","text":"<p>In WSO2 Identity Server 5.11.0, we have done a major upgrade to our kernel and our main components. Any custom OSGi bundles added manually should be recompiled with new dependency versions relevant to the new WSO2 IS version. All custom OSGI components reside in the <code>&lt;OLD_IS_HOME&gt;/repository/components/dropins</code> directory.</p> <ol> <li> <p>Get the source codes of the custom OSGI components located in the dropins directory.</p> </li> <li> <p>Change the dependency versions in the relevant POM files according to the WSO2 IS version you are upgrading to and compile them. The compatible dependency versions can be found here.</p> </li> <li> <p>If you come across any compile time errors, refer to the WSO2 IS code base and make the necessary changes related to that particular component version.</p> </li> <li> <p>Add the compiled JAR files to the <code>&lt;NEW_IS_HOME&gt;/repository/components/dropins</code> directory.</p> </li> <li> <p>If there were any custom OSGI components in the <code>&lt;OLD_IS_HOME&gt;/repository/components/lib</code> directory, add newly compiled versions of those components to the <code>&lt;NEW_IS_HOME&gt;/repository/components/lib</code>  directory.</p> </li> </ol>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-preparing-for-migration/#migrating-the-configurations","title":"Migrating the configurations","text":"<p>Refer to the relevant feature documents and the What Has Changed in 5.11.0 document to do the configuration migration.</p> <p>Info</p> <p>If you have a WSO2 Subscription, it is highly recommended to reach WSO2 Support before attempting to proceed with the configuration migration.</p>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-to-5110/","title":"Migrating to 5.11.0","text":"<p>This section guides you through migrating from the earlier IS version to IS 5.11.0.</p>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-to-5110/#prerequisites","title":"Prerequisites","text":"<p>Make sure you have met the following prerequisites before proceeding with the instructions to migrate to 5.11.0. See the Prepare for Migration document.</p> <p>Note</p> <p>In this section, <code>&lt;OLD_IS_HOME&gt;</code> is the directory that the current Identity Server resides in, and <code>&lt;NEW_IS_HOME&gt;</code> is the WSO2 Identity Server 5.11.0 resides in. </p> <ul> <li> <p>If you are using DB2</p> <p>Move indexes to the TS32K Tablespace. The index tablespace in the <code>IDN_OAUTH2_ACCESS_TOKEN</code>  and <code>IDN_OAUTH2_AUTHORIZATION_CODE</code> tables need to be moved to the existing TS32K tablespace to support newly added table indexes. SQLADM or DBADM authority is required to invoke the <code>ADMIN_MOVE_TABLE</code> stored procedure. You must also have the appropriate object creation authorities, including authorities to issue the SELECT statement on the source table, and to issue the INSERT statement on the target table.</p> </li> <li> <p>Stored procedure</p> <p>Replace the &gt;<code>&lt;TABLE_SCHEMA_OF_IDN_OAUTH2_ACCESS_TOKEN_TABLE&gt;</code> and &gt;<code>&lt;TABLE_SCHEMA_OF_IDN_OAUTH2_AUTHORIZATION_CODE_TABLE&gt;</code> tags &gt;with the respective schema for the table. </p> <pre><code>CREATE BUFFERPOOL BP32K IMMEDIATE SIZE 250 AUTOMATIC &gt;PAGESIZE 32K;\n\nCREATE LARGE TABLESPACE TS32K PAGESIZE 32K MANAGED by &gt;AUTOMATIC STORAGE BUFFERPOOL BP32K;\n\nCALL SYSPROC.ADMIN_MOVE_TABLE(\n&lt;TABLE_SCHEMA_OF_IDN_OAUTH2_ACCESS_TOKEN_TABLE&gt;,\n'IDN_OAUTH2_ACCESS_TOKEN',\n(SELECT TBSPACE FROM SYSCAT.TABLES WHERE TABNAME = 'IDN_OAUTH2_ACCESS_TOKEN' AND TABSCHEMA = &lt;TABLE_SCHEMA_OF_IDN_OAUTH2_ACCESS_TOKEN_TABLE&gt;),\n'TS32K',\n(SELECT TBSPACE FROM SYSCAT.TABLES WHERE TABNAME = 'IDN_OAUTH2_ACCESS_TOKEN' AND TABSCHEMA = &lt;TABLE_SCHEMA_OF_IDN_OAUTH2_ACCESS_TOKEN_TABLE&gt;),\n'',\n'',\n'',\n'',\n'',\n'MOVE');\n\nCALL SYSPROC.ADMIN_MOVE_TABLE(\n&lt;TABLE_SCHEMA_OF_IDN_OAUTH2_AUTHORIZATION_CODE_TABLE&gt;,\n'IDN_OAUTH2_AUTHORIZATION_CODE',\n(SELECT TBSPACE FROM SYSCAT.TABLES WHERE TABNAME = 'IDN_OAUTH2_AUTHORIZATION_CODE' AND TABSCHEMA = &gt;&lt;TABLE_SCHEMA_OF_IDN_OAUTH2_AUTHORIZATION_CODE_TABLE&gt;),\n'TS32K',\n(SELECT TBSPACE FROM SYSCAT.TABLES WHERE TABNAME = 'IDN_OAUTH2_AUTHORIZATION_CODE' AND TABSCHEMA = &gt;&lt;TABLE_SCHEMA_OF_IDN_OAUTH2_AUTHORIZATION_CODE_TABLE&gt;),\n'',\n'',\n'',\n'',\n'',\n'MOVE');\n</code></pre> </li> </ul> <p>If you receive an error due to missing <code>SYSTOOLSPACE</code> or   <code>SYSTOOLSTMPSPACE</code> tablespaces, create those tablespaces &gt;manually using the following script before executing the stored &gt;procedure given above. For more information, see SYSTOOLSPACE &gt;and SYSTOOLSTMPSPACE table spaces in the IBM documentation.</p> <pre><code>CREATE TABLESPACE SYSTOOLSPACE IN IBMCATGROUP\nMANAGED BY AUTOMATIC STORAGE USING STOGROUP IBMSTOGROUP\nEXTENTSIZE 4;\n\nCREATE USER TEMPORARY TABLESPACE SYSTOOLSTMPSPACE IN IBMCATGROUP\nMANAGED BY AUTOMATIC STORAGE USING STOGROUP IBMSTOGROUP\nEXTENTSIZE 4;\n</code></pre>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-to-5110/#steps-to-migrate-to-5110","title":"Steps to migrate to 5.11.0","text":"<p>Once all the above prerequisites have been met, follow the instructions given below to migrate to the latest version.</p> <ol> <li> <p>If you have manually added any custom OSGI bundles to the <code>&lt;OLD_IS_HOME&gt;/repository/components/dropins</code> directory, copy those OSGI bundles to the <code>&lt;NEW_IS_HOME&gt;/repository/components/dropins</code> directory.</p> <p>Important</p> <p>You may need to update the custom components to work with WSO2 Identity Server 5.11.0. Refer the instruction Migrating custom components in the Prepare for Migration documentaion.</p> </li> <li> <p>If you have manually added JAR files to the <code>&lt;OLD_IS_HOME&gt;/repository/components/lib</code> directory, copy and paste those JARs into the <code>&lt;NEW_IS_HOME&gt;/repository/components/lib</code> directory.</p> </li> <li> <p>Copy the <code>.jks</code> files from the <code>&lt;OLD_IS_HOME&gt;/repository/resources/security</code> directory and paste them in the <code>&lt;NEW_IS_HOME&gt;/repository/resources/security</code> directory.</p> <p>Note</p> <p>In WSO2 Identity Server 5.11.0, it is required to use a certificate with an RSA key size greater than 2048. If you used a certificate with a weak RSA key (key size less than 2048) in the previous IS version, add the following configuration to <code>&lt;NEW_IS_HOME&gt;/repository/conf/deployment toml</code> to configure internal and primary key stores.</p> <pre><code>[keystore.primary]\nfile_name = \"primary.jks\"\ntype = \"JKS\"\npassword = \"wso2carbon\"\nalias = \"wso2carbon\"\nkey_password = \"wso2carbon\"\n\n[keystore.internal]\nfile_name = \"internal.jks\"\ntype = \"JKS\"\npassword = \"wso2carbon\"\nalias = \"wso2carbon\"\nkey_password = \"wso2carbon\"\n</code></pre> <p>Make sure to point the internal keystore to the keystore copied from the previous WSO2 Identity Server version. The primary keystore can be pointed to a keystore with a certificate with a strong RSA key.</p> </li> <li> <p>If you have created tenants in the previous WSO2 Identity Server version, copy the content from the <code>&lt;OLD_IS_HOME&gt;/repository/tenants</code> folder to the <code>&lt;NEW_IS_HOME&gt;/repository/tenants</code> folder.</p> <p>Note</p> <p>If you are migrating from IS 5.8.0 or a lower version, delete the <code>eventpublishers</code> and <code>eventstreams</code> folders from each tenant in the <code>tenants</code> folder when copying to IS 5.11.0. Make sure to back up the <code>tenants</code> folder before deleting the subfolders. You can use the following set of commands to find and delete all the relevant sub-folders at once:</p> <pre><code>cd &lt;NEW_IS_HOME&gt;/repository/tenants\nfind . -type d -name 'eventpublishers' -exec rm -rf {} +\nfind . -type d -name 'eventstreams' -exec rm -rf {} +\n</code></pre> </li> <li> <p>If you have created secondary user stores for the super tenant in the previous WSO2 IS version, copy the content in the <code>&lt;OLD_IS_HOME&gt;/repository/deployment/server/userstores</code> folder to the <code>&lt;NEW_IS_HOME&gt;/repository/deployment/server/userstores</code> folder. Secondary user stores of other tenants were migrated when you migrated the <code>tenants</code> folder in the previous step.</p> </li> <li> <p>If you have customized any existing web apps in the previous WSO2 Identity Server version, you should manually apply those changes to the relevant files with careful inspection.</p> <p>If you have deployed custom webapps in the previous WSO2 Identity Server, update the webapps to be compatible with WSO2 IS 5.11.0 and copy the webapps to the <code>&lt;NEW_IS_HOME&gt;/repository/deployment/server/webapps</code> folder.</p> </li> <li> <p>Ensure that you have migrated the configurations into the new version as advised in the document on preparing for migration document.</p> </li> <li> <p>Make sure that all the properties in the <code>&lt;IS_HOME&gt;/repository/conf/deployment.toml</code> file, such as the database configurations, are set to the correct values based on the requirement.</p> </li> <li> <p>Replace the <code>&lt;NEW_IS_HOME&gt;/repository/conf/email/email-admin-config.xml</code> file with    <code>&lt;OLD_IS_HOME&gt;/repository/conf/email/email-admin-config.xml</code>.   </p> </li> <li> <p>Follow the steps given below to perform database updates:</p> <ol> <li> <p>Get the migration client (<code>wso2is-migration-x.x.x.zip</code>) provided by the WSO2 team.</p> <p>Note - x.x.x of <code>wso2is-migration-x.x.x.zip</code> denotes the version number of the most recently-released migration resources. - The directory where the <code>wso2is-migration-x.x.x.zip</code> is unzipped will be referred to as <code>&lt;IS_MIGRATION_TOOL_HOME&gt;</code>.</p> </li> <li> <p>Copy the <code>org.wso2.carbon.is.migration-x.x.x.jar</code> file in the <code>&lt;IS_MIGRATION_TOOL_HOME&gt;/dropins</code> directory into the <code>&lt;NEW_IS_HOME&gt;/repository/components/dropins</code> directory.</p> </li> <li> <p>Copy migration-resources directory to the <code>&lt;NEW_IS_HOME&gt;</code> root directory.</p> </li> <li> <p>Ensure that the property values are as follows in the <code>&lt;NEW_IS_HOME&gt;/migration-resources/migration-config.yaml</code> file.</p> <pre><code>migrationEnable: \"true\"\n\ncurrentVersion: \"5.7.0\"\n\nmigrateVersion: \"5.11.0\"\n</code></pre> <p>Note</p> <p>Here, the <code>currentVersion</code> is the current WSO2 Identity Server version that you are using.</p> <ul> <li> <p>If you are using PostgreSQL</p> <p>During the migration, \"uuid-ossp\" extension is created in the database. To create this extension, the database user should have permission for the 'Superuser. If the user is not already a superuser, assign the permission before starting the migration.</p> <pre><code>ALTER USER &lt;user&gt; WITH SUPERUSER;\n</code></pre> </li> </ul> </li> </ol> </li> <li> <p>Configure the SymmetricKeyInternalCryptoProvider as the default internal cryptor provider.</p> <ol> <li> <p>Generate your secret key using a tool like OpenSSL.</p> <p><code>tab=\"Example\" openssl enc -nosalt -aes-128-cbc -k hello-world -P</code></p> </li> <li> <p>Add the configuration to the <code>&lt;NEW_IS_HOME&gt;/repository/conf/deployment.toml</code> file.</p> <pre><code>[encryption]\nkey = \"&lt;provide-your-key-here&gt;\"\n</code></pre> </li> <li> <p>Open the <code>&lt;NEW_IS_HOME&gt;/migration-resources/migration-config.yaml</code> file. The following two migrators are configured under migratorConfigs for 5.11.0.</p> <ul> <li>EncryptionAdminFlowMigrator</li> <li>EncryptionUserFlowMigrator</li> </ul> </li> <li> <p>If you're migrating from a version prior to WSO2 IS 5.6.0, open the <code>&lt;NEW_IS_HOME&gt;/migration-resources/migration-config.yaml</code> file and change the value of <code>transformToSymmetric</code> to <code>true</code> as shown below.</p> <pre><code>name: \"KeyStorePasswordMigrator\"\norder: 9\nparameters:\nschema: \"identity\"\ncurrentEncryptionAlgorithm: \"RSA\"\nmigratedEncryptionAlgorithm: \"RSA/ECB/OAEPwithSHA1andMGF1Padding\"\ntransformToSymmetric: \"true\"\n</code></pre> </li> </ol> <p>Under each migrator's parameters, find the property value of currentEncryptionAlgorithm and ensure that it matches with the value of the <code>org.wso2.CipherTransformation</code> property found in the <code>&lt;OLD_IS_HOME&gt;/repository/conf/carbon.properties</code> file.</p> </li> <li> <p>Start the WSO2 Identity Server 5.11.0 with the following command to     execute the migration client.</p> <ul> <li> <p>Linux/Unix:</p> <pre><code>sh wso2server.sh -Dmigrate -Dcomponent=identity\n</code></pre> </li> <li> <p>Windows:</p> <pre><code>wso2server.bat -Dmigrate -Dcomponent=identity\n</code></pre> </li> </ul> </li> <li> <p>Stop the server once the migration client execution is complete.</p> </li> </ol>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-to-5110/#executing-the-sync-tool","title":"Executing the sync tool","text":"<p>Warning</p> <p>Proceed with this step only if you have opted in for Zero down time migration. If not, your migration task is complete now. You can omit the following steps.</p> <ol> <li> <p>Start the data sync tool with the following command pointing to the <code>sync.properties</code> file. This will start syncing data created in the old WSO2 Identity Server database after taking the database dump to the new WSO2 Identity Server database.     <pre><code>sh wso2server.sh -DsyncData -DconfigFile=&lt;path to sync.properties file&gt;/sync.properties\n</code></pre></p> </li> <li> <p>Monitor the logs in the sync tool to see how many entries are synced at a given time and to keep track of the progress in the data sync process. The following line will be printed in the logs in each table you have specified that has no data to be synced.</p> <p>Sample</p> <pre><code>[2019-02-27 17:26:32,388]  INFO {org.wso2.is.data.sync.system.pipeline.process.BatchProcessor} -  No data to sync for: &lt;TABLE_NAME&gt;\n</code></pre> <p>Info</p> <p>If you have some traffic to the old version of the WSO2 Identity Server, the number of entries to be synced might not become zero at any time. In that case, observe the logs to decide on a point where the number of entries that are synced is low.</p> </li> <li> <p>When the data sync is complete, switch the traffic from the old setup to the new setup.</p> </li> <li> <p>Allow the sync client to run for some time to sync the entries that were not synced before switching the deployments. Stop the sync client when the number of entries synced by the sync tool becomes zero.</p> </li> </ol>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-to-5110/#verifying-the-migration","title":"Verifying the migration","text":"<p>After the migration is complete, proceed to the following verification steps.</p> <ul> <li>Monitor the system's health (CPU, memory usage, etc.).</li> <li>Monitor the WSO2 logs to see if errors are logged in the log files.</li> <li>Run functional tests against the migrated deployment to verify that all the functionalities are working as expected.</li> </ul> <p>Note</p> <ul> <li>If you see any problems in the migrated system, revert the traffic to the previous setup and investigate the problem.</li> <li>If the id token validation for the Console and My Account applications are failing, learn about Validation of issuer in .well-known endpoint URL in the What has changed in 5.11.0 document.</li> </ul>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-to-5110/#after-migration","title":"After migration","text":"<p>If you are using the data cleanup scripts to perform data purging, use the latest cleanup scripts or cleanup scripts specific to the migrated version. You can find the latest cleanup scripts from here.</p>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-userstore-managers/","title":"Migrating User Stores","text":"<p>Before doing the actual user store migration, it is recommended to do a dry run and analyze the generated report for any recommendations related to the migration.</p>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-userstore-managers/#dry-run","title":"Dry Run","text":"<p>Dry-run capability in the user store migrator will allow the migration utility to validate the system for the user store configurations and generate a report regarding migration compatibility. If there are any warnings in the generated migration report, it is recommended to contact the WSO2 support to identify the best migration strategy.</p>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-userstore-managers/#how-to-run","title":"How to Run","text":"<p>Configure the migration report path using the value of <code>reportPath</code> <code>&lt;IS_HOME&gt;/migration-resources/migration-config.yaml</code> in the <code>migration-config.yaml</code>. You should use the absolute path here.</p> <p>Run the migration utility with the system property \u201cdryRun\u201d.</p> <p>Ex:</p> <ul> <li>On Unix/Linux</li> </ul> <pre><code>sh wso2server.sh -Dmigrate -Dcomponent=identity -DdryRun\n</code></pre> <ul> <li>On Windows</li> </ul> <pre><code>wso2server.bat -Dmigrate -Dcomponent=identity -DdryRun\n</code></pre> <p>After that, analyze the generated report that resides in the provided location.</p>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-userstore-managers/#migrating-user-stores_1","title":"Migrating User Stores","text":"<p>If you have multiple tenants and multiple user stores but you only need to migrate a few of them, refer to the configuration section below. If you need to migrate all of them, use the <code>migrateAll</code> property (This is set to true by default).  </p>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-userstore-managers/#special-scenarios","title":"Special Scenarios","text":"<p>If the user store is an LDAP user store and SCIM is enabled for that user store, migrating that user store is not required. As SCIM will create a user ID for the users in that user store, the SCIM ID can be used as the unique user ID. To do that, change the <code>user_id_attribute</code> to the value of the SCIM ID, in the <code>&lt;IS_HOME&gt;/repository/conf/deployment.toml</code> file.</p>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-userstore-managers/#configurations","title":"Configurations","text":"<p>Apply the following configurations to the <code>migration-config.yaml</code> file:</p> Property Name Description migrateAll Migrate all the tenants and all the user store domains in it. reportPath Absolute path for the dry report. This is required in the dry run mode. <p>You can configure the user ID migrator as shown below, which is for adding UUID values to user records. This is only required if your primary user store is not an Active Directory. </p> <pre><code>-\n  name: \"UserIDMigrator\"\n  order: 7\n  parameters:\n    &lt;tenant-param&gt;:\n</code></pre> Property Name Description tenantDomain Domain name of the tenant. (Mandatory) increment Number of users to be updated in each iteration. (Optional) startingPoint The point from which the migration starts (Offset). This is useful if the migration stops in the middle and needs to restart. (Optional) scimEnabled Whether SCIM is enabled for user stores in this tenant. (Optional) migratingDomains List of comma-separated domain names that should be migrated to this domain. (Optional) forceUpdateUserId Mark whether user IDs should be updated even though there is already an existing ID. (Optional) <p>If the primary user store in your deployment is an Active Directory, you don't need to run the user ID migrator as the user store already has an attribute named <code>objectGuid</code>, which can be used as the UUID of the user. Therefore, you can remove the above user ID migrator configuration from the <code>migration-config.yaml</code> file. However, if you are planning to use a unique ID Active Directory user store manager, be sure to map the <code>UserIDAttribute</code> attribute to the <code>objectGuid</code> attribute in the Active Directory as follows:</p> <pre><code>[user_store]\nclass = \"org.wso2.carbon.user.core.ldap.UniqueIDReadWriteLDAPUserStoreManager\"\n\n[user_store.properties]\nUserIDAttribute = \"objectGuid\"\n</code></pre> <p>Note</p> <p>UUID support for user store managers were added from IS 5.10.0 onwards.</p>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-userstore-managers/#populating-userids-for-the-userstores","title":"Populating UserIds for the userstores","text":"<p>These steps should be carried out for the old database before the migration. A backup of UM database should be taken, and database triggers should be set to update the backup database based on the updates of the live database. After performing the following steps, the backup database should be migrated to the next version.</p> <ol> <li> <p>If you have JDBC secondary user stores with SCIM disabled, execute the following queries on the UM database. This will add a <code>UM_USER_ID</code> column to the <code>UM_USER</code> table with a random <code>UUID</code> as the default value for <code>UM_USER_ID</code>.</p> <ul> <li>Postgresql</li> </ul> <pre><code>/* User should have the Superuser permission */\nCREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";\n\nALTER TABLE UM_USER\n    ADD COLUMN UM_USER_ID CHAR(36) DEFAULT uuid_generate_v4(),\n    ADD CONSTRAINT UM_USER_UUID_CONSTRAINT UNIQUE(UM_USER_ID);\n</code></pre> <ul> <li>Oracle</li> </ul> <p>```     ALTER TABLE UM_USER         ADD (             UM_USER_ID CHAR(36) DEFAULT LOWER(regexp_replace(rawtohex(sys_guid()), '([A-F0-9]{8})([A-F0-9]{4})([A-F0-9]{4})([A-F0-9]{4})([A-F0-9]{12})', '\\1-\\2-\\3-\\4-\\5')))     /</p> <pre><code>ALTER TABLE UM_USER ADD UNIQUE (UM_USER_ID)\n/\n```\n</code></pre> <ul> <li>Oracle_rac</li> </ul> <pre><code>ALTER TABLE UM_USER\n    ADD (\n        UM_USER_ID CHAR(36) DEFAULT LOWER(regexp_replace(rawtohex(sys_guid()), '([A-F0-9]{8})([A-F0-9]{4})([A-F0-9]{4})([A-F0-9]{4})([A-F0-9]{12})', '\\1-\\2-\\3-\\4-\\5')))\n/\n\nALTER TABLE UM_USER ADD UNIQUE (UM_USER_ID)\n/\n</code></pre> <ul> <li>MySQL</li> </ul> <pre><code>ALTER TABLE UM_USER ADD COLUMN UM_USER_ID CHAR(36) NOT NULL DEFAULT 'NONE';\nUPDATE UM_USER SET UM_USER_ID = UUID();\nALTER TABLE UM_USER ADD UNIQUE(UM_USER_ID, UM_TENANT_ID);\n</code></pre> <ul> <li>MySQL_cluster</li> </ul> <pre><code>ALTER TABLE UM_USER ADD COLUMN UM_USER_ID CHAR(36) NOT NULL DEFAULT 'NONE';\nUPDATE UM_USER SET UM_USER_ID = UUID();\nALTER TABLE UM_USER ADD UNIQUE(UM_USER_ID, UM_TENANT_ID);\n</code></pre> <ul> <li>MS SQL</li> </ul> <pre><code>ALTER TABLE UM_USER\n    ADD UM_USER_ID CHAR(36) DEFAULT LOWER(NEWID()) NOT NULL,\n    UNIQUE(UM_USER_ID);\n</code></pre> <ul> <li>H2</li> </ul> <pre><code>ALTER TABLE UM_USER ADD COLUMN (UM_USER_ID CHAR(36) DEFAULT RANDOM_UUID());\nALTER TABLE UM_USER ADD UNIQUE (UM_USER_ID);\n</code></pre> <ul> <li>DB2</li> </ul> <pre><code>CREATE OR REPLACE FUNCTION NEWUUID()\nRETURNS CHAR(36)\nBEGIN\n    DECLARE @UUID CHAR(32);\n    SET @UUID=LOWER(HEX(RAND()*255) || HEX(RAND()*255));\n    RETURN LEFT(@UUID,8)||'-'||\n        SUBSTR(@UUID,9,4)||'-'||\n        SUBSTR(@UUID,13,4)||'-'||\n        SUBSTR(@UUID,17,4)||'-'||\n        RIGHT(@UUID,12);\nEND\n/\n\nALTER TABLE UM_USER ADD COLUMN UM_USER_ID CHAR(36) NOT NULL DEFAULT 'NONE'\n/\nCALL SYSPROC.ADMIN_CMD('REORG TABLE UM_USER')\n/\n\nUPDATE UM_USER SET UM_USER_ID = NEWUUID()\n/\nCALL SYSPROC.ADMIN_CMD('REORG TABLE UM_USER')\n/\n</code></pre> </li> <li> <p>If you have JDBC secondary user stores with SCIM enabled, execute the following queries on the UM database.</p> <ul> <li>PostgreSQL</li> </ul> <pre><code>SELECT DISTINCT t.ATTRIBUTE_NAME\n    FROM IDN_CLAIM_MAPPED_ATTRIBUTE AS t\n    WHERE t.LOCAL_CLAIM_ID IN (SELECT t2.MAPPED_LOCAL_CLAIM_ID\n    FROM IDN_CLAIM_MAPPING AS t2\n    JOIN IDN_CLAIM AS t1\n    ON t1.ID = t2.EXT_CLAIM_ID\n    WHERE t1.CLAIM_URI = 'urn:ietf:params:scim:schemas:core:2.0:id');\n</code></pre> <ul> <li>Oracle</li> </ul> <pre><code>select DISTINCT t.ATTRIBUTE_NAME\n    FROM IDN_CLAIM_MAPPED_ATTRIBUTE t\n      WHERE t.LOCAL_CLAIM_ID IN ( SELECT t2.MAPPED_LOCAL_CLAIM_ID\n      FROM IDN_CLAIM_MAPPING t2\n      JOIN IDN_CLAIM t1\n      ON t1.ID = t2.EXT_CLAIM_ID\n      WHERE t1.CLAIM_URI = 'urn:ietf:params:scim:schemas:core:2.0:id'   \n)\n/\n</code></pre> <ul> <li>MySQL</li> </ul> <pre><code>SELECT DISTINCT t.ATTRIBUTE_NAME \n  FROM IDN_CLAIM_MAPPED_ATTRIBUTE t \n  WHERE t.LOCAL_CLAIM_ID IN(\n  SELECT t2.MAPPED_LOCAL_CLAIM_ID\n  FROM IDN_CLAIM_MAPPING t2 \n  JOIN IDN_CLAIM t1\n  ON t1.ID = t2.EXT_CLAIM_ID \n  WHERE t1.CLAIM_URI ='urn:ietf:params:scim:schemas:core:2.0:id' \n) ;\n</code></pre> <ul> <li>MS SQL</li> </ul> <pre><code>SELECT DISTINCT t.ATTRIBUTE_NAME \n    FROM IDN_CLAIM_MAPPED_ATTRIBUTE AS t\n    WHERE t.LOCAL_CLAIM_ID IN ( SELECT t2.MAPPED_LOCAL_CLAIM_ID\n    FROM IDN_CLAIM_MAPPING AS t2\n    JOIN IDN_CLAIM AS t1\n    ON t1.ID = t2.EXT_CLAIM_ID\n    WHERE t1.CLAIM_URI = 'urn:ietf:params:scim:schemas:core:2.0:id'\n);\n</code></pre> </li> <li> <p>If the result of the above query is <code>scimId</code>, follow this step. Otherwise, skip this and move on to step 4.  </p> <p>If the result of the above query is <code>scimId</code>, it means the default mapped attribute (scimId) of <code>http://wso2.org/claims/userid</code> or the default local claim (<code>http://wso2.org/claims/userid</code>) mapped to the <code>urn:ietf:params:scim:schemas:core:2.0:id</code> claim is not updated in the WSO2 IS server.  Hence, the following queries are used to update the <code>UM_USER_ID</code> of <code>UM_USER</code> with SCIM Id based on the mapped attribute <code>scimId</code>.</p> <ul> <li>PostgreSQL</li> </ul> <pre><code>CREATE OR REPLACE FUNCTION update_um_user_id()  returns int \nLANGUAGE plpgsql\nAS $$\nDECLARE \ncount_rows int;\ncur_um_attr cursor for select T2.um_attr_value, T1.um_id\n          from um_user_attribute  T2\n            join um_user T1\n            on T1.um_Id = T2.um_user_id \n            where T2.um_attr_name ='scimId';\n\nrec_um_attr RECORD;   \nBEGIN\n  count_rows = 0; \n  open cur_um_attr;\n    LOOP\n          fetch cur_um_attr into rec_um_attr;\n      exit when not found;\n\n        update um_user\n        set um_user_id=rec_um_attr.um_attr_value\n        where um_id = rec_um_attr.um_id;  \n\n    count_rows = count_rows + 1;\n    END LOOP;     \n  close cur_um_attr;\nreturn count_rows;    \nEND;\n$$;\nselect update_um_user_id();\nCREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";\nupdate um_user set um_user_id=uuid_generate_v4() where um_user_id = 'N';\n</code></pre> <ul> <li>Oracle</li> </ul> <pre><code>DECLARE\nv_um_attr_value varchar2(100);\nv_um_id number;\nCURSOR cur_um_attr IS\n      select T2.um_attr_value, T1.um_id\n        from um_user_attribute  T2\n          join um_user T1\n          on T1.um_Id = T2.um_user_id \n          where T2.um_attr_name ='scimId';    \nBEGIN \n\n  OPEN cur_um_attr;\n  LOOP\n    FETCH cur_um_attr INTO v_um_attr_value, v_um_id;\n      IF cur_um_attr%NOTFOUND THEN\n              EXIT;\n            END If;\n\n          update um_user\n      set um_user_id = v_um_attr_value\n      where um_id =  v_um_id;   \n\n  END LOOP;\n  CLOSE cur_um_attr; \n\nEND;\n/\n</code></pre> <ul> <li>My SQL</li> </ul> <pre><code>ALTER TABLE UM_USER ADD COLUMN UM_USER_ID CHAR(36) NOT NULL DEFAULT 'NONE';\nALTER TABLE UM_USER ADD UNIQUE(UM_USER_ID, UM_TENANT_ID);\nDELIMITER $$\nCREATE FUNCTION update_um_user_id() RETURNS int\nDETERMINISTIC \nBEGIN\n  DECLARE count_rows int;\n  DECLARE um_usr_attr_value varchar(100);\n  DECLARE um_id int;\n  DECLARE done INT DEFAULT FALSE;\n  DECLARE cur_um_attr CURSOR FOR \nSELECT\n  T2.UM_ATTR_VALUE,\n  T1.UM_ID \nFROM\n  UM_USER_ATTRIBUTE T2 \n  JOIN\n      UM_USER T1 \n      ON T1.UM_ID = T2.UM_USER_ID \nWHERE\n  T2.UM_ATTR_NAME = 'scimId';\nDECLARE CONTINUE HANDLER FOR NOT FOUND \nSET\n  done = TRUE;\nSET\n  count_rows = 0;\nOPEN cur_um_attr;\nread_loop: loop FETCH cur_um_attr INTO um_usr_attr_value,\num_id;\nIF done \nTHEN\n  LEAVE read_loop;\nEND\nIF;\nUPDATE\n  UM_USER \nSET\n  UM_USER_ID = um_usr_attr_value \nWHERE\n  UM_ID = um_id;\nSET\n  count_rows = count_rows + 1;\nEND\nloop;\nCLOSE cur_um_attr;\nRETURN count_rows;\nEND\n$$ DELIMITER ;\nSELECT\n  update_um_user_id();\nUPDATE\n  UM_USER \nSET\n  UM_USER_ID = UUID() \nWHERE\n  UM_USER_ID IS NULL;\n</code></pre> <ul> <li>MS SQL</li> </ul> <pre><code>IF NOT EXISTS(SELECT * FROM sys.columns WHERE Name = 'UM_USER_ID' \n          AND object_id = OBJECT_ID('UM_USER'))\nBEGIN\nALTER TABLE UM_USER ADD UM_USER_ID CHAR(36) DEFAULT 'N' \nEND\nBEGIN\n  DECLARE @count_rows int\n  DECLARE @um_attr_value varchar(100)\n  DECLARE @um_id int\n\n    DECLARE cur_um_attr CURSOR LOCAL FOR select T2.UM_ATTR_VALUE, T1.UM_ID\n          from UM_USER_ATTRIBUTE T2\n            join UM_USER T1\n            on T1.UM_ID = T2.UM_USER_ID \n            where T2.um_attr_name ='scimId'       \n\n  SET @count_rows = 0\n\n  OPEN cur_um_attr  \n  -- loop through a cursor\n  FETCH NEXT FROM cur_um_attr INTO @um_attr_value, @um_id\n    WHILE @@FETCH_STATUS = 0\n        BEGIN   \n        update UM_USER \n        set UM_USER_ID = @um_attr_value\n        where UM_ID =  @um_id \n\n      SET @count_rows = @count_rows + 1\n      FETCH NEXT FROM cur_um_attr INTO @um_attr_value, @um_id\n    END   \n\n  CLOSE cur_um_attr\nEND;\n\nupdate UM_USER set UM_USER_ID =LOWER(NEWID())  where UM_USER_ID='N' ;\n</code></pre> </li> <li> <p>If the result of the above query is something different from <code>scimId</code>, it means the local claim mapped to the <code>urn:ietf:params:scim:schemas:core:2.0:id</code>  claim is different than   <code>http://wso2.org/claims/userid</code> or the mapped attribute for the local claim <code>http://wso2.org/claims/userid</code> is different than <code>scimId</code>. Hence the following queries are used to update the <code>UM_USER_ID</code> of <code>UM_USER</code> with SCIM Id based on the updated mapped attribute.</p> <ul> <li>PostgreSQL</li> </ul> <pre><code>CREATE OR REPLACE FUNCTION update_um_user_id()  returns int \nLANGUAGE plpgsql\nAS $$\nDECLARE \ncount_rows int;\ncur_um_attr CURSOR FOR SELECT T2.um_attr_value, T1.um_id \n  FROM   um_user_attribute T2 \n  JOIN   um_user T1 \n  ON     T1.um_id = T2.um_user_id \n  WHERE  T2.um_attr_name IN \n        ( \n                SELECT T.attribute_name \n                FROM   idn_claim_mapped_attribute AS T \n                WHERE  T.local_claim_id IN \n                      (      SELECT T3.mapped_local_claim_id \n                              FROM   idn_claim_mapping AS T3 \n                              JOIN   idn_claim         AS T4 \n                              ON     T4.id = T3.ext_claim_id \n                              WHERE  T4.claim_uri = 'urn:ietf:params:scim:schemas:core:2.0:id') );\n\nrec_um_attr RECORD;   \nBEGIN\n  count_rows = 0; \n  open cur_um_attr;\n    LOOP\n          fetch cur_um_attr into rec_um_attr;\n      exit when not found;\n\n        update um_user\n        set um_user_id=rec_um_attr.um_attr_value\n        where um_id = rec_um_attr.um_id;  \n\n    count_rows = count_rows + 1;\n    END LOOP;     \n  close cur_um_attr;\nreturn count_rows;    \nEND;\n$$;\nselect update_um_user_id();\nCREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";\nupdate um_user set um_user_id=uuid_generate_v4() where um_user_id = 'N';\n</code></pre> <ul> <li>Oracle</li> </ul> <pre><code>DECLARE\nv_um_attr_value varchar2(100);\nv_um_id number;\nCURSOR cur_um_attr IS\n        select DISTINCT t.ATTRIBUTE_NAME\n        FROM IDN_CLAIM_MAPPED_ATTRIBUTE t\n          WHERE t.LOCAL_CLAIM_ID IN ( SELECT t2.MAPPED_LOCAL_CLAIM_ID\n          FROM IDN_CLAIM_MAPPING t2\n          JOIN IDN_CLAIM t1\n          ON t1.ID = t2.EXT_CLAIM_ID\n          WHERE t1.CLAIM_URI = 'urn:ietf:params:scim:schemas:core:2.0:id'   \n)\n\nBEGIN \n\n  OPEN cur_um_attr;\n  LOOP\n    FETCH cur_um_attr INTO v_um_attr_value, v_um_id;\n      IF cur_um_attr%NOTFOUND THEN\n              EXIT;\n            END If;\n\n          update um_user\n      set um_user_id = v_um_attr_value\n      where um_id =  v_um_id;   \n\n  END LOOP;\n  CLOSE cur_um_attr; \n\nEND;\n/\n</code></pre> <ul> <li>My SQL</li> </ul> <pre><code>ALTER TABLE UM_USER ADD COLUMN UM_USER_ID CHAR(36) NOT NULL DEFAULT 'NONE';\nALTER TABLE UM_USER ADD UNIQUE(UM_USER_ID, UM_TENANT_ID);\nDELIMITER $$ CREATE FUNCTION update_um_user_id() RETURNS int DETERMINISTIC \nBEGIN\n  DECLARE count_rows int;\n  DECLARE um_usr_attr_value varchar(100);\n  DECLARE um_id int;\n  DECLARE done INT DEFAULT FALSE;\n  DECLARE cur_um_attr CURSOR FOR \nSELECT\n  T2.UM_ATTR_VALUE,\n  T1.UM_ID \nFROM\n  UM_USER_ATTRIBUTE T2 \n  join\n      UM_USER T1 \n      on T1.UM_ID = T2.UM_USER_ID \nWHERE\n  T2.UM_ATTR_NAME in \n  (\n      SELECT\n        T.ATTRIBUTE_NAME \n      FROM\n        IDN_CLAIM_MAPPED_ATTRIBUTE as T \n      WHERE\n        T.LOCAL_CLAIM_ID in \n        (\n            SELECT\n              T3.MAPPED_LOCAL_CLAIM_ID \n            FROM\n              IDN_CLAIM_MAPPING as T3 \n              JOIN\n                  IDN_CLAIM as T4 \n                  on T4.ID = T3.EXT_CLAIM_ID \n            WHERE\n              T4.CLAIM_URI = 'urn:ietf:params:scim:schemas:core:2.0:id' \n        )\n  )\n;\nDECLARE CONTINUE HANDLER FOR NOT FOUND \nSET\n  done = TRUE;\nSET\n  count_rows = 0;\nOPEN cur_um_attr;\nread_loop: loop FETCH cur_um_attr INTO um_usr_attr_value,\num_id;\nIF done \nTHEN\n  LEAVE read_loop;\nEND\nIF;\nUPDATE\n  UM_USER \nSET\n  UM_USER_ID = um_usr_attr_value \nWHERE\n  UM_ID = um_id;\nSET\n  count_rows = count_rows + 1;\nEND\nloop;\nCLOSE cur_um_attr;\nRETURN count_rows;\nEND\n$$ DELIMITER ;\nSELECT\n  update_um_user_id();\nUPDATE\n  UM_USER \nSET\n  UM_USER_ID = UUID() \nWHERE\n  UM_USER_ID IS NULL;\n</code></pre> <ul> <li>MS SQL</li> </ul> <pre><code>IF NOT EXISTS(SELECT * FROM sys.columns WHERE Name = 'UM_USER_ID' \n          AND object_id = OBJECT_ID('UM_USER'))\nBEGIN\nALTER TABLE UM_USER ADD UM_USER_ID CHAR(36) DEFAULT 'N' \nEND\nBEGIN\n  DECLARE @count_rows int\n  DECLARE @um_attr_value varchar(100)\n  DECLARE @um_id int\n\n    DECLARE cur_um_attr CURSOR LOCAL FOR SELECT T2.um_attr_value, T1.um_id \n      FROM um_user_attribute T2 \n      JOIN um_user T1 \n      ON T1.um_id = T2.um_user_id \n      WHERE  T2.um_attr_name \n          IN (SELECT T.attribute_name \n                          FROM   idn_claim_mapped_attribute AS T \n                          WHERE  T.local_claim_id IN \n                                  (SELECT T3.mapped_local_claim_id \n                                  FROM   idn_claim_mapping AS T3 \n                                  JOIN idn_claim AS T4 \n                                  ON T4.id = T3.ext_claim_id \n                                  WHERE T4.claim_uri = 'urn:ietf:params:scim:schemas:core:2.0:id'))         \n\n  SET @count_rows = 0\n        OPEN cur_um_attr  \n  -- loop through a cursor\n  FETCH NEXT FROM cur_um_attr INTO @um_attr_value, @um_id\n    WHILE @@FETCH_STATUS = 0\n        BEGIN   \n        UPDATE UM_USER \n    SET UM_USER_ID = @um_attr_value\n    where UM_ID =  @um_id \n\n    SET @count_rows = @count_rows + 1\n    FETCH NEXT FROM cur_um_attr INTO @um_attr_value, @um_id\n      END   \n\n  CLOSE cur_um_attr\nEND;\n\nUPDATE UM_USER SET UM_USER_ID =LOWER(NEWID())  WHERE UM_USER_ID='N' ;\n</code></pre> </li> </ol>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-what-has-changed/","title":"What Has Changed","text":"<p>WSO2 Identity Server 5.11.0 brings a range of new features and major improvements. The following aspects have changed in 5.11.0 compared to the previous WSO2 IS versions.</p> <p>This page provides details about the behavioral changes from WSO2 Identity Server 5.10.0 to 5.11.0.</p> <p>If you are migrating from an older version of Identity Server</p> <p>To find the changes introduced in the previous versions, you can refer to the following documents:</p> <ul> <li>What Has Changed in IS 5.10.0</li> <li>What Has Changed in IS 5.9.0</li> <li>Migrating Configurations to IS 5.8.0</li> </ul>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-what-has-changed/#user-portal","title":"User Portal","text":"<p>This section covers the updates related to the user portal on Identity Server 5.11.0.</p>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-what-has-changed/#renamed-user-portal-to-my-account","title":"Renamed 'User Portal' to 'My Account'","text":"<p>A new portal named \"User Portal\" was released with WSO2 Identity Server 5.10.0, which replaced the legacy Jaggery-based end-user dashboard. With WSO2 IS 5.11.0 onwards, this portal has been renamed \u201cMy Account\u201d and will be onboarded as a SaaS application.</p> <p>The following configurations changed in the application.</p> Configuration 5.10.0 value 5.11.0 value name User Portal My Account description This is the user portal application. This is my account application. client_id USER_PORTAL MY_ACCOUNT callback_url /user-portal/login /myaccount/login <p>For more information, see Configuring My Account Application.</p>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-what-has-changed/#authentication","title":"Authentication","text":"<p>This section covers the updates related to authentication on Identity Server 5.11.0.</p>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-what-has-changed/#ws-trust-authenticator-moved-to-the-connector-store","title":"WS-Trust authenticator moved to the connector store","text":"<p>WS-Trust authentication is no longer supported by default in WSO2 IS 5.11.0 and has been introduced as a connector. To use WS-Trust authentication, configure the connector.</p>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-what-has-changed/#extend-expiry-time-of-commonauth-cookie","title":"Extend expiry time of commonAuth cookie","text":"<p>From WSO2 IS 5.11.0 onwards, the expiry time of the commonAuth cookie is extended with each authentication request. This is enabled by default in 5.11.0 but was disabled by default in the WSO2 IS 5.10.0 WUM-updated pack. If you do not require this feature, you can disable it by adding the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[session.timeout]\nextend_remember_me_session_timeout_on_auth=false\n</code></pre>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-what-has-changed/#validation-of-issuer-in-well-known-endpoint-url","title":"Validation of issuer in .well-known endpoint URL","text":"<p>With 5.11.0, there is an extra validation to check if the issuer part of the .well-known endpoint URL is equal to the issuer attribute of the response returned by the .well-known endpoint. If you use a custom domain and proxy requests to WSO2 IS, then the issuer in the token as well as the response returned by the .well-known endpoint, will have the port number <code>443</code> in the issuer URL. However, the URL of the .well-known endpoint would not have the <code>443</code> port number. Due to this, the validation can fail. If this validation fails, the id token validation for the Console and My Account applications will also fail during the login flow.</p> <p>If this happens, do the following to manually change the following configuration via the management console after migration.</p> <ol> <li>Log in to the management console using administrator credentials.</li> <li>Click Resident under Identity Providers.</li> <li>Expand Inbound Authentication Configuration and then expand OAuth2/OpenID Connect Configuration.</li> <li>Remove the port number <code>:443</code> from the Identity Provider Entity ID URL.</li> </ol>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-what-has-changed/#encryption-methods","title":"Encryption methods","text":"<p>This section covers the updates related to encryption methods on Identity Server 5.11.0.</p>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-what-has-changed/#symmetric-key-encryption-for-internal-data","title":"Symmetric key encryption for internal data","text":"<p>Up to version 5.10.0, WSO2 IS has been using asymmetric key encryption for encrypting internal data and signing purposes. With 5.11.0 onwards, symmetric key encryption is the default encryption mechanism to encrypt internal sensitive data because:</p> <ul> <li> <p>Capability to change keystores easily.     Prior to 5.10.0, since internal data was also encrypted using asymmetric key encryption, whenever the certificates expired or needed to be moved to a different keystore, all the data encrypted using the old keystore needed to be migrated.     This is no longer an overhead with symmetric key encryption for internal sensitive data. The secret key in symmetric key encryption is now encrypted using asymmetric key encryption, so only the secret key of symmetric key encryption needs to be re-encrypted whenever a keystore change is required.</p> </li> <li> <p>Symmetric key encryption for encrypting internal sensitive data is used industry-wide</p> </li> </ul> <p>For more information about new configurations, see Configurations Related to Symmetric Key Encryption.</p>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-what-has-changed/#symmetric-key-encryption-algorithm","title":"Symmetric key encryption algorithm","text":"<p>WSO2 IS 5.11.0 uses \u2018AES/GCM/NoPadding\u2019 as the encryption algorithm. GCM is a stream cipher. Therefore, there is a performance advantage to using it due to the parallel encryption of each block.</p> <ul> <li>There is no need to use a padding mechanism in GCM mode.</li> <li>In GCM mode, the IV (initialization vector) should be a unique value for each encryption request.</li> <li>Along with each encrypted value, the relevant IV related to that should be tracked to do the decryption.</li> <li>AES-128 is supported as the key size.</li> </ul> <p>For more information, see Using Symmetric Key Encryption and An Overview of Symmetric Encryption.</p>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-what-has-changed/#oauthoidc","title":"OAuth/OIDC","text":"<p>This section covers the updates related to OAuth and OIDC configurations on Identity Server 5.11.0.</p>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-what-has-changed/#oauth-20-token-binding-validation","title":"OAuth 2.0 token binding validation","text":"<p>the token binding validation is a feature that was introduced with WSO2 IS 5.10.0. Initially, if <code>tokenBindingType</code> is provided when creating the OpenID Connect service provider, the token binding validation is enabled by default. With the WSO2 IS WUM-updated pack, you can disable it by unticking the Validate token bindings property. However, if this property is unavailable for the existing service providers, the token binding will still be enabled by default.</p> <p>From 5.11.0 onwards, this behavior has been changed. The property is available for all new service providers. For the existing service providers that do not have this property, token binding validation is disabled. To maintain backward compatibility, the property will be enabled during migration for those existing service providers with the <code>tokenBindingType</code> as cookie.</p> <p>Hence, with this change, after 5.11.0, there will be no service providers without the Validate token bindings property.</p>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-what-has-changed/#managing-oidc-consent-flow","title":"Managing OIDC consent flow","text":"<p>With WSO2 IS 5.10.0, two new properties shown below were introduced to the <code>&lt;IS_HOME&gt;/repository/conf/identity/identity.xml</code> file within the <code>OpenIDConnect</code> tag to manage consent during OpenID Connect login and logout flows.</p> <ul> <li><code>SkipLoginConsent</code>:  Skip the OIDC login consent</li> <li><code>SkipLogoutConsent</code>: Skip the OIDC logout consent</li> </ul> <p>With 5.11.0, these two properties are added to the Application Management Rest API so they can be viewed and modified. The <code>skipConsent</code> attribute has been removed and the two properties <code>skipLoginConsent</code> , <code>skipLogoutConsent</code> have been added in the AdvancedApplicationConfiguration model of Application Management Rest API.</p>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-what-has-changed/#disabled-appending-params-to-oauth2oidc-error-responses","title":"Disabled appending params to OAuth2/OIDC error responses","text":"<p>Appending additional parameters to the OAuth2/OIDC error response has been disabled by default. As a result, the parameters 'sp' and 'tenant_domain', which were set to the callback URL in error responses in the previous WSO2 IS versions, will also not be available. If any configured error param needs to be sent back to the callback URL in an error response, add the following config to the <code>deployment.toml</code> file.</p> <pre><code>[oauth]\nallow_additional_params_from_error_url = true\n</code></pre>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-what-has-changed/#disabled-device-authorization-grant","title":"Disabled device authorization grant","text":"<p>The device authorization grant was introduced with WSO2 IS 5.10.0. It has been disabled by default in the 5.11.0 version. However, if you previously enabled it in your setup, you can enable it for backward compatibility. Add the following configuration to the <code>deployment.toml</code> file to enable the grant and revert to the old behavior.</p> <p>Warning</p> <p>Note that this feature is not production-ready and is ideally not recommended for use.</p> <pre><code>[oauth.response_type.device]\nenable=true\n[oauth.grant_type.device_code]\nenable=true\n</code></pre>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-what-has-changed/#deprecating-oauth-10-and-identityconnectdcr","title":"Deprecating OAuth 1.0 and identity/connect/dcr","text":"<p>OAuth 1.0 and <code>identity/connect/dcr</code> APIs are deprecated in WSO2 IS 5.11.0. If you wish to revert to the previous behavior, add the following property to the <code>&lt;IS_HOME&gt;/repository/conf/deployment.toml</code> file. </p> <p>To enable OAuth 1.0:</p> <pre><code>[[legacy_feature]]\nid = \"oauth\"\nversion = \"1.0\"\nenable = true\n</code></pre> <p>To enable identity/connect/dcr:</p> <pre><code>[[legacy_feature]]\nid = \"identity/connect/dcr\"\nenable = true\n</code></pre>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-what-has-changed/#saml","title":"SAML","text":"<p>This section covers the updates related to SAML configurations on Identity Server 5.11.0.</p>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-what-has-changed/#upgrade-from-opensaml2-to-opensaml3","title":"Upgrade from OpenSAML2 to OpenSAML3","text":"<p>With 5.11.0, WSO2 IS has upgraded to OpenSAML 3. Follow the instructions below to ensure this upgrade does not cause any issues.</p> <ul> <li> <p>If you have done any customizations by extending the following classes, make sure that you make changes to it so that it adheres to OpenSAML 3 standards.</p> Classes Repo Names LogoutRequestBuilder identity-carbon-auth-saml2 SAMLAttributeQueryProcessor identity-inbound-auth-saml SAMLAuthzDecisionProcessor identity-inbound-auth-saml SAMLIDRequestProcessor identity-inbound-auth-saml SAMLSubjectQueryProcessor identity-inbound-auth-saml DefaultIDPMetadataBuilder identity-metada-saml2 SAMLSignatureValidatorImplementation tomcat-extension-samlsso </li> <li> <p>If you have written a custom code using the OpenSAML 2 plugin, add the openSAML2 plugin to the <code>&lt;IS-HOME&gt;/repository/components/dropins/</code> directory before starting the server.</p> </li> </ul>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-what-has-changed/#configure-the-certificate-used-to-encrypt-saml-assertions","title":"Configure the certificate used to encrypt SAML assertions","text":"<p>In earlier versions, the certificate alias defined in SAML configuration was used to encrypt the SAML assertion. From WSO2 IS 5.11.0 onwards, an application certificate (if present) is used for this task. To revert to the old behavior, add the following property to the <code>deployment.toml</code> file and set it to false.</p> <pre><code>[saml.metadata]\nassertion_encrypt_with_app_cert= false\n</code></pre>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-what-has-changed/#saml-service-provider-certificate-expiry-validation","title":"SAML service provider certificate expiry validation","text":"<p>In earlier versions, service provider certificate expiry validation was not enabled by default. From 5.11.0 onwards, this validation is enabled by default. To revert to the old behavior, add the following property to the <code>deployment.toml</code> file to disable the validation.</p> <pre><code>[saml]\nenable_saml_sp_certificate_expiry_validation= false\n</code></pre>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-what-has-changed/#tokens","title":"Tokens","text":"<p>This section covers the updates related to token configurations on Identity Server 5.11.0.</p>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-what-has-changed/#jwt-validation-at-introspection","title":"JWT validation at introspection","text":"<p>JWT validation at introspection is enabled by default in WSO2 IS 5.11.0. The server identifies a JWT token at the introspection endpoint by attempting a JWT token parsing. If identified, introspection is performed by treating the token as a JWT access token.</p> <p>Note that enabling this feature will validate the token using the available JWT token validator. For instance, the default pack will use the <code>Default JWT token validator</code>. So any valid and parsable JWT token should be able to be successfully validated against the available JWT token validator in the system. </p> <p>However, the existing flow can break if the server issues custom JWT tokens that fail validation with the available JWT token validator. In a migrated setup, this condition can fail in scenarios such as:</p> <ul> <li> <p>There are custom token issuers that issue valid and parsable JWT tokens which fail the default JWT token validator shipped with the pack. e.g., a custom token not having the <code>jti</code> claim.</p> </li> <li> <p>Both a custom JWT token validator and the default JWT token validator co-exist in the system. There also exists an invalid custom token that is successfully validated with the default validator but fails to be validated with the custom validator. The token may still pass the introspection validation.</p> </li> </ul> <p>Therefore, verifying that the JWT token validator can avoid the scenarios mentioned above is important. If not, it needs to be handled by deploying a custom JWT token validator to avoid the abovementioned issues.</p> <p>To revert to the previous behavior and disable this feature, add the following configuration to the <code>&lt;IS_HOME&gt;/repository/conf/deployment.toml</code> file.</p> <pre><code>[oauth]\nenable_jwt_token_validation_during_introspection=false\n</code></pre>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-what-has-changed/#revoke-access-tokens-on-logoutsession-expiry","title":"Revoke access tokens on logout/session expiry","text":"<p>Two types of access token binding are supported with WSO2 IS; Cookie Based and SSO Session Based. If you have enabled one of these binding types for a service provider when configuring OAuth/OIDC inbound authentication for an application with WSO2 IS 5.11.0, you can also enable revoking access tokens when the access token binding expires.</p> <p>WSO2 IS 5.11.0 supports the functionality to revoke access tokens issued for the application once the IDP session terminates. When the user logs out of the application, the access tokens of the token binding reference issued for the application get revoked. This functionality can be enabled when configuring the service provider's OAuth/OIDC inbound authentication.</p> <p></p> <p>WSO2 IS 5.11.0 also supports revoking the issued tokens for a session that has expired due to a session idle timeout when a user tries to use a single sign-on, log in again, or log out after a session has expired.</p> <p>For both use cases mentioned above, token revoking is enabled by default in 5.11.0. If you wish to disable this, add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[identity_mgt.events.schemes.TokenBindingExpiryEventHandler.properties]\nenable = false\n</code></pre>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-what-has-changed/#user-management","title":"User Management","text":"<p>This section covers the updates related to user management on Identity Server 5.11.0.</p>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-what-has-changed/#group-and-role-separation","title":"Group and role separation","text":"<p>In versions up to WSO2 Identity Server 5.10.0, groups had no separate entity. Both groups and roles were considered as roles in the system, and roles could be managed via the WSO2 IS management console or the SCIM groups endpoint.</p> <p>This has been redesigned from WSO2 Identity Server 5.11.0 onwards, and groups and roles are considered separate entities in the system, as described below. They can be managed using the new console or via SCIM APIs.</p> <ul> <li>User: An identity of a person stored in the IAM system.</li> <li>Group: A representation of a set of users in the user store.</li> <li>Role: Roles within the IAM solution that bind with permissions defined for resources within the IAM solution. It can be mapped to old hybrid roles.</li> </ul> <p>The relationship between roles, groups, and users is as follows:</p> <ul> <li>A role can be assigned to multiple groups</li> <li>A group can have multiple roles</li> <li>A role can be assigned to multiple users</li> <li>A user can have multiple roles</li> <li>A group can be assigned to multiple users</li> <li>A user can have multiple groups</li> </ul> <p></p>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-what-has-changed/#account-management","title":"Account Management","text":"<p>This section covers the updates related to account management on Identity Server 5.11.0.</p>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-what-has-changed/#skip-challenge-question-recovery-option","title":"Skip challenge question recovery option","text":"<p>With WSO2 IS 5.11.0, the challenge question recovery option is skipped by default if the user has not provided the challenge question answers set. To revert to the old behavior, you can disable this configuration by adding the following property to the <code>deployment.toml</code> file.</p> <pre><code>[identity_mgt.password_reset_challenge_questions]\nskip_on_insufficient_answers = false\n</code></pre>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-what-has-changed/#host-account-recovery-endpoint-on-a-different-server","title":"Host account recovery endpoint on a different server","text":"<p>With WSO2 IS 5.10.0, <code>accountrecoveryendpoint.war</code> can be configured to be hosted on WSO2 Identity Server or a separate server. When migrating to 5.11.0, if you host the <code>accountrecoveryendpoint.war</code> on a different server, the <code>identity.server.service.contextURL</code> configuration in the <code>&lt;WEBAPP_HOME&gt;/accountrecoveryendpoint/WEB-INF/classes/RecoveryEndpointConfig.properties</code> file must refer to only the server URL excluding the <code>/services</code> part as shown below. </p> <p>```tab=\"Example\" identity.server.service.contextURL=https://localhost:9443/ <pre><code>## Workflow management\nThis section covers the updates related to workflow management on Identity Server 5.11.0.\n\n### Configure approval step for workflows\nWhen creating roles through the management console in WSO2 IS-5.11.0 onwards, the domain must be specified as **Internal**. Else, it will be created as a group.\n\n![workflow-roles](https://is.docs.wso2.com/en/5.11.0/assets/img/setup/workflow-roles.png)\n\nWhen adding workflows, groups will not be listed as roles under the approval step. Hence, to select a 'role' for a particular approval step in a workflow, create that role with the **Internal** domain via the management console.  \n\n## Logging\nThis section covers the updates related to logging configurations on Identity Server 5.11.0.\n\n### Archived log file names\nIn versions up to WSO2 Identity Server 5.10.0, archived log file names only include the date.\n\n``` java tab=\"Example\"\nwso2carbon-10-12-2020.log\n</code></pre></p> <p>However, from WSO2 Identity Server 5.11.0 onwards, an integer <code>i</code> has been added to the file name to represent the number of rollovers. This avoids target file overwriting on every rollover.</p> <p>``` java tab=\"Example\" wso2carbon-10-12-2020.1.log <pre><code>### Access log pattern\n\nIn versions up to WSO2 Identity Server 5.10.0, access logs are printed, as seen below.\n\n``` java tab=\"Example\"\n127.0.0.1 - - [26/Apr/2020:22:35:52 +0530] GET /carbon/admin/images/favicon.ico HTTP/1.1 200 17542 https://is.wso2.com:9443/carbon/admin/login.jsp Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.122 Safari/537.36 0.001\n</code></pre></p> <p>In the example given above, the user agent is <code>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.122 Safari/537.36</code> and the referer is <code>https://is.wso2.com:9443/carbon/admin/login.jsp</code>. As you can see, the user agent has white spaces in between, which prevents access log analyzer tools from processing the log lines properly.</p> <p>As a solution, the user agent and referer will be printed within double quotes from WSO2 Identity Server 5.11.0 onwards.</p> <p>``` java tab=\"Example\" 127.0.0.1 - - [21/Oct/2020:11:46:54 +0530] GET /favicon.ico HTTP/1.1 401 - \"https://localhost:9443/oauth2/authorize?sessionDataKey=d7ccf253-4abd-4a33-a79b-d7a71aa631d0\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36\" 0.001 <pre><code>## New email templates\nFrom WSO2 Identity Server 5.11.0 onwards, five new email templates have been added.\n\n- TenantRegistrationConfirmation\n- LiteUserEmailConfirmation\n- ResendLiteUserEmailConfirmation\n- ResendVerifyEmailOnUpdate\n- SelfSignUpSuccess\n\nApart from these new email templates, the Email Content Type was changed to `text/html` for the **Totp** email template.\n\n## User store managers\nNew user store managers with inbuilt unique ID support were introduced in WSO2 5.10.0 and named with the `UniqueID` prefix. User store managers that do not have `UniqueID` as part of the user store manager name are only available for backward compatibility purposes and can only be used if you are migrating from a previous version of WSO2 Identity Server.\nIf you are using any such user store managers, add the following configuration to the `&lt;IS_HOME&gt;/repository/conf/deployment.toml` file to support using the user store in the management console or console application.\n\nNote that both existing user stores, as well as new user stores must be configured as shown below.\n\n- Format\n\n    ```\n    [user_store_mgt]\n    allowed_user_stores=[&lt;existing userstores..&gt;,\"&lt;new userstore&gt;\"]\n    ```\n\n- Sample\n\n    ```\n    [user_store_mgt]\n    allowed_user_stores=[\"org.wso2.carbon.user.core.jdbc.UniqueIDJDBCUserStoreManager\", \"org.wso2.carbon.user.core.ldap.UniqueIDActiveDirectoryUserStoreManager\",\"org.wso2.carbon.user.core.ldap.UniqueIDReadOnlyLDAPUserStoreManager\",\"org.wso2.carbon.user.core.ldap.UniqueIDReadWriteLDAPUserStoreManager\",\"org.wso2.carbon.user.core.jdbc.JDBCUserStoreManager\"]\n    ```\n\n## System Configs\nThis section covers the updates related to system configurations on Identity Server 5.11.0.\n\n### Configuring CORS\nComplete the following steps for the CORS migration.\n\n1. Remove any CORS configurations defined in the `&lt;IS_HOME&gt;/repository/resources/conf/tomcat/web.xml` file.\nTo do this, remove the whole tag under the filter class named `com.thetransactioncompany.cors.CORSFilter`.\n\n2. In order to complete the CORS migration, any CORS configurations defined at the `web.xml` file should be reconfigured in the `deployment.toml` file. The following table shows how the old configurations in the `web.xml` file are mapped to the new ones in the `deployment.toml` file.\n\n    | Old (xml) configuration | New (toml) configuration |\n    |-|-|\n    | cors.allowGenericHttpRequests | allow_generic_http_requests |\n    | cors.allowOrigin {\"*\"} | allow_any_origin |\n    | cors.allowOrigin | allowed_origins |\n    | cors.allowSubdomains | allow_subdomains |\n    | cors.supportedMethods | supported_methods |\n    | cors.supportedHeaders {\"*\"} | support_any_header |\n    | cors.supportedHeaders | supported_headers |\n    | cors.exposedHeaders | exposed_headers |\n    | cors.supportsCredentials | supports_credentials |\n    | cors.maxAge | max_age |\n    | cors.tagRequests | tag_requests |\n\n    A sample CORS toml configuration is shown below.\n\n    ```toml\n    [cors]\n    allow_generic_http_requests = true\n\n    allowed_origins = [\n        \"http://wso2.is\"\n    ]\n    allow_subdomains = false\n    supported_methods = [\n        \"GET\",\n        \"POST\",\n        \"HEAD\",\n        \"OPTIONS\"\n    ]\n    support_any_header = true\n    supported_headers = []\n    exposed_headers = []\n    supports_credentials = true\n    max_age = 3600\n    tag_requests = false\n    ```\n\n### Configurable system apps\nIn WSO2 5.11.0, the **My Account** and **Console** applications are `readonly` apps by default. To make the callback URLs for these apps configurable, add the following configuration to the `deployment.toml` file. \n\n```toml\n[system_applications]\nread_only_apps = []\n</code></pre></p>"},{"location":"identity-server/migration-docs/is-5.11.0/migrating-what-has-changed/#deprecating-webcontextroot-configuration","title":"Deprecating WebContextRoot configuration","text":"<p>The <code>WebContextRoot</code> configuration was included in the <code>&lt;IS_HOME&gt;/repository/conf/carbon.xml</code> file, and it was the configuration used to build the URLs within the WSO2 IS the product. However, it was observed that this has not been consistent in all places across the product and therefore, the usage of this config has been minimal.</p> <p>From WSO2 Identity Server 5.11.0 onwards, we have deprecated the <code>WebContextRoot</code> configuration. Alternatively, you can use the <code>ProxyContextPath</code> configuration by adding it to the <code>&lt;IS_HOME&gt;/repository/conf/deployment.toml</code> file, as shown below.</p> <pre><code>[server]\nproxy_context_path=\"abc\"\n</code></pre>"},{"location":"identity-server/migration-docs/is-5.11.0/migration-process/","title":"Migration Process","text":"<p>This section contains the complete migration process related to the WSO2 Identity Server. Go through the guidelines given below before attempting to migrate the production environment.</p>"},{"location":"identity-server/migration-docs/is-5.11.0/migration-process/#recommendations","title":"Recommendations","text":"<ol> <li> <p>If you already have a WSO2 subscription, reach out to our support team through your support account.</p> </li> <li> <p>Always migrate to the latest version since the latest fixes and new features are available in the most recent version. If you have a particular requirement to migrate to an intermediate version, contact WSO2 Support.</p> </li> </ol> <p>Note</p> <p>Migrating the production environment requires additional hardware/VM resources since both the old and new environments will run until all the traffic is routed to the new environment.</p>"},{"location":"identity-server/migration-docs/is-5.11.0/migration-process/#do-you-have-a-custom-requirement","title":"Do you have a custom requirement?","text":"<p>If your customizations are already available in the latest version, you can remove the customization after migration. You can contact WSO2 Support for assistance. However, if a custom requirement is unavailable in the latest version, follow the steps below to migrate the customizations.</p> <ul> <li>First, update the dependency version of the dependent WSO2 components and re-build the customized component.</li> <li>As a practice, WSO2 does not make API changes in minor releases of the dependency jars. However, update the custom code and rebuild if there are API changes.</li> <li>For more information about migrating customizations, see the section on Migrating Custom Components.</li> </ul>"},{"location":"identity-server/migration-docs/is-5.11.0/migration-process/#step-by-step-instructions","title":"Step-by-step instructions","text":"<p>Follow the steps given below once you have followed the steps above to migrate customizations OR if you do not have any custom requirements.</p> <ol> <li> <p>List down the functional and non-functional use cases in your deployment and create test cases for them.</p> <p>Important</p> <p>This step is crucial to verify that the migrated environment works as expected.</p> </li> <li> <p>Make sure that all the properties in the <code>&lt;IS_HOME&gt;/repository/conf/deployment.toml</code> file, such as the database configurations, are set to the correct values based on the requirement.</p> </li> <li> <p>Identify the configuration migrations required for the new setup. For more information, see the document on What Has Changed in IS 5.11.0.</p> </li> <li> <p>Prepare a test setup of the migrating version with customizations and necessary config changes, and test your functional and non-functional requirements.</p> </li> <li> <p>Before starting the migration, run the token and session cleanup scripts in the databases of the environment if you are not doing regular cleanups.</p> <p>Info</p> <p>Clean-up scripts can be found in the relevant db folder in <code>&lt;IS-HOME&gt;/dbscripts/identity/stored-procedures</code></p> </li> <li> <p>Start the migration from the lowest environment such as dev and continue up to the highest before the production such as pre-prod.</p> </li> <li> <p>Run the test cases in the migrated environments to confirm that your functional and nonfunctional requirements are met in the migrated environment.</p> </li> <li> <p>Prior to the production migration, run a pilot migration on your pre-prod environment. It will be ideal if the pre-prod environment is similar to the production environment.</p> <ul> <li>If possible, restore a database dump of the production environment to the pre-prod environment and perform the pilot migration.</li> <li>If the production database dump cannot be used, at least ensure that you have sufficient data in the database to mimic the production environment.</li> </ul> </li> </ol> <p>Recommendation</p> <p>When you follow the above steps, you can get a rough estimate of the time for the final production update and allocate time slots per the above analysis. WSO2 recommends performing the migration while the system is under minimum traffic.</p> <p>Once you are satisfied with the above steps, proceed with production migration. After the migration is complete, verify it using the following steps.</p> <ul> <li>Monitor the system's health (CPU, memory usage, etc.).</li> <li>Monitor the WSO2 logs for errors.</li> </ul> <p>Note</p> <p>If you see any problems in the migrated system, revert the traffic to the previous setup and investigate the problem.</p>"},{"location":"identity-server/migration-docs/is-5.8.0/migrating-data-publishers/","title":"Migrating Data Publishers","text":"<p>In prior versions of WSO2 Identity Server, data publishers were implementations of the AbstractAuthenticationDataP ublisher that are invoked iteratively by the AuthnDataPublisherProxy when a session changes, such that the data publishers send events to their corresponding destinations. From WSO2 Identity Server 5.8.0 onwards, all data publishers have been migrated to act as event handlers that subscribe to authentication events.</p> <p>Note </p> <p>One of the main reasons for this is because the current implementation causes the DASSessionDataPublisherImpl, AuthenticationAuditLogger and DASLoginDataPublisherImpl classes to unnecessarily implement all the methods of the AbstractAuthenticationDataPublisher. This change provides the capability for the data publishers to subscribe only to the relevant events of interest and act upon them.</p> <p>The new design approach is as follows:</p> <ul> <li>When a session changes, the identity-framework publishes an event to the AuthnDataPublisherProxy.</li> <li>AuthnDataPublisherProxyuses the IdentityEventService in the identity-framework to invoke corresponding handlers to handle the event.</li> <li>These event handlers extend the AbstractEventHandler and override its handleEvent method.</li> </ul> <p>The diagrams given below illustrate the difference between the design approach in versions prior to WSO IS 5.8.0 and the new design approach.</p> <ul> <li>Old design approach</li> </ul> <p></p> <ul> <li>New design approach</li> </ul> <p></p> <p>This section guides you through migrating an existing data publisher to an event handler.</p>"},{"location":"identity-server/migration-docs/is-5.8.0/migrating-data-publishers/#migrating-data-publisher-to-event-handler","title":"Migrating data publisher to event handler","text":"<p>For the purposes of demonstrating this using an example, the steps given in this tutorial demonstrate deprecating the DASSessionDataPublisherImpl and migrating it to use the AnalyticsSessionDataPublishHandler instead.</p> <ol> <li> <p>Open the identity.xml file found in the /repository/conf/identity folder and remove the listener configuration corresponding to the data publisher that you wish to migrate. For example, the following listener configuration corresponding to the DASSessionDataPublisherImpl has been removed in order to deprecate it. <pre><code>&lt;EventListener type=\"org.wso2.carbon.identity.core.handler.\nAbstractIdentityMessageHandler\"\nname=\"org.wso2.carbon.identity.data.publisher.application.authentication.impl.\nDASSessionDataPublisherImpl\"\norderId=\"11\" enable=\"false\"/&gt;\n</code></pre> <li> <p>In order to support backward compatibility, override the isEnabled method in the event handler class that extends the AbstractEventHandler, such that if the listener property is not defined in the identity.xml, it will return false.</p> <pre><code>@Override\npublic boolean isEnabled(MessageContext messageContext) {\nIdentityEventListenerConfig identityEventListenerConfig = IdentityUtil.\nreadEventListenerProperty\n(AbstractIdentityMessageHandler.class.getName(), this.getClass().\ngetName());\n\nif (identityEventListenerConfig == null) {\nreturn false;\n}\n\nreturn Boolean.parseBoolean(identityEventListenerConfig.getEnable());\n}\n</code></pre> </li> <li> <p>To enable the new event handler, add the relevant property to the identity.properties file found in the /repository/conf/identity folder. For example, following properties were added to define the AnalyticsSessionDataPublishHandler. <pre><code>module.name.15=analyticsSessionDataPublisher\nanalyticsSessionDataPublisher.subscription.1=SESSION_CREATE\nanalyticsSessionDataPublisher.subscription.2=SESSION_UPDATE\nanalyticsSessionDataPublisher.subscription.3=SESSION_TERMINATE\nanalyticsSessionDataPublisher.enable=true\n</code></pre> <li> <p>Add the following method to the event handler in order to verify that the handler is enabled properly. Adjust the code according to the relevant handler.</p> <pre><code>private boolean isAnalyticsSessionDataPublishingEnabled(Event event) throws\nIdentityEventException {\n\nboolean isEnabled = false;\n\nString handlerEnabled = this.configs.getModuleProperties().getProperty\n(SessionDataPublisherConstants.\nANALYTICS_SESSION_DATA_PUBLISHER_ENABLED);\nisEnabled = Boolean.parseBoolean(handlerEnabled);\n\nreturn isEnabled;\n}\n</code></pre> </li> <li> <p>One of the main reasons to deprecate the implementation of data publishers is that these data publishers override all the methods of AbstractAuthenticationDataPublisher. Due to this redundancy, this implementation has been changed such that these publishers get subscribed only to their relevant event. Adjust the implementation accordingly as shown in the example below.</p> <pre><code>@Override\npublic void publishAuthenticationStepSuccess(HttpServletRequest request,\nAuthenticationContext context,\nMap&lt;String, Object&gt; params) {\n// This method is overridden to do nothing since this is a session data\npublisher.\n}\n\n@Override\npublic void publishAuthenticationStepFailure(HttpServletRequest request,\nAuthenticationContext context,\nMap&lt;String, Object&gt; params) {\n// This method is overridden to do nothing since this is a session data\npublisher.\n}\n\n@Override\npublic void publishAuthenticationSuccess(HttpServletRequest request,\nAuthenticationContext context, Map&lt;String,\nObject&gt; params) {\n// This method is overridden to do nothing since this is a session data\npublisher.\n}\n\n@Override\npublic void publishAuthenticationFailure(HttpServletRequest request,\nAuthenticationContext context, Map&lt;String,\nObject&gt; params) {\n// This method is overridden to do nothing since this is a session data\npublisher.\n}\n\n@Override\npublic void doPublishAuthenticationStepSuccess(AuthenticationData\nauthenticationData) {\n// This method is not implemented since there is no usage of it in session\npublishing\n}\n\n@Override\npublic void doPublishAuthenticationStepFailure(AuthenticationData\nauthenticationData) {\n// This method is not implemented since there is no usage of it in session\npublishing\n}\n\n@Override\npublic void doPublishAuthenticationSuccess(AuthenticationData\nauthenticationData) {\n// This method is not implemented since there is no usage of it in session\npublishing\n}\n\n@Override\npublic void doPublishAuthenticationFailure(AuthenticationData\nauthenticationData) {\n// This method is not implemented since there is no usage of it in session\npublishing\n}\n\n@Override\npublic void doPublishSessionCreation(SessionData sessionData) {\nif (LOG.isDebugEnabled()) {\nLOG.debug(\"Publishing session creation to DAS\");\n}\npublishSessionData(sessionData, AuthPublisherConstants.\nSESSION_CREATION_STATUS);\n}\n\n@Override\npublic void doPublishSessionTermination(SessionData sessionData) {\nif (LOG.isDebugEnabled()) {\nLOG.debug(\"Publishing session termination to DAS\");\n}\npublishSessionData(sessionData, AuthPublisherConstants.\nSESSION_TERMINATION_STATUS);\n}\n\n@Override\npublic void doPublishSessionUpdate(SessionData sessionData) {\nif (LOG.isDebugEnabled()) {\nLOG.debug(\"Publishing session update to DAS\");\n}\npublishSessionData(sessionData, AuthPublisherConstants.\nSESSION_UPDATE_STATUS);\n}\n</code></pre> </li> <li> <p>Override the handleEvent method as seen in the example below. For example, as seen in the implementation of the DASSessionDataPublisherImpl shown above, it publishes data only for the following three events.</p> <ul> <li>Session Create</li> <li>Session Terminate</li> <li>Session Update</li> </ul> <p>This means that the the event handler written for this data publisher should only handle the events mentioned above. Therefore, the AnalyticsSessionDataPublishHandler is implemented to override the handleEvent method as follows.</p> <pre><code>@Override\npublic void handleEvent(Event event) throws IdentityEventException {\n\nboolean isEnabled = isAnalyticsSessionDataPublishingEnabled(event);\n\nif (!isEnabled) {\nreturn;\n}\n\nSessionData sessionData = SessionDataPublisherUtil.buildSessionData(event);\nif (IdentityEventConstants.EventName.SESSION_CREATE.name().equals(event.\ngetEventName())) {\ndoPublishSessionCreation(sessionData);\n} else if (IdentityEventConstants.EventName.SESSION_TERMINATE.name().equals\n(event.getEventName())) {\ndoPublishSessionTermination(sessionData);\n} else if (IdentityEventConstants.EventName.SESSION_UPDATE.name().equals\n(event.getEventName())) {\ndoPublishSessionUpdate(sessionData);\n} else {\nLOG.error(\"Event \" + event.getEventName() + \" cannot be handled\");\n}\n}\n</code></pre> <p>Note </p> <p>As shown above, in order to invoke the corresponding publishing method, you must first verify whether the handler is enabled or not. The buildSessionData method of the SessionDataPublisherUtil is introduced to create a session data object to populate the payload of the relevant event.</p> </li> <li> <p>Next, populate the event payload of the event handler and publish it to the Analytics Engine. In this example, similar to the implementation of the DASSessionDataPublisherImpl, the event payload of the AnalyticsSessionDataPublishHandler is populated and published. The final implementation of the AnalyticsSessionDataPublishHandler class is as follows.</p> <pre><code>public class AnalyticsSessionDataPublishHandler extends AbstractEventHandler {\n\nprivate static final Log LOG = LogFactory.getLog\n(AnalyticsSessionDataPublishHandler.class);\n\n@Override\npublic String getName() {\n\nreturn SessionDataPublisherConstants.ANALYTICS_SESSION_PUBLISHER_NAME;\n}\n\n@Override\npublic void handleEvent(Event event) throws IdentityEventException {\n\nboolean isEnabled = isAnalyticsSessionDataPublishingEnabled(event);\n\nif (!isEnabled) {\nreturn;\n}\n\nSessionData sessionData = SessionDataPublisherUtil.buildSessionData\n(event);\nif (IdentityEventConstants.EventName.SESSION_CREATE.name().equals(event.\ngetEventName())) {\ndoPublishSessionCreation(sessionData);\n} else if (IdentityEventConstants.EventName.SESSION_TERMINATE.name().\nequals(event.getEventName())) {\ndoPublishSessionTermination(sessionData);\n} else if (IdentityEventConstants.EventName.SESSION_UPDATE.name().equals\n(event.getEventName())) {\ndoPublishSessionUpdate(sessionData);\n} else {\nLOG.error(\"Event \" + event.getEventName() + \" cannot be handled\");\n}\n}\n\nprotected void doPublishSessionCreation(SessionData sessionData) {\n\npublishSessionData(sessionData, SessionDataPublisherConstants.\nSESSION_CREATION_STATUS);\n}\n\nprotected void doPublishSessionTermination(SessionData sessionData) {\n\npublishSessionData(sessionData, SessionDataPublisherConstants.\nSESSION_TERMINATION_STATUS);\n\n}\n\nprotected void doPublishSessionUpdate(SessionData sessionData) {\n\npublishSessionData(sessionData, SessionDataPublisherConstants.\nSESSION_UPDATE_STATUS);\n}\n\nprotected void publishSessionData(SessionData sessionData, int actionId) {\n\nSessionDataPublisherUtil.updateTimeStamps(sessionData, actionId);\ntry {\nObject[] payloadData = createPayload(sessionData, actionId);\npublishToAnalytics(sessionData, payloadData);\n\n} catch (IdentityRuntimeException e) {\nif (LOG.isDebugEnabled()) {\nLOG.error(\"Error while publishing session information\", e);\n}\n}\n\n}\n\nprivate void publishToAnalytics(SessionData sessionData, Object[]\npayloadData) {\n\nString[] publishingDomains = (String[]) sessionData.getParameter\n(AuthPublisherConstants.TENANT_ID);\nif (publishingDomains != null &amp;&amp; publishingDomains.length &gt; 0) {\ntry {\nFrameworkUtils.startTenantFlow(MultitenantConstants.\nSUPER_TENANT_DOMAIN_NAME);\nfor (String publishingDomain : publishingDomains) {\nObject[] metadataArray = AuthnDataPublisherUtils.\ngetMetaDataArray(publishingDomain);\norg.wso2.carbon.databridge.commons.Event event =\nnew org.wso2.carbon.databridge.commons.Event\n(SessionDataPublisherConstants.\nSESSION_DATA_STREAM_NAME, System.\ncurrentTimeMillis(),\nmetadataArray, null, payloadData);\nSessionDataPublishServiceHolder.getInstance().\ngetPublisherService().publish(event);\nif (LOG.isDebugEnabled() &amp;&amp; event != null) {\nLOG.debug(\"Sending out to publishing domain:\" +\npublishingDomain + \" \\n event : \"\n+ event.toString());\n}\n}\n} finally {\nFrameworkUtils.endTenantFlow();\n}\n}\n}\n\nprivate Object[] createPayload(SessionData sessionData, int actionId) {\n\nObject[] payloadData = new Object[15];\npayloadData[0] = AuthnDataPublisherUtils.replaceIfNotAvailable\n(AuthPublisherConstants.CONFIG_PREFIX +\nAuthPublisherConstants.SESSION_ID, sessionData.getSessionId());\npayloadData[1] = sessionData.getCreatedTimestamp();\npayloadData[2] = sessionData.getUpdatedTimestamp();\npayloadData[3] = sessionData.getTerminationTimestamp();\npayloadData[4] = actionId;\npayloadData[5] = AuthnDataPublisherUtils.replaceIfNotAvailable\n(AuthPublisherConstants.CONFIG_PREFIX +\nAuthPublisherConstants.USERNAME, sessionData.getUser());\npayloadData[6] = AuthnDataPublisherUtils.replaceIfNotAvailable\n(AuthPublisherConstants.CONFIG_PREFIX +\nAuthPublisherConstants.USER_STORE_DOMAIN, sessionData.\ngetUserStoreDomain());\npayloadData[7] = sessionData.getRemoteIP();\npayloadData[8] = AuthPublisherConstants.NOT_AVAILABLE;\npayloadData[9] = sessionData.getTenantDomain();\npayloadData[10] = sessionData.getServiceProvider();\npayloadData[11] = sessionData.getIdentityProviders();\npayloadData[12] = sessionData.isRememberMe();\npayloadData[13] = sessionData.getUserAgent();\npayloadData[14] = System.currentTimeMillis();\n\nif (LOG.isDebugEnabled()) {\nLOG.debug(\"The created payload :\" + Arrays.asList(payloadData));\n}\nreturn payloadData;\n}\n\n@Override\npublic boolean isEnabled(MessageContext messageContext) {\nIdentityEventListenerConfig identityEventListenerConfig = IdentityUtil.\nreadEventListenerProperty\n(AbstractIdentityMessageHandler.class.getName(), this.\ngetClass().getName());\n\nif (identityEventListenerConfig == null) {\nreturn false;\n}\n\nreturn Boolean.parseBoolean(identityEventListenerConfig.getEnable());\n}\n\nprivate boolean isAnalyticsSessionDataPublishingEnabled(Event event) throws\nIdentityEventException {\n\nboolean isEnabled = false;\n\nString handlerEnabled = this.configs.getModuleProperties().getProperty\n(SessionDataPublisherConstants.\nANALYTICS_SESSION_DATA_PUBLISHER_ENABLED);\nisEnabled = Boolean.parseBoolean(handlerEnabled);\n\nreturn isEnabled;\n}\n}\n</code></pre> </li> <li> <p>Register the service to the OSGi runtime using the following code.</p> <pre><code>BundleContext bundleContext = context.getBundleContext();\nbundleContext.registerService(AbstractEventHandler.class, new\nAnalyticsSessionDataPublishHandler(), null);\n</code></pre> </li>"},{"location":"identity-server/migration-docs/is-5.8.0/understanding-what-has-changed/","title":"Understanding What Has Changed","text":"<p>This page provides details about the behavioral changes and configuration changes from WSO2 Identity Server 5.7.0 to 5.8.0.</p> <ul> <li>Behavioral changes</li> <li>Configuration changes</li> </ul>"},{"location":"identity-server/migration-docs/is-5.8.0/understanding-what-has-changed/#behavioral-changes","title":"Behavioral changes","text":"<p>This section explains the features for which the behaviour has changed, and the impact is causes on your current implementation when you migrate to the latest release. Go through the behavioral changes to understand what has changed and prepare for migration impact.</p>"},{"location":"identity-server/migration-docs/is-5.8.0/understanding-what-has-changed/#change-1","title":"Change #1","text":"<p>Use case</p> <p>By default, WSO2 IS supports a fixed set of attributes for the SCIM2 user object. These are default attributes that are defined through the SCIM2 specification. However, in reality, organizations in the industry will have their own defined attributes for users. In such cases, the Enterprise User schema extension can be used. The Enterprise User schema extension defines attributes commonly used in representing users that belong to, or act on behalf of, a business or enterprise.</p> <p>Change</p> <p>In this release, the urn:ietf:params:scim:schemas:extension:enterprise: 2.0:User key is used in SCIM user creation to specify the properties of a user specified in urn: ietf:params:scim:schemas:extension:enterprise:2.0:User. This behavioral change is done in order to comply with the SCIM2 specification.</p> <p>Example </p> <p>For example, the SCIM2 response for the List Users API has changed as follows.</p> <ul> <li> <p>5.7.0</p> <p>Request</p> <pre><code>curl -v -k --user admin:admin https://localhost:9443/scim2/Users\n/7d132f02-221d-4a5f-8b95-8635666e96c\n</code></pre> <p>Response</p> <pre><code>{\"emails\":[\"kim@wso2.com\"],\"urn:ietf:params:scim:schemas:extension:\nenterprise:2.0:User\":{\"organization\":\"Wso2\"},\"meta\":{\"created\":\"2019-\n05-13T06:53:03.382Z\",\"lastModified\":\"2019-05-13T06:57:05.730Z\",\"\nresourceType\":\"User\"},\"schemas\":[\"urn:ietf:params:scim:schemas:core:\n2.0:User\",\"urn:ietf:params:scim:schemas:extension:enterprise:2.0:\nUser\"],\"roles\":[{\"type\":\"default\",\"value\":\"Internal/everyone\"}],\"\nname\":{\"givenName\":\"Alex\",\"familyName\":\"Anderson\"},\"id\":\"7d132f02-\n221d-4a5f-8b95-8635666e96c7\",\"userName\":\"kim3\"}\n</code></pre> </li> <li> <p>5.8.0</p> <p>Request</p> <pre><code>curl -v -k --user admin:admin https://localhost:9443/scim2/Users\n/7d132f02-221d-4a5f-8b95-8635666e96c\n</code></pre> <p>Response</p> <pre><code>{\"emails\":[\"kim@wso2.com\"],\"urn:ietf:params:scim:schemas:extension:\nenterprise:2.0:User\":{\"organization\":\"Wso2\"},\"meta\":{\"created\":\"2019-\n05-13T06:53:03.382Z\",\"lastModified\":\"2019-05-13T06:57:05.730Z\",\"\nresourceType\":\"User\"},\"schemas\":[\"urn:ietf:params:scim:schemas:core:\n2.0:User\",\"urn:ietf:params:scim:schemas:extension:enterprise:2.0:\nUser\"],\"roles\":[{\"type\":\"default\",\"value\":\"Internal/everyone\"}],\"\nname\":{\"givenName\":\"Alex\",\"familyName\":\"Anderson\"},\"id\":\"7d132f02-\n221d-4a5f-8b95-8635666e96c7\",\"userName\":\"kim3\"}\n</code></pre> </li> </ul> <p>Impact</p> <p>When using the Enterprise User schema extension, if a client has been written based on the 5.7.0 response shown above, issues may occur from the client side as the response of the default pack has now changed.</p> <p>How to revert </p> <p>To revert back to the previous behaviour, change the following attributeName back to \"urn:ietf:params:scim:schemas:extension:enterprise:2.0:User\" in the /repository /conf/scim2-schema-extension.xml file. <pre><code>attributeURI\":\"urn:ietf:params:scim:schemas:extension:enterprise:2.0:\nUser\",\n\n\"attributeName\":\"urn:ietf:params:scim:schemas:extension:enterprise:2.0:\nUser\"\n</code></pre>"},{"location":"identity-server/migration-docs/is-5.8.0/understanding-what-has-changed/#change-2","title":"Change #2","text":"<p>Use case</p> <p>WSO2 IS uses a configuration property to determine the private key that should be used to sign the JWTs issued by the WSO2 Identity Server.</p> <p>Change</p> <p>In IS 5.7.0 the configuration property is set to 'false' by default, which means the JWTs such as Id token, Request Object, Self Contain access token etc., are signed using the private key of the authorized user's tenant domain keystore. From IS 5.8.0 onwards, the default value is set to 'true', which means that JWTs issued from WSO2 IS are signed with the private key belonging to the service provider's keystore.</p> <p>Impact</p> <p>This only makes a difference if the service provider is a SaaS-enabled one; else the user\u2019s tenant domain and the service provider\u2019s tenant domain are the same. If the service provider is SaaS- enabled and this property is set to false, verifying the signature based on the public key of the keystore of the authorized users the signature verification can fail.</p> <p>How to revert </p> <p>To revert back to the previous behavior, change the following property value back to \"false\" in the /repository/conf/identity/identity.xml file. <pre><code>&lt;SignJWTWithSPKey&gt;true&lt;/SignJWTWithSPKey&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/is-5.8.0/understanding-what-has-changed/#change-3","title":"Change #3","text":"<p>Use case</p> <p>In prior versions of WSO2 Identity Server, data publishers were implementations of the Ab stractAuthenticationDataPublisher that are invoked iteratively by the AuthnDataPublisherProxywhen a session changes, such that the data publishers send events to their corresponding destinations. From WSO2 Identity Server 5.8.0 onwards, all data publishers have been migrated to act as event handlers that subscribe to authentication events.</p> <p>Impact</p> <p>Custom DataPublishers that were written for previous versions will not work with the default pack as these listeners are now disabled. For information about migrating existing data publishers to event handlers, see Migrating Data Publishers on the Migration doc.</p> <p>How to revert</p> <p>To revert back to the previous behavior, do the following:</p> <p>Add and enable the following event listeners in the /repository/conf/identity /identity.xml file. <pre><code>&lt;EventListener type=\"org.wso2.carbon.identity.core.handler.\nAbstractIdentityMessageHandler\" name=\"org.wso2.carbon.\nidentity.data.publisher.application.authentication.impl.\nDASLoginDataPublisherImpl\" orderId=\"10\" enable=\"true\"/&gt;\n\n&lt;EventListener type=\"org.wso2.carbon.identity.core.handler.\nAbstractIdentityMessageHandler\" name=\"org.wso2.carbon.identity.data.\npublisher.application.authentication.impl.DASSessionDataPublisherImpl\"\norderId=\"11\" enable=\"true\"/&gt;\n\n&lt;EventListener type=\"org.wso2.carbon.identity.core.handler.\nAbstractIdentityMessageHandler\" name=\"org.wso2.carbon.identity.captcha.\nvalidator.FailLoginAttemptValidator\" orderId=\"10\" enable=\"true\"/&gt;\n</code></pre> <p>Set the enable parameter of the following properties to \"false\" in the /repository /conf/identity/identity-event.properties file. <pre><code>module.name.14=analyticsLoginDataPublisheranalyticsLoginDataPublisher.\nsubscription.1=AUTHENTICATION_STEP_SUCCESS\nanalyticsLoginDataPublisher.subscription.2=AUTHENTICATION_STEP_FAILURE\nanalyticsLoginDataPublisher.subscription.3=AUTHENTICATION_SUCCESS\nanalyticsLoginDataPublisher.subscription.4=AUTHENTICATION_FAILURE\nanalyticsLoginDataPublisher.enable=false\n\nmodule.name.15=analyticsSessionDataPublisher\nanalyticsSessionDataPublisher.subscription.1=SESSION_CREATE\nanalyticsSessionDataPublisher.subscription.2=SESSION_UPDATE\n\nanalyticsSessionDataPublisher.subscription.3=SESSION_TERMINATE\nanalyticsSessionDataPublisher.enable=true\n\nmodule.name.13=authenticationAuditLogger\nauthenticationAuditLogger.subscription.1=AUTHENTICATION_STEP_SUCCESS\nauthenticationAuditLogger.subscription.2=AUTHENTICATION_STEP_FAILURE\nauthenticationAuditLogger.subscription.3=AUTHENTICATION_SUCCESS\nauthenticationAuditLogger.subscription.4=AUTHENTICATION_FAILURE\nauthenticationAuditLogger.subscription.5=SESSION_TERMINATE\nauthenticationAuditLogger.enable=true\"\n\nmodule.name.16=failLoginAttemptValidator\nfailLoginAttemptValidator.subscription.1=AUTHENTICATION_STEP_FAILURE\nfailLoginAttemptValidator.enable=true\n</code></pre>"},{"location":"identity-server/migration-docs/is-5.8.0/understanding-what-has-changed/#change-4","title":"Change #4","text":"<p>Use case</p> <p>The following configuration properties have been added to support filtering^ users or groups only from the PRIMARY domain.</p> <pre><code>&lt;MandateDomainForUsernamesAndGroupNamesInResponse&gt;false&lt;\n/MandateDomainForUsernamesAndGroupNamesInResponse&gt;\n&lt;MandateDomainForGroupNamesInGroupsResponse&gt;false&lt;\n/MandateDomainForGroupNamesInGroupsResponse&gt;\n</code></pre> <p>Change</p> <p>Enabling the  property prepends the \"PRIMARY/\" prefix in the SCIM2 response to the user names and role names (group names) that belong to the PRIMARY user store, regardless of whether the response is for the users endpoint or the groups endpoint. When the properties are set to 'false', the \"PRIMARY/\" prefix will not be prepended. <p>Impact</p> <p>When this property is enabled, the SCIM response will be different from responses received in previous versions of WSO2 IS. Therefore, if some clients have been written based on these SCIM responses, there is a possibility that this change could break those clients.</p> <p>Example</p> <p>The following code blocks show the difference between the requests and responses that are recieved when this property is enabled, when it is disabled, and in versions prior to 5.8.0. Note that in previous versions, there is an inconsistency in the responses recieved (i.e., the \"PRIMARY/\" prefix is prepended to group names only in the groups endpoint request). This inconsistency has been fixed with the introduction of these two new properties. When the  property is enabled, the \"PRIMARY/\" prefix is prepended to both user names and group names for both users and groups endpoint responses, and when the property is disabled, it is not prepended at all. <ul> <li> <p>Old behavior</p> <p>Groups endpoint request:</p> <pre><code>curl -v -k --user admin:admin 'https://localhost:9443/scim2/Groups'\n</code></pre> <p>Groups endpoint response:</p> <pre><code>{\"totalResults\":4,\"startIndex\":1,\"itemsPerPage\":4,\"schemas\":[\"urn:\nietf:params:scim:api:messages:2.0:ListResponse\"],\"Resources\":\n[{\"displayName\":\"PRIMARY/Engineering\",\"meta\":{\"created\":\"2019-05-\n13T03:44:36.787Z\",\"location\":\"https://localhost:9443/scim2/Groups\n/abb1c935-dcd2-4e89-a633-72bf22460463\",\"lastModified\":\"2019-05-13T03:\n44:36.787Z\"},\"members\":[{\"display\":\"ann\",\"value\":\"1ad7272f-82b5-4a44-\n9a86-fe1f31279b29\"}],\"id\":\"abb1c935-dcd2-4e89-a633-72bf22460463\"},\n{\"displayName\":\"Internal/system\",\"meta\":{\"created\":\"2019-05-13T03:42:\n53.425Z\",\"location\":\"https://localhost:9443/scim2/Groups/c9f632fa-\n12e9-405d-92c8-076657151104\",\"lastModified\":\"2019-05-13T03:42:53.\nZ\"},\"id\":\"c9f632fa-12e9-405d-92c8-076657151104\"},{\"displayName\":\"\nPRIMARY/admin\",\"meta\":{\"created\":\"2019-05-13T03:42:52.839Z\",\"\nlocation\":\"https://localhost:9443/scim2/Groups/bebe2740-8490-4da3-\n814b-fc010a92f665\",\"lastModified\":\"2019-05-13T03:42:52.839Z\"},\"\nmembers\":[{\"display\":\"admin\",\"value\":\"442c1077-75f4-4327-981a-\n4846efff396e\"}],\"id\":\"bebe2740-8490-4da3-814b-fc010a92f665\"},\n{\"displayName\":\"PRIMARY/Manager\",\"meta\":{\"created\":\"2019-05-13T03:44:\n54.118Z\",\"location\":\"https://localhost:9443/scim2/Groups/12bf8c7a-\n768e-43b2-b256-14c89b086bd3\",\"lastModified\":\"2019-05-13T03:44:54.\nZ\"},\"members\":[{\"display\":\"kim\",\"value\":\"68ef862d-6013-4bb0-87ad-\n9531d7a99765\"}],\"id\":\"12bf8c7a-768e-43b2-b256-14c89b086bd3\"}]}\n</code></pre> <p>Users endpoint request:</p> <pre><code>curl -v -k --user admin:admin 'https://localhost:9443/scim2/Users'\n</code></pre> <p>Users endpoint response:</p> <pre><code>{\"totalResults\":3,\"startIndex\":1,\"itemsPerPage\":3,\"schemas\":[\"urn:\nietf:params:scim:api:messages:2.0:ListResponse\"],\"Resources\":\n[{\"emails\":[\"admin@wso2.com\"],\"meta\":{\"created\":\"2019-05-13T09:12:\n52Z\",\"lastModified\":\"2019-05-13T09:12:52Z\"},\"name\":{\"givenName\":\"\nadmin\",\"familyName\":\"admin\"},\"groups\":[{\"display\":\"admin\",\"value\":\"\nbebe2740-8490-4da3-814b-fc010a92f665\"}],\"id\":\"442c1077-75f4-4327-\n981a-4846efff396e\",\"userName\":\"admin\"},{\"meta\":{\"created\":\"2019-05-\n13T03:44:20.474Z\",\"lastModified\":\"2019-05-13T03:44:20.474Z\",\"\nresourceType\":\"User\"},\"name\":{\"familyName\":\"ann\"},\"groups\":\n[{\"display\":\"Engineering\",\"value\":\"abb1c935-dcd2-4e89-a633-\n72bf22460463\"}],\"id\":\"1ad7272f-82b5-4a44-9a86-fe1f31279b29\",\"\nuserName\":\"ann\"},{\"meta\":{\"created\":\"2019-05-13T03:44:06.517Z\",\"\nlastModified\":\"2019-05-13T03:44:06.517Z\",\"resourceType\":\"User\"},\"\nname\":{\"familyName\":\"kim\"},\"groups\":[{\"display\":\"Manager\",\"value\":\"\n12bf8c7a-768e-43b2-b256-14c89b086bd3\"}],\"id\":\"68ef862d-6013-4bb0-\n87ad-9531d7a99765\",\"userName\":\"kim\"}]}\n</code></pre> </li> <li> <p>Enabled</p> <p>Groups endpoint request:</p> <pre><code>curl -v -k --user admin:admin 'https://localhost:9443/scim2/Groups'\n</code></pre> <p>Groups endpoint response:</p> <pre><code>{\"totalResults\":4,\"startIndex\":1,\"itemsPerPage\":4,\"schemas\":[\"urn:\nietf:params:scim:api:messages:2.0:ListResponse\"],\"Resources\":\n[{\"displayName\":\"PRIMARY/Engineering\",\"meta\":{\"created\":\"2019-05-\n13T03:44:36.787Z\",\"location\":\"https://localhost:9443/scim2/Groups\n/abb1c935-dcd2-4e89-a633-72bf22460463\",\"lastModified\":\"2019-05-13T03:\n44:36.787Z\"},\"members\":[{\"display\":\"PRIMARY/ann\",\"value\":\"1ad7272f-\n82b5-4a44-9a86-fe1f31279b29\"}],\"id\":\"abb1c935-dcd2-4e89-a633-\n72bf22460463\"},{\"displayName\":\"Internal/system\",\"meta\":{\"created\":\"\n2019-05-13T03:42:53.425Z\",\"location\":\"https://localhost:9443/scim\n/Groups/c9f632fa-12e9-405d-92c8-076657151104\",\"lastModified\":\"2019-\n05-13T03:42:53.425Z\"},\"id\":\"c9f632fa-12e9-405d-92c8-076657151104\"},\n{\"displayName\":\"PRIMARY/admin\",\"meta\":{\"created\":\"2019-05-13T03:42:\n52.839Z\",\"location\":\"https://localhost:9443/scim2/Groups/bebe2740-\n8490-4da3-814b-fc010a92f665\",\"lastModified\":\"2019-05-13T03:42:52.\nZ\"},\"members\":[{\"display\":\"PRIMARY/admin\",\"value\":\"442c1077-75f4-\n4327-981a-4846efff396e\"}],\"id\":\"bebe2740-8490-4da3-814b-\nfc010a92f665\"},{\"displayName\":\"PRIMARY/Manager\",\"meta\":{\"created\":\"\n2019-05-13T03:44:54.118Z\",\"location\":\"https://localhost:9443/scim\n/Groups/12bf8c7a-768e-43b2-b256-14c89b086bd3\",\"lastModified\":\"2019-\n05-13T03:44:54.118Z\"},\"members\":[{\"display\":\"PRIMARY/kim\",\"value\":\"\n68ef862d-6013-4bb0-87ad-9531d7a99765\"}],\"id\":\"12bf8c7a-768e-43b2-\nb256-14c89b086bd3\"}]}\n</code></pre> <p>Users endpoint request:</p> <pre><code>curl -v -k --user admin:admin 'https://localhost:9443/scim2/Users'\n</code></pre> <p>Users endpoint response:</p> <pre><code>{\"totalResults\":3,\"startIndex\":1,\"itemsPerPage\":3,\"schemas\":[\"urn:\nietf:params:scim:api:messages:2.0:ListResponse\"],\"Resources\":\n[{\"emails\":[\"admin@wso2.com\"],\"meta\":{\"created\":\"2019-05-13T09:12:\n52Z\",\"lastModified\":\"2019-05-13T09:12:52Z\"},\"name\":{\"givenName\":\"\nadmin\",\"familyName\":\"admin\"},\"groups\":[{\"display\":\"PRIMARY/admin\",\"\nvalue\":\"bebe2740-8490-4da3-814b-fc010a92f665\"}],\"id\":\"442c1077-75f4-\n4327-981a-4846efff396e\",\"userName\":\"PRIMARY/admin\"},{\"meta\":\n{\"created\":\"2019-05-13T03:44:20.474Z\",\"lastModified\":\"2019-05-13T03:\n44:20.474Z\",\"resourceType\":\"User\"},\"name\":{\"familyName\":\"ann\"},\"\ngroups\":[{\"display\":\"PRIMARY/Engineering\",\"value\":\"abb1c935-dcd2-\n4e89-a633-72bf22460463\"}],\"id\":\"1ad7272f-82b5-4a44-9a86-\nfe1f31279b29\",\"userName\":\"PRIMARY/ann\"},{\"meta\":{\"created\":\"2019-05-\n13T03:44:06.517Z\",\"lastModified\":\"2019-05-13T03:44:06.517Z\",\"\nresourceType\":\"User\"},\"name\":{\"familyName\":\"kim\"},\"groups\":\n[{\"display\":\"PRIMARY/Manager\",\"value\":\"12bf8c7a-768e-43b2-b256-\n14c89b086bd3\"}],\"id\":\"68ef862d-6013-4bb0-87ad-9531d7a99765\",\"\nuserName\":\"PRIMARY/kim\"}]}\n</code></pre> </li> <li> <p>Disabled</p> <p>Groups endpoint request:</p> <pre><code>curl -v -k --user admin:admin 'https://localhost:9443/scim2/Groups'\n</code></pre> </li> <li> <p>Groups endpoint response:</p> <pre><code>{\"totalResults\":4,\"startIndex\":1,\"itemsPerPage\":4,\"schemas\":[\"urn:\nietf:params:scim:api:messages:2.0:ListResponse\"],\"Resources\":\n[{\"displayName\":\"Engineering\",\"meta\":{\"created\":\"2019-05-13T03:44:\n36.787Z\",\"location\":\"https://localhost:9443/scim2/Groups/abb1c935-\ndcd2-4e89-a633-72bf22460463\",\"lastModified\":\"2019-05-13T03:44:36.\nZ\"},\"members\":[{\"display\":\"ann\",\"value\":\"1ad7272f-82b5-4a44-9a86-\nfe1f31279b29\"}],\"id\":\"abb1c935-dcd2-4e89-a633-72bf22460463\"},\n{\"displayName\":\"Internal/system\",\"meta\":{\"created\":\"2019-05-13T03:42:\n53.425Z\",\"location\":\"https://localhost:9443/scim2/Groups/c9f632fa-\n12e9-405d-92c8-076657151104\",\"lastModified\":\"2019-05-13T03:42:53.\nZ\"},\"id\":\"c9f632fa-12e9-405d-92c8-076657151104\"},{\"displayName\":\"\nadmin\",\"meta\":{\"created\":\"2019-05-13T03:42:52.839Z\",\"location\":\"\nhttps://localhost:9443/scim2/Groups/bebe2740-8490-4da3-814b-\nfc010a92f665\",\"lastModified\":\"2019-05-13T03:42:52.839Z\"},\"members\":\n[{\"display\":\"admin\",\"value\":\"442c1077-75f4-4327-981a-\n4846efff396e\"}],\"id\":\"bebe2740-8490-4da3-814b-fc010a92f665\"},\n{\"displayName\":\"Manager\",\"meta\":{\"created\":\"2019-05-13T03:44:54.\nZ\",\"location\":\"https://localhost:9443/scim2/Groups/12bf8c7a-768e-\n43b2-b256-14c89b086bd3\",\"lastModified\":\"2019-05-13T03:44:54.118Z\"},\"\nmembers\":[{\"display\":\"kim\",\"value\":\"68ef862d-6013-4bb0-87ad-\n9531d7a99765\"}],\"id\":\"12bf8c7a-768e-43b2-b256-14c89b086bd3\"}]}\n</code></pre> <p>Users endpoint request:</p> <pre><code>curl -v -k --user admin:admin 'https://localhost:9443/scim2/Users'\n</code></pre> <p>Users endpoint response:</p> <pre><code>{\"totalResults\":3,\"startIndex\":1,\"itemsPerPage\":3,\"schemas\":[\"urn:\nietf:params:scim:api:messages:2.0:ListResponse\"],\"Resources\":\n[{\"emails\":[\"admin@wso2.com\"],\"meta\":{\"created\":\"2019-05-13T09:12:\n52Z\",\"lastModified\":\"2019-05-13T09:12:52Z\"},\"name\":{\"givenName\":\"\nadmin\",\"familyName\":\"admin\"},\"groups\":[{\"display\":\"admin\",\"value\":\"\nbebe2740-8490-4da3-814b-fc010a92f665\"}],\"id\":\"442c1077-75f4-4327-\n981a-4846efff396e\",\"userName\":\"admin\"},{\"meta\":{\"created\":\"2019-05-\n13T03:44:20.474Z\",\"lastModified\":\"2019-05-13T03:44:20.474Z\",\"\nresourceType\":\"User\"},\"name\":{\"familyName\":\"ann\"},\"groups\":\n[{\"display\":\"Engineering\",\"value\":\"abb1c935-dcd2-4e89-a633-\n72bf22460463\"}],\"id\":\"1ad7272f-82b5-4a44-9a86-fe1f31279b29\",\"\nuserName\":\"ann\"},{\"meta\":{\"created\":\"2019-05-13T03:44:06.517Z\",\"\nlastModified\":\"2019-05-13T03:44:06.517Z\",\"resourceType\":\"User\"},\"\nname\":{\"familyName\":\"kim\"},\"groups\":[{\"display\":\"Manager\",\"value\":\"\n12bf8c7a-768e-43b2-b256-14c89b086bd3\"}],\"id\":\"68ef862d-6013-4bb0-\n87ad-9531d7a99765\",\"userName\":\"kim\"}]}\n</code></pre> </li> </ul> <p>How to revert</p> <p>To revert back to the previous behaviour (in versions prior to 5.8.0), set the following property value to \"true\" in the /repository/conf/identity/identity.xml file. <pre><code>&lt;MandateDomainForGroupNamesInGroupsResponse&gt;true&lt;\n/MandateDomainForGroupNamesInGroupsResponse&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/is-5.8.0/understanding-what-has-changed/#change-5","title":"Change #5","text":"<p>Use case</p> <p>A new configuration property  has been added. For clustered nodes, enabling this property enables local cache invalidations. <p>Change</p> <p>In a clustered nodes setup, cache invalidation requests for any local cache of a particular node will be sent to other nodes in the cluster for each cache related operation such as cache update, delete, or add. In previous versions of WSO2 IS, these invalidation requests were not sent to other nodes in the cluster by default. Therefore, it is recommended to enable this property if the local cache is enabled in a clustered setup.</p> <p>How to revert</p> <p>To revert back to the previous behavior, change the following property value back to \"false\" in the /repository/conf/carbon.xml file. <pre><code>&lt;ForceLocalCache&gt;true&lt;/ForceLocalCache&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/is-5.8.0/understanding-what-has-changed/#configuration-changes","title":"Configuration changes","text":"<p>This section lists out the configuration changes in each configuration file including new properties, modified properties, and deprecated properties.</p> <p>Note </p> <p>The configuration changes listed below will not affect the existing system because these configurations are applied only at first start up and new tenant creation. If you wish to change the configurations for the existing tenants, configure it through the management console user interface.</p>"},{"location":"identity-server/migration-docs/is-5.8.0/understanding-what-has-changed/#carbonxml-file","title":"<code>carbon.xml</code> file","text":"<p>Stored in the /repository/conf directory. <ul> <li> <p>The version property value has been changed to 5.8.0.</p> <pre><code>&lt;Version&gt;5.8.0&lt;/Version&gt;\n</code></pre> <p>Why?</p> <p>This property indicates the version of WSO2 IS.</p> </li> </ul>"},{"location":"identity-server/migration-docs/is-5.8.0/understanding-what-has-changed/#axis2xml-file","title":"<code>axis2.xml</code> file","text":"<p>Stored in the /repository /conf/axis2 dire ctory. <ul> <li> <p>The following property values have been changed to 5.8.0.</p> <pre><code>&lt;parameter name=\"userAgent\" locked=\"true\"&gt;\nWSO2 Identity Server-5.8.\n&lt;/parameter&gt;\n&lt;parameter name=\"server\" locked=\"true\"&gt;\nWSO2 Identity Server-5.8.\n&lt;/parameter&gt;\n</code></pre> </li> <li> <p>The following property has been added.</p> <pre><code>&lt;parameter name=\"forceIncludeNullElements\"&gt;false&lt;/parameter&gt;\n</code></pre> <p>Why?</p> <p>Enabling this property forces elements that have the @IgnoreNullElement annotation to be returned as well even though the value is null. The default value for this property is 'false'.</p> </li> </ul>"},{"location":"identity-server/migration-docs/is-5.8.0/understanding-what-has-changed/#endpointconfigproperties-file","title":"<code>Endpointconfig.properties</code> file","text":"<p>Stored in the /repository /conf/identity directory. <ul> <li> <p>The following property has been added.</p> <pre><code>mutualSSLManagerEnabled=true\n</code></pre> <p>Why</p> <p>Enabling this property allows the MutualSSLManager to initialize the keystores. If it is set to 'false', the MutualSSLManager will not initialize the keystore.</p> </li> </ul>"},{"location":"identity-server/migration-docs/is-5.8.0/understanding-what-has-changed/#application-authenticationxml-file","title":"<code>application-authentication.xml</code> file","text":"<p>Stored in the  /repository /conf/identity directory. <ul> <li> <p>The following property has been added to the following authenticators under the relevant tags.</p> <ul> <li>BasicAuthenticator -  <li>BasicAuthRequestPathAuthenticator -  <pre><code>&lt;Parameter name=\"AuthMechanism\"&gt;basic&lt;/Parameter&gt;\n</code></pre> <p>Why?</p> <p>This property is used to help identify the authentication mechanism used by the authenticator.</p> <li> <p>The following parameters were added under the <code>&lt;AuthenticatorConfig name=\" EmailOTP\" enabled=\"true\"&gt;</code> tag.</p> <pre><code>&lt;Parameter name=\"EMAILOTPAuthenticationEndpointURL\"\n&gt;emailotpauthenticationendpoint/emailotp.jsp&lt;/Parameter&gt;\n&lt;Parameter name=\"EmailOTPAuthenticationEndpointErrorPage\"\n&gt;emailotpauthenticationendpoint/emailotpError.jsp&lt;/Parameter&gt;\n&lt;Parameter name=\"EmailAddressRequestPage\"\n&gt;emailotpauthenticationendpoint/emailAddress.jsp&lt;/Parameter&gt;\n</code></pre> <p>Why?</p> <p>The following parameters make the Email OTP URLs configurable.</p> </li> <li> <p>The totp authenticator configurations were uncommented and the following parameters have been added under the <code>&lt;AuthenticatorConfig name=\"totp\" enabled=\" true\"&gt;</code> tag.</p> <pre><code>&lt;Parameter name=\"Issuer\"&gt;WSO2&lt;/Parameter&gt;\n&lt;Parameter name=\"UseCommonIssuer\"&gt;true&lt;/Parameter&gt;\n</code></pre> <p>Why?</p> <p>The added parameters make the totp issuer configurable instead of showing the domain name.</p> </li> <li> <p>The following parameter has been removed from the totp authenticator as it is redundant.</p> <pre><code>&lt;Parameter name=\"redirectToMultiOptionPageOnFailure\"&gt;false&lt;\n/Parameter&gt;\n</code></pre> </li> <li> <p>The following property has been added under the <code>&lt;ApplicationAuthentication&gt;</code> tag.</p> <pre><code>&lt;!--Similar to the 'AuthenticationEndpointQueryParams' above,\nthe following section defines the parameters that should be\nincluded/excluded in the redirection responses from\nauthentication framework. These parameters may be generated\ninternally from the framework, handlers or authenticators. The\nfiltered parameters will be available via the REST API for\nauthentication framework. \"removeOnConsumeFromAPI\" defines\nwhether to make the filtered parameters unavailable from the API\non the first consumption. --&gt;\n&lt;AuthenticationEndpointRedirectParams action=\"exclude\"\nremoveOnConsumeFromAPI=\"true\"&gt;\n&lt;AuthenticationEndpointRedirectParam name=\"loggedInUser\"/&gt;\n&lt;/AuthenticationEndpointRedirectParams&gt;\n</code></pre> </li>"},{"location":"identity-server/migration-docs/is-5.8.0/understanding-what-has-changed/#captcha-configproperties-file","title":"<code>captcha-config.properties</code> file","text":"<p>Stored in the /repository /conf/identity directory. <ul> <li> <p>The following properties have been added.</p> <pre><code>#reCaptcha failed redirect urls\n#recaptcha.failed.redirect.urls=\n</code></pre> <p>Why?</p> <p>The properties listed above allow configuring the list of URLs that can be used for redirection when reCaptcha fails.</p> </li> </ul>"},{"location":"identity-server/migration-docs/is-5.8.0/understanding-what-has-changed/#scim2-schema-extensionconfig-file","title":"<code>scim2-schema-extension.config</code> file","text":"<p>Stored in the  /repository/conf/ directory. <p>The urn:ietf:params:scim:schemas:extension:enterprise:2.0:User attribute name has been changed from what is reflected in the 5.7.0 code block to the configuration shown in the 5.8.0 code block.</p> <ul> <li> <p>5.7.0</p> <pre><code>\"attributeURI\":\"urn:ietf:params:scim:schemas:extension:\nenterprise:2.0:User\",\n\n\"attributeName\":\"urn:ietf:params:scim:schemas:extension:\nenterprise:2.0:User\",\n</code></pre> </li> <li> <p>5.8.0</p> <pre><code>attributeURI\":\"urn:ietf:params:scim:schemas:extension:enterprise:\n2.0:User\",\n\n\"attributeName\":\"urn:ietf:params:scim:schemas:extension:\nenterprise:2.0:User\"\n</code></pre> </li> </ul> <p>Why?</p> <p>This change is done in order to comply with the SCIM2 specification. For more details, see behavioral change #1 in the behavioral changes section given above.</p>"},{"location":"identity-server/migration-docs/is-5.8.0/understanding-what-has-changed/#identity-eventproperties-file","title":"<code>identity-event.properties</code> file","text":"<p>Stored in the /repository /conf/identity directory. <ul> <li> <p>The password policy error message has been modified as follows.</p> <pre><code>passwordPolicy.errorMsg='Password pattern policy violated.\nPassword should contain a digit[0-9], a lower case letter[a-z],\nan upper case letter[A-Z], and one of !@#$%&amp;* characters'\n</code></pre> </li> <li> <p>The following handlers have been added.</p> <pre><code>module.name.17=SAMLLogoutHandler\nSAMLLogoutHandler.subscription.1=SESSION_TERMINATE\nSAMLLogoutHandler.enable=true\n\n# To delete registration code in database once the user deletion\nmodule.name.18=confirmationCodesInvalidate\nconfirmationCodesInvalidate.subscription.1=POST_DELETE_USER\n</code></pre> <p>Why?</p> <p>These handlers are introduced to support the cross-protocol logout feature and for migration of existing data publishers to event handlers that subscribe to authentication events. For more information about migrating existing data publishers to event handlers, see the Migrating Data Publishers document.</p> </li> <li> <p>The following properties were added.</p> <pre><code>module.name.14=analyticsLoginDataPublisher\nanalyticsLoginDataPublisher.subscription.\n1=AUTHENTICATION_STEP_SUCCESS\nanalyticsLoginDataPublisher.subscription.\n2=AUTHENTICATION_STEP_FAILURE\nanalyticsLoginDataPublisher.subscription.3=AUTHENTICATION_SUCCESS\nanalyticsLoginDataPublisher.subscription.4=AUTHENTICATION_FAILURE\nanalyticsLoginDataPublisher.enable=false\n\nmodule.name.15=analyticsSessionDataPublisher\nanalyticsSessionDataPublisher.subscription.1=SESSION_CREATE\nanalyticsSessionDataPublisher.subscription.2=SESSION_UPDATE\n\nanalyticsSessionDataPublisher.subscription.3=SESSION_TERMINATE\nanalyticsSessionDataPublisher.enable=true\n\nmodule.name.13=authenticationAuditLogger\nauthenticationAuditLogger.subscription.\n1=AUTHENTICATION_STEP_SUCCESS\nauthenticationAuditLogger.subscription.\n2=AUTHENTICATION_STEP_FAILURE\nauthenticationAuditLogger.subscription.3=AUTHENTICATION_SUCCESS\nauthenticationAuditLogger.subscription.4=AUTHENTICATION_FAILURE\nauthenticationAuditLogger.subscription.5=SESSION_TERMINATE\nauthenticationAuditLogger.enable=true\"\n\nmodule.name.16=failLoginAttemptValidator\nfailLoginAttemptValidator.subscription.\n1=AUTHENTICATION_STEP_FAILURE\nfailLoginAttemptValidator.enable=true\n</code></pre> <p>Why?</p> <p>The properties listed above are added to support the event listeners that were added for migrating data publishers to event handlers. For more details, see behavioral change #3 in the behavioral changes section given above.</p> </li> </ul>"},{"location":"identity-server/migration-docs/is-5.8.0/understanding-what-has-changed/#identityxml-file","title":"<code>identity.xml</code> file","text":"<p>Stored in the /repository /conf/identity directory. <ul> <li> <p>The following property has been added to the IntrospectionDataProvider interface.</p> <pre><code>&lt;Introspection&gt;\n&lt;EnableDataProviders&gt;false&lt;/EnableDataProviders&gt;\n&lt;/Introspection&gt;\n</code></pre> <p>Why?</p> <p>This property is used to inject additional data to the introspection response.</p> </li> <li> <p>The default CleanUpPeriod value has been modified to 1440.</p> <pre><code>&lt;CleanUpPeriod&gt;1440&lt;/CleanUpPeriod&gt;\n</code></pre> </li> <li> <p>The default value of the following property has been changed from false to true.</p> <pre><code>&lt;SignJWTWithSPKey&gt;true&lt;/SignJWTWithSPKey&gt;\n</code></pre> <p>Why?</p> <p>For details about this change, see behavioral change #2 in the behavioral changes section given above.</p> </li> <li> <p>The following property has been added under the  tag. <pre><code>&lt;UserSessionMapping&gt;\n&lt;Enable&gt;true&lt;/Enable&gt;\n&lt;/UserSessionMapping&gt;\n</code></pre> <p>Why?</p> <p>This property enables terminating all the active sessions of a user during password reset, user deletion, and username renaming.</p> <li> <p>The following event listeners have been removed.</p> <pre><code>&lt;EventListener type=\"org.wso2.carbon.identity.core.handler.\nAbstractIdentityMessageHandler\" name=\"org.wso2.\ncarbon.identity.data.publisher.application.authentication.impl.\nDASLoginDataPublisherImpl\" orderId=\"10\" enable=\"true\"/&gt;\n\n&lt;EventListener type=\"org.wso2.carbon.identity.core.handler.\nAbstractIdentityMessageHandler\" name=\"org.wso2.carbon.identity.\ndata.publisher.application.authentication.impl.\nDASSessionDataPublisherImpl\" orderId=\"11\" enable=\"true\"/&gt;\n\n&lt;EventListener type=\"org.wso2.carbon.identity.core.handler.\nAbstractIdentityMessageHandler\" name=\"org.wso2.carbon.identity.\ncaptcha.validator.FailLoginAttemptValidator\" orderId=\"10\"\nenable=\"true\"/&gt;\n</code></pre> <p>Why?</p> <p>From WSO2 IS 5.8.0 onwards, data publishers are migrated to act as event handlers that subscribe to authentication events. Hence, the event listeners listed above have been removed by default. For more details, see behavioral change #3 in the behavioral changes section given above.</p> </li> <li> <p>The following property has been added.</p> <pre><code>&lt;FilterUsersAndGroupsOnlyFromPrimaryDomain&gt;false&lt;\n/FilterUsersAndGroupsOnlyFromPrimaryDomain&gt;\n</code></pre> <p>Why?</p> <p>Enabling this property filters users or groups only from the PRIMARY user store, regardless of the Users and Groups endpoints. If it is set to 'false' it filters users or groups across all user stores.</p> </li> <li> <p>The following property has been added.</p> <pre><code>&lt;MandateDomainForUsernamesAndGroupNamesInResponse&gt;false&lt;\n/MandateDomainForUsernamesAndGroupNamesInResponse&gt;\n</code></pre> <p>Why?</p> <p>Enabling this property prepends the \"PRIMARY/\" prefix to the user name and role name (group name) that belongs to the PRIMARY user store, in the SCIM2 response regardless of the Users and Groups endpoint. When it is set to 'false', the \"PRIMARY/\" prefix will not be prepended. For more details, see behavioral change #4 in the behavioral changes section given above.</p> </li> <li> <p>The following property has been added.</p> <pre><code>&lt;MandateDomainForGroupNamesInGroupsResponse&gt;false&lt;\n/MandateDomainForGroupNamesInGroupsResponse&gt;\n</code></pre> <p>Why?</p> <p>Enabling this property in the Groups endpoints prepends the \"PRIMARY/\" prefix to the role name (group name) that belongs to the PRIMARY user store. When it is set to 'false', the \"PRIMARY/\" prefix will not be prepended. For more details, see behavioral change # in the behavioral changes section given above.</p> </li> <li> <p>The following properties have been added under the <code>&lt;Server&gt;</code> tag.</p> <pre><code>&lt;!--This configuration is used to define the Service Provider\nname regex in DCR and IdentityApplicationManagementService--&gt;\n&lt;!--&lt;ServiceProviders&gt;--&gt;\n&lt;!--&lt;SPNameRegex&gt;^[a-zA-Z0-9._-]*$&lt;/SPNameRegex&gt;--&gt;\n&lt;!--&lt;/ServiceProviders&gt;--&gt;\n</code></pre> </li> <li> <p>The following properties have been added under the <code>&lt;OAuth&gt;</code> tag.</p> <pre><code>&lt;!-- If enabled, resident Idp entity id will be honoured as the\nissuer location in OpenId Connect Discovery --&gt;\n&lt;UseEntityIdAsIssuerInOidcDiscovery&gt;true&lt;\n/UseEntityIdAsIssuerInOidcDiscovery&gt;\n</code></pre> </li> <li> <p>The UMA grant type has been added as a supported grant type under the <code>&lt;SupportedGrantTypes&gt;</code> tag.</p> <pre><code>&lt;!-- Supported versions: IS 5.7.0 onwards.--&gt;\n&lt;SupportedGrantType&gt;\n&lt;GrantTypeName&gt;urn:ietf:params:oauth:grant-type:uma-ticket&lt;\n/GrantTypeName&gt;\n&lt;GrantTypeHandlerImplClass&gt;org.wso2.carbon.identity.oauth.\numa.grant.UMA2GrantHandler&lt;/GrantTypeHandlerImplClass&gt;\n&lt;GrantTypeValidatorImplClass&gt;org.wso2.carbon.identity.oauth.\numa.grant.GrantValidator&lt;/GrantTypeValidatorImplClass&gt;\n&lt;/SupportedGrantType&gt;\n</code></pre> </li> <li> <p>The following properties have been added under the <code>&lt;OAuth&gt;</code> tag.</p> <pre><code>&lt;!-- Configurations for JWT bearer grant. Supported versions: IS\n5.8.0 onwards. --&gt;\n&lt;JWTGrant&gt;\n&lt;!-- Validate issued at time (iat) of JWT token. The\nvalidity can be set using 'IATValidity' configuration.\nDefault value is 'true'.\n--&gt;\n&lt;EnableIATValidation&gt;true&lt;/EnableIATValidation&gt;\n&lt;!-- Reject the JWT if the iat of JWT is pass a certain time\nperiod. Time period is in minutes.\n'EnableIATValidation' configuration should be set\nto 'true' in order to make use of the validity\nperiod.\nDefault value is '30' minutes.\n--&gt;\n&lt;IATValidityPeriod&gt;30&lt;/IATValidityPeriod&gt;\n&lt;/JWTGrant&gt;\n</code></pre> </li> <li> <p>The following properties have been added under the <code>&lt;OpenIDConnect&gt;</code> tag.</p> <pre><code>&lt;!-- Add tenant domain to 'realm' claim of ID Token--&gt;\n&lt;AddTenantDomainToIdToken&gt;false&lt;/AddTenantDomainToIdToken&gt;\n&lt;!-- Add userstore domain to 'realm' claim of ID Token--&gt;\n&lt;AddUserstoreDomainToIdToken&gt;false&lt;/AddUserstoreDomainToIdToken&gt;\n</code></pre> </li> <li> <p>The following properties have been added under the <code>&lt;OAuth&gt;</code> tag.</p> <pre><code>&lt;!--Configuration provides the ability to renew the access token\nand the refresh token(where applicable) per each token request\nand revoke previously available active token for a matching\nclientid, user and scopes combination.\nNot applicable for refresh token grant type and when when self-\ncontained access tokens are used.\nDefault value : false\nSupported versions : IS 5.8.0 onwards --&gt;\n&lt;!--&lt;RenewTokenPerRequest&gt;true&lt;/RenewTokenPerRequest&gt;--&gt;\n\n&lt;!--By enabling this property, in a logout request if the opbs\ncookie or a valid session does not exist instead of showing the\ninvalid request error page the user will be redirected to the\nsuccessfully logged out page of the IS or if a valid\nid_token_hint and a valid post_logout_redirect_uri is available\nuser will be redirected to the post_logout_redirect_uri--&gt;\n&lt;HandleAlreadyLoggedOutSessionsGracefully&gt;false&lt;\n/HandleAlreadyLoggedOutSessionsGracefully&gt;\n</code></pre> </li> <li> <p>The following properties have been added under the <code>&lt;SSOService&gt;</code> tag.</p> <pre><code>&lt;ArtifactResolutionEndpoint&gt;${carbon.protocol}://${carbon.\nhost}:${carbon.management.port}/samlartresolve&lt;\n/ArtifactResolutionEndpoint&gt;\n&lt;SAMLECPEndpoint&gt;${carbon.protocol}://${carbon.host}:${carbon.\nmanagement.port}/samlecp&lt;/SAMLECPEndpoint&gt;\n</code></pre> <p>Why?</p> <p>These properties allow adding the Artifact URL as a Resident IDP property in the WSO2 IS management console.</p> </li> <li> <p>The following properties have been added under the <code>&lt;SCIM2&gt;</code> tag.</p> <pre><code>&lt;!--&lt;ComplexMultiValuedAttributeSupportEnabled&gt;true&lt;\n/ComplexMultiValuedAttributeSupportEnabled&gt;--&gt;\n&lt;!--&lt;EnableFilteringEnhancements&gt;true&lt;\n/EnableFilteringEnhancements&gt;--&gt;\n</code></pre> <p>Why?</p> <p>The  property was introduced for the purpose of applying filtering enhancements for SCIM2 filter results. Enabling this ensures that the Eq filter strictly checks for a string match (in this case cross user store search should not be performed). This configuration also enforces consistency on the filtered attribute formats in the response when filtering is done via different endpoints. e.g. Users and Groups endpoints. <li> <p>The following properties have been added under the <code>&lt;Recovery&gt;</code> tag.</p> <pre><code>&lt;ReCaptcha&gt;\n&lt;Password&gt;\n&lt;Enable&gt;false&lt;/Enable&gt;\n&lt;/Password&gt;\n&lt;Username&gt;\n&lt;Enable&gt;false&lt;/Enable&gt;\n&lt;/Username&gt;\n&lt;/ReCaptcha&gt;\n&lt;CallbackRegex&gt;${carbon.protocol}://${carbon.host}:${carbon.\nmanagement.port}/authenticationendpoint/login.do&lt;/CallbackRegex&gt;\n</code></pre> <p>Why?</p> <p>This configuration block is used to enable ReCaptcha verification for password recovery and username recovery.</p> </li> <li> <p>The following property have been added under the <code>&lt;SelfRegistration&gt;</code> tag.</p> <pre><code>&lt;CallbackRegex&gt;${carbon.protocol}://${carbon.host}:${carbon.\nmanagement.port}/authenticationendpoint/login.do&lt;/CallbackRegex&gt;\n</code></pre> <p>Why?</p> <p>This property enables configuring a regex pattern for the callback URLs of the account recovery and self registration APIs. The callbackURL included in the requests is then validated with the configured regex pattern.</p> </li> <li> <p>The following new event listener has been added under the <code>&lt;EventListeners&gt;</code> tag.</p> <pre><code>&lt;EventListener type=\"org.wso2.carbon.identity.core.handler.\nAbstractIdentityHandler\"\nname=\"org.wso2.carbon.identity.data.\npublisher.oauth.listener.OAuthTokenIssuanceLogPublisher\"\norderId=\"12\" enable=\"false\"&gt;\n&lt;Property name=\"Log.Token\"&gt;false&lt;/Property&gt;\n&lt;/EventListener&gt;\n\n&lt;EventListener type=\"org.wso2.carbon.user.core.listener.\nUserOperationEventListener\"\nname=\"org.wso2.carbon.identity.mgt.\nlistener.UserSessionTerminationListener\"\norderId=\"85\" enable=\"true\"/&gt;\n\n&lt;EventListener type=\"org.wso2.carbon.user.core.listener.\nUserOperationEventListener\"\nname=\"org.wso2.carbon.user.mgt.listeners.\nUserClaimsAuditLogger\"\norderId=\"9\" enable=\"false\"/&gt;\n</code></pre> <p>Why?</p> <p>AbstractIdentityHandler - Enabling this listener logs the audit data for OAuth token issuance and token introspection. Adding this property allows you to disable logging, else if this property is not present in the configuration file, logging is enabled by default. For more information about auditing, see OAuth Transaction Logs.</p> <ul> <li> <p>UserOperationEventListener - This event listener is used to support session termination at the point renaming the username.</p> </li> <li> <p>UserOperationEventListener - This event listener allows adding claims to the audit logs.</p> </li> </ul> </li> <li> <p>The following caches have been added under the <code>&lt;CacheManager name=\" IdentityApplicationManagementCacheManager\"&gt;</code> tag.</p> <pre><code>&lt;Cache name=\"JWKSCache\" enable=\"true\" timeout=\"300\" capacity=\"\n5000\" isDistributed=\"false\"/&gt;\n&lt;Cache name=\"ServiceProviderCache.ID\" enable=\"true\" timeout=\"\n900\" capacity=\"5000\" isDistributed=\"false\"/&gt;\n&lt;Cache name=\"ServiceProvideCache.InboundAuth\" enable=\"true\"\ntimeout=\"900\" capacity=\"5000\" isDistributed=\"false\"/&gt;\n</code></pre> <p>Why?</p> <p>JKWSCache - This property has been added to support JWKS Endpoint Cache invalidation.</p> <p>ServiceProviderCache.ID and ServiceProvideCache.InboundAuthKey - These two properties have been added in order to cache the service provider against the ID and inboundAuth. If these new properties is not present in the configuration file, the configuration value of the ServiceProviderCache is applied for these caches.</p> </li> <li> <p>The following resources have been added under the <code>&lt;ResourceAccessControl&gt;</code> tag.</p> <pre><code>&lt;Resource context=\"(.*)/api/identity/config-mgt/v1.0/search(.*)\"\nsecured=\"true\" http-method=\"GET\"&gt;\n&lt;Permissions&gt;/permission/admin/manage/identity/configmgt\n/list&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/config-mgt/v1.0/resource-\ntype\" secured=\"true\" http-method=\"POST\"&gt;\n&lt;Permissions&gt;/permission/admin/manage/identity/configmgt/add&lt;\n/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/config-mgt/v1.0/resource-\ntype\" secured=\"true\" http-method=\"PUT\"&gt;\n&lt;Permissions&gt;/permission/admin/manage/identity/configmgt\n/update&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/config-mgt/v1.0/resource-\ntype/(.*)\" secured=\"true\" http-method=\"GET\"/&gt;\n&lt;Resource context=\"(.*)/api/identity/config-mgt/v1.0/resource-\ntype/(.*)\" secured=\"true\" http-method=\"DELETE\"&gt;\n&lt;Permissions&gt;/permission/admin/manage/identity/configmgt\n/delete&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/config-mgt/v1.0/resource/(.\n*)\" secured=\"true\" http-method=\"POST\"&gt;\n&lt;Permissions&gt;/permission/admin/manage/identity/configmgt/add&lt;\n/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/config-mgt/v1.0/resource/(.\n*)\" secured=\"true\" http-method=\"PUT\"&gt;\n&lt;Permissions&gt;/permission/admin/manage/identity/configmgt\n/update&lt;/Permissions&gt;\n\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/config-mgt/v1.0/resource/(.\n*)/(.*)\" secured=\"true\" http-method=\"GET\"/&gt;\n&lt;Resource context=\"(.*)/api/identity/config-mgt/v1.0/resource/(.\n*)/(.*)\" secured=\"true\" http-method=\"DELETE\"&gt;\n&lt;Permissions&gt;/permission/admin/manage/identity/configmgt\n/delete&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/config-mgt/v1.0/resource/(.\n*)/(.*)\" secured=\"true\" http-method=\"POST\"&gt;\n&lt;Permissions&gt;/permission/admin/manage/identity/configmgt/add&lt;\n/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/config-mgt/v1.0/resource/(.\n*)/(.*)\" secured=\"true\" http-method=\"PUT\"&gt;\n&lt;Permissions&gt;/permission/admin/manage/identity/configmgt\n/update&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/config-mgt/v1.0/resource/(.\n*)/(.*)/(.*)\" secured=\"true\" http-method=\"GET\"/&gt;\n&lt;Resource context=\"(.*)/api/identity/config-mgt/v1.0/resource/(.\n*)/(.*)/(.*)\" secured=\"true\" http-method=\"DELETE\"&gt;\n&lt;Permissions&gt;/permission/admin/manage/identity/configmgt\n/delete&lt;/Permissions&gt;\n&lt;/Resource&gt;\n</code></pre> <p>Why?</p> <p>These resources control access to the configuration management resources in WSO2 IS.</p> </li> <li> <p>The resource context /scim2/ResourceType to /scim2/ResourceTypes found under the <code>&lt;ResourceAccessControl&gt;</code> tag has been modified as shown below.</p> <pre><code>&lt;Resource context=\"/scim2/ResourceTypes\" secured=\"false\" http-\nmethod=\"all\"&gt;\n</code></pre> <p>Why?</p> <p>This change is done in order to comply with the SCIM2 specification.</p> </li> <li> <p>The following resource found under the <code>&lt;ResourceAccessControl&gt;</code> tag has been removed.</p> <pre><code>&lt;Resource context=\"(.*)/api/identity/auth/(.*)\" secured=\"true\"\nhttp-method=\"all\"/&gt;\n</code></pre> <p>Why?</p> <p>This change has been made in order to remove protection for the /api/identity/auth /v1.2/authenticate API. This is because the API itself authenticates the user.</p> </li> <li> <p>The following resources have been added under the <code>&lt;ResourceAccessControl&gt;</code> tag.</p> <pre><code>&lt;Resource context=\"(.*)/api/identity/auth/v1.2/data(.*)\"\nsecured=\"true\" http-method=\"all\"/&gt;\n&lt;Resource context=\"(.*)/api/identity/auth/v1.2/context(.*)\"\nsecured=\"true\" http-method=\"all\"/&gt;\n&lt;Resource context=\"(.*)/api/identity/template/mgt/v1.0.0/(.*)\"\nsecured=\"true\" http-method=\"all\"/&gt;\n&lt;Resource context=\"(.*)/api/identity/user/v1.0/update-username(.\n*)\" secured=\"true\" http-method=\"PUT\"&gt;\n&lt;Permissions&gt;/permission/admin/manage/identity/usermgt\n/update&lt;/Permissions&gt;\n&lt;/Resource&gt;\n</code></pre> <p>Why?</p> <p>These resources have been added to secure the update-username API.</p> </li> <li> <p>The following properties have been added under the <code>&lt;Server&gt;</code> tag.</p> <pre><code>&lt;!--Intermediate certificate validation for certificate based\nrequests--&gt;\n&lt;IntermediateCertValidation enable=\"false\"&gt;\n&lt;IntermediateCerts&gt;\n&lt;!--Add intermediate certificate CN. Multiple &lt;CertCN&gt;\nelements can be used for multiple certificates.--&gt;\n&lt;CertCN&gt;localhost&lt;/CertCN&gt;\n&lt;/IntermediateCerts&gt;\n&lt;ExemptContext&gt;\n&lt;!--Add exemptable context paths. Multiple &lt;Context&gt;\nelements can be used for multiple contexts.--&gt;\n&lt;Context&gt;scim2&lt;/Context&gt;\n&lt;/ExemptContext&gt;\n&lt;/IntermediateCertValidation&gt;\n&lt;!--This is the separator that use to separate multiple roles in\nthe role claim value coming from IDP side--&gt;\n&lt;FederatedIDPRoleClaimValueAttributeSeparator&gt;,&lt;\n/FederatedIDPRoleClaimValueAttributeSeparator&gt;\n&lt;!--This configuration is used for X509 Certificate based\nauthentication. --&gt;\n&lt;!--&lt;X509&gt;--&gt;\n&lt;!--During ssl termination at LB, the X509 certificate is passed\nover the HTTP header. This configuration\nprovides the facility to configure HTTP request header\nname which is configured at LB. --&gt;\n&lt;!--&lt;X509RequestHeaderName&gt;X-SSL-CERT&lt;/X509RequestHeaderName&gt;--&gt;\n&lt;!--&lt;/X509&gt;--&gt;\n&lt;!-- This configuration specifies the claims that should be\nlogged to \"audit.log\" upon changes. --&gt;\n&lt;!--&lt;LoggableUserClaims&gt;--&gt;\n&lt;!--&lt;LoggableUserClaim&gt;http://wso2.org/claims/identity\n/accountLocked&lt;/LoggableUserClaim&gt;--&gt;\n&lt;!--&lt;LoggableUserClaim&gt;http://wso2.org/claims/role&lt;\n/LoggableUserClaim&gt;--&gt;\n&lt;!--&lt;/LoggableUserClaims&gt;--&gt;\n&lt;!--Configuration Store properties--&gt;\n&lt;ConfigurationStore&gt;\n&lt;!--Set an upper limit to the database call queries.\nConfiguration store uses dynamic query generation,\nspecially for searching resources. This property will\nprevent any unwanted errors due to too large queries.\nDefault value is the maximum packet size for MySQL 5.7\nin bytes.--&gt;\n&lt;MaximumQueryLength&gt;4194304&lt;/MaximumQueryLength&gt;\n&lt;/ConfigurationStore&gt;\n</code></pre> </li>"},{"location":"identity-server/migration-docs/is-5.8.0/understanding-what-has-changed/#jaasconf-file","title":"<code>jaas.conf</code> file","text":"<p>Stored in the /repository /conf/identity directory. <p>The value of the following property value has been corrected from 'tfalse' to 'false'.</p> <pre><code>useKeyTab=false\n</code></pre>"},{"location":"identity-server/migration-docs/is-5.8.0/understanding-what-has-changed/#webapp-classloading-environmentsxml-file","title":"<code>Webapp-classloading-environments.xml</code> file","text":"<p>Stored in the  /repository /conf/ directory. <p>The following ExclusiveEnvironment has been added under the <code>&lt;Classloading&gt;</code> tag.</p> <pre><code>&lt;ExclusiveEnvironments&gt;\n&lt;ExclusiveEnvironment&gt;\n&lt;Name&gt;CXF3&lt;/Name&gt;\n&lt;Classpath&gt;${carbon.home}/lib/runtimes/cxf3/*.\njar;${carbon.home}/lib/runtimes/cxf3/&lt;/Classpath&gt;\n&lt;/ExclusiveEnvironment&gt;\n&lt;/ExclusiveEnvironments&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/is-5.8.0/understanding-what-has-changed/#carbonxml-file_1","title":"<code>carbon.xml</code> file","text":"<p>Stored in the /repository /conf directory. <ul> <li> <p>The following properties related to the tenant deletion feature have been added under the <code>&lt;Server&gt; &lt;Tenant&gt;</code> tag.</p> <pre><code>&lt;!-- Flag to enable or disable tenant deletion. By default\ntenant deletion is enabled--&gt;\n&lt;TenantDelete&gt;true&lt;/TenantDelete&gt;\n&lt;!-- Configurations related to listener invocation by tenant\nadmin service--&gt;\n&lt;ListenerInvocationPolicy&gt;\n&lt;!-- Flag to enable or disable listener invocation on tenant\ndelete. This is disabled by default--&gt;\n&lt;InvokeOnDelete&gt;false&lt;/InvokeOnDelete&gt;\n&lt;/ListenerInvocationPolicy&gt;\n</code></pre> </li> <li> <p>The following property has been added under the  tag. <pre><code>&lt;!--EnablePasswordTrim&gt;false&lt;/EnablePasswordTrim--&gt;\n</code></pre> <li> <p>The following property has been added.</p> <pre><code>&lt;ForceLocalCache&gt;true&lt;/ForceLocalCache&gt;\n</code></pre> <p>Why?</p> <p>Enabling this property forces all the caches to behave as local caches. It is required to enable this in order to have cache invalidation in between the IS nodes in a clustered enviornment. For more details, see behavioral change #5 in the behavioral changes section given above.</p> </li>"},{"location":"identity-server/migration-docs/is-5.8.0/understanding-what-has-changed/#claim-configxml-file","title":"<code>claim-config.xml</code> file","text":"<p>Stored in the  /repository /conf directory. <ul> <li> <p>The AttributeID of the http://wso2.org/claims/resourceType claim has been modified to \"resourceType\".</p> <pre><code>&lt;AttributeID&gt;resourceType&lt;/AttributeID&gt;\n</code></pre> </li> <li> <p>The RegEx of the http://wso2.org/claims/phoneNumbers claim has been modified as follows.</p> <pre><code>&lt;RegEx&gt;^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d\n{4})(?: *x(\\d+))?\\s*$&lt;/RegEx&gt;\n</code></pre> </li> <li> <p>The RegEx of the urn:scim:schemas:core:1.0:phoneNumbers claim has been modified as follows.</p> <pre><code>&lt;RegEx&gt;^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d\n{4})(?: *x(\\d+))?\\s*$&lt;/RegEx&gt;\n</code></pre> </li> <li> <p>The AttributeID of the claim urn:ietf:params:scim:schemas:core:2.0:meta. resourceType claim has been modified to \"resourceType\" instead of \"userType\".</p> <pre><code>&lt;AttributeID&gt;resourceType&lt;/AttributeID&gt;\n</code></pre> <p>Why?</p> <p>The value \"Ref\" is reserved in open LDAPs for referrals. Therefore, this attributeID was modified to avoid the errors when using Active Directory open LDAPs.</p> </li> <li> <p>The RegEx of the urn:ietf:params:scim:schemas:core:2.0:User: phoneNumbers claim has been modified as follows.</p> <pre><code>&lt;RegEx&gt;^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d\n{4})(?: *x(\\d+))?\\s*$&lt;/RegEx&gt;\n</code></pre> </li> <li> <p>The Regex of the urn:ietf:params:scim:schemas:core:2.0:User: phoneNumbers.mobile claim has been modified as follows.</p> <pre><code>&lt;RegEx&gt;^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d\n{4})(?: *x(\\d+))?\\s*$&lt;/RegEx&gt;\n</code></pre> </li> <li> <p>The RegEx of the urn:ietf:params:scim:schemas:core:2.0:User: phoneNumbers.home claim has been modified as follows.</p> <pre><code>&lt;RegEx&gt;^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d\n{4})(?: *x(\\d+))?\\s*$&lt;/RegEx&gt;\n</code></pre> </li> <li> <p>The RegEx of the urn:ietf:params:scim:schemas:core:2.0:User: phoneNumbers.work claim has been modified as follows.</p> <pre><code>&lt;RegEx&gt;^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d\n{4})(?: *x(\\d+))?\\s*$&lt;/RegEx&gt;\n</code></pre> </li> <li> <p>The RegEx of the urn:ietf:params:scim:schemas:core:2.0:User: phoneNumbers.other claim has been modified as follows.</p> <pre><code>&lt;RegEx&gt;^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d\n{4})(?: *x(\\d+))?\\s*$&lt;/RegEx&gt;\n</code></pre> <p>Why?</p> <p>The default regular expression values for phone numbers were modified in the claim-config.xml file in order to recognize US and Canadian numbers with the extension code as well.</p> </li> </ul>"},{"location":"identity-server/migration-docs/is-5.8.0/understanding-what-has-changed/#log4jproperties-file","title":"<code>log4j.properties</code> file","text":"<p>Stored in the /repository /conf directory. <p>The following properties have been added.</p> <pre><code>log4j.logger.TRANSACTION_LOGGER=INFO, TRANSACTION_LOGGER\n\nlog4j.appender.TRANSACTION_LOGGER=org.apache.log4j.FileAppender\nlog4j.appender.TRANSACTION_LOGGER.File=${carbon.home}/repository\n/logs/transaction.log\nlog4j.appender.TRANSACTION_LOGGER.Append=true\nlog4j.appender.TRANSACTION_LOGGER.layout=org.apache.log4j.\nPatternLayout\nlog4j.appender.TRANSACTION_LOGGER.layout.ConversionPattern=[%d]\n\n- %m %n\nlog4j.appender.TRANSACTION_LOGGER.threshold=INFO\nlog4j.additivity.TRANSACTION_LOGGER=false\n\n# Appender config to put correlation Log.\nlog4j.logger.correlation=INFO, CORRELATION\nlog4j.additivity.correlation=false\nlog4j.appender.CORRELATION=org.apache.log4j.RollingFileAppender\nlog4j.appender.CORRELATION.File=${carbon.home}/repository/logs\n/${instance.log}/correlation.log\nlog4j.appender.CORRELATION.MaxFileSize=10MB\nlog4j.appender.CORRELATION.layout=org.apache.log4j.PatternLayout\nlog4j.appender.CORRELATION.Threshold=INFO\nlog4j.appender.CORRELATION.layout.ConversionPattern=%d{yyyy-MM-\ndd HH:mm:ss,SSS}|%X{Correlation-ID}|%t|%m%n\n</code></pre>"},{"location":"identity-server/migration-docs/is-5.8.0/understanding-what-has-changed/#user-mgtxml-file","title":"<code>user-mgt.xml</code> file","text":"<p>Stored in the /repository /conf directory. <ul> <li> <p>The following properties have been added under the <code>&lt;UserManager&gt; &lt;Realm&gt; &lt;Configuration&gt;</code> tag.</p> <pre><code>&lt;!-- Enable username claim retrieve from the UM_USER_NAME in\nJDBC datasources --&gt;\n&lt;OverrideUsernameClaimFromInternalUsername&gt;true&lt;\n/OverrideUsernameClaimFromInternalUsername\n</code></pre> </li> <li> <p>The following property has been under under the JDBCUserStoreManager configuration block.</p> <pre><code>&lt;Property name=\"LeadingOrTrailingSpaceAllowedInUserName\"&gt;false&lt;\n/Property&gt;\n</code></pre> <p>The value of the <code>&lt;UserNameListFilter&gt;</code> property under the ReadOnlyLDAPUserStoreManager configuration block has been modified to the value given below.</p> <pre><code>(&amp;amp;(objectClass=person)(!(sn=Service)))\n</code></pre> <p>The value of the <code>&lt;UserNameListFilter&gt;</code> property under the ActiveDirectoryUser StoreManager and ReadWriteLDAPUserStoreManager configuration blocks has been modified as follows.</p> <pre><code>(&amp;amp;(objectClass=user)(!(sn=Service)))\n</code></pre> <p>The following property has been added under the ActiveDirectoryUserStoreManag er and the ReadWriteLDAPUserStoreManager configuration blocks.</p> <pre><code>&lt;Property name=\"StartTLSEnabled\"&gt;false&lt;/Property&gt;\n</code></pre> </li> </ul>"},{"location":"identity-server/migration-docs/is-5.8.0/upgrading-from-5.7.0/","title":"Upgrading from the Previous Release","text":"<p>This section walks you through the steps you need to follow to upgrade from WSO2 Identity Server 5.7.0 to WSO2 Identity Server 5.8.0. In this section,  is the directory that Identity Server 5.7.0 resides in, and  is the directory that Identity Server 5.8.0 resides in."},{"location":"identity-server/migration-docs/is-5.8.0/upgrading-from-5.7.0/#should-i-migrate","title":"Should I migrate?","text":"<p>WSO2 recommends upgrading to the latest version in order to ensure that users receive the latest updates for the product.</p> <ul> <li>For a high level overview of what has been added, changed, or deprecated in this release, see About this release.</li> <li>For a detailed overview of behavioral changes in this release, see the Understanding What Has Changed document.</li> </ul>"},{"location":"identity-server/migration-docs/is-5.8.0/upgrading-from-5.7.0/#preparing-for-migration","title":"Preparing for migration","text":"<p>Follow this guide before you begin migration.</p> <ol> <li> <p>Review what has been changed in this release. For a detailed list of the behavioral and architectural changes from 5.7.0 to 5.8.0, see Behavioral Changes in the Understanding What Has Changed document.</p> </li> <li> <p>This release is a WUM-only release. This means that there are no manual patches. You can use WSO2 Update Manager (WUM) to get any fixes or latest updates for this release.</p> <p>Note</p> <p>If you are upgrading to use this version in your production environment, use WSO2 Update Manager to get the latest updates available for WSO2 IS 5.8.0.For more information on how to use WSO2 Update Manager, see Updating WSO2 Products.</p> </li> <li> <p>Take a backup of the existing database used by Identity Server 5.7.0. This backup is necessary in case the migration causes issues in the existing database.</p> </li> <li> <p>Run the cleanup scripts before migration. This step is required to remove expired, inactive, and revoked tokens/codes, thereby reducing the time taken for migration.</p> </li> <li> <p>The CONN_APP_KEY unique constraint has been modified in the 5.8.0 release for Oracle and PostgreSQL databases. See the note below only for details. This step is only required if you are using an Oracle or PostgreSQL database.</p> <p>Note</p> <p>In the existing IDN_OAUTH2_ACCESS_TOKEN table of your database, there may be access tokens that correspond to the same consumer_id and the same user for the same scope. In this release, the CON_APP_KEY unique constraint for Oracle and PostgreSQL databases has been modified to prevent this. Therefore, it is recommended to remove or modify such entries in the database table before migration. You can run the following query against your database to examine how many active access token entries violating the modified CON_APP_KEY unique constraint, are present in the IDN_OA UTH2_ACCESS_TOKEN table.</p> <pre><code>SELECT CONSUMER_KEY_ID, AUTHZ_USER, USER_DOMAIN, TENANT_ID, TOKEN_SCOPE_HASH, USER_TYPE, TOKEN_STATE, COUNT(*)\n\nFROM IDN_OAUTH2_ACCESS_TOKEN\n\nGROUP BY CONSUMER_KEY_ID, AUTHZ_USER, USER_DOMAIN,\nTENANT_ID, TOKEN_SCOPE_HASH, USER_TYPE, TOKEN_STATE\nHAVING COUNT(*)&gt;1 AND TOKEN_STATE='ACTIVE'\n</code></pre> <p>Disabling the migrator</p> <p>By default, the WSO2 IS data migration client handles this by modifying any active access tokens that are violating the constraint. However, if you wish to disable the migrator, remove or comment out the following configuration from the migration yaml file.</p> <p>Note WSO2 recommends this constraint change and therefore does not recommend disabling it during migration. The constraint change also provides an additional performance boost.</p> <pre><code>name: \"SchemaMigrator\"\norder: 3\nparameters:\nlocation: \"step3\"\nschema: \"identity\"\n</code></pre> </li> </ol>"},{"location":"identity-server/migration-docs/is-5.8.0/upgrading-from-5.7.0/#migrating-the-configurations","title":"Migrating the configurations","text":"<p>You can use one of the following approaches to migrate depending on your production environment.</p>"},{"location":"identity-server/migration-docs/is-5.8.0/upgrading-from-5.7.0/#migrate-by-applying-custom-configurations-to-580","title":"Migrate by applying custom configurations to 5.8.0","text":"<p>This approach is recommended if:</p> <ul> <li>You have done very few configuration changes in your previous version of WSO2 IS. These configuration changes have been tracked and are easy to redo.</li> </ul> <p>Steps:</p> <ol> <li>If you have made configuration changes to the config files in your previous version of WSO2 IS, update the files in the /repository/conf directory with your own configurations. <li>For a detailed list of the behavioral changes and configuration changes from 5.7.0 to 5.8.0, see the Understanding What Has Changed document. You can scroll through each table for details about what has changed in this release.</li> <li>Proceed to the Migrating the embedded LDAP user store section to proceed with the rest of the migration.</li>"},{"location":"identity-server/migration-docs/is-5.8.0/upgrading-from-5.7.0/#migrate-by-updating-existing-configurations-with-whats-new-in-570","title":"Migrate by updating existing configurations with what's new in 5.7.0","text":"<p>This approach is recommended if:</p> <ul> <li>You have done many configuration changes in your previous version of WSO2 IS.</li> <li>These configurations have not been tracked completely and/or are difficult to redo.</li> </ul> <p>Steps:</p> <ol> <li>Make a copy of the /repository/conf directory. (Do not change the original configs. You may use it as a backup in case there are any issues) <li>Apply the configuration changes made in this release to your copy of the conf directory according to the features that you require. For a detailed list of configuration changes, see Configuration changes.</li> <li>Replace the /repository/conf directory with the modified copy of the /repository/conf directory. <li>Proceed to the Migrating the embedded LDAP user store section to proceed with the rest of the migration.</li>"},{"location":"identity-server/migration-docs/is-5.8.0/upgrading-from-5.7.0/#migrating-the-embedded-ldap-user-store","title":"Migrating the embedded LDAP user store","text":"<p>WSO2 does not recommend using the embedded LDAP userstore that is shipped with WSO2 Identity Server in a production environment. However, if migration of the embedded LDAP is required, follow the instructions below to migrate the existing WSO2 IS LDAP user store to the new version of WSO2 IS.</p> <ol> <li>Copy the /repository/data folder to /repository/data folder. <li>Restart the server to save the changes.</li>"},{"location":"identity-server/migration-docs/is-5.8.0/upgrading-from-5.7.0/#migrating-the-data","title":"Migrating the data","text":"<p>To upgrade to the latest version of WSO2 Identity Server, you need to upgrade the userstore database. Note that there are no registry schema changes between versions.</p> <p>Follow the steps below to perform the upgrade.</p> <ol> <li>Download Identity Server 5.8.0 and unzip it in the  directory. <li> <p>If you are using a DB2 environment, move indexes to the the TS32K Tablespace. The index tablespace in the 'IDN_OAUTH2_ACCESS_TOKEN' and 'IDN_OAUTH2_AUTHORIZATION_CODE' tables need to be moved to the existing TS32K tablespace in order to support newly added table indexes. To do this, execute the following stored procedure call.</p> <p>Note</p> <p>SQLADM or DBADM authority is required in order to invoke the ADMIN_MOVE_TABLE stored procedure. You must also have the appropriate object creation authorities, including authorities to issue the SELECT statement on the source table and to issue the INSERT statement on the target table.</p> <pre><code>CALL SYSPROC.ADMIN_MOVE_TABLE(\n\n&lt;TABLE_SCHEMA_OF_IDN_OAUTH2_ACCESS_TOKEN_TABLE&gt;,\n\n'IDN_OAUTH2_ACCESS_TOKEN',\n\n(SELECT TBSPACE FROM SYSCAT.TABLES where TABNAME =\n'IDN_OAUTH2_ACCESS_TOKEN' AND TABSCHEMA =\n&lt;TABLE_SCHEMA_OF_IDN_OAUTH2_ACCESS_TOKEN_TABLE&gt;),\n'TS32K',\n(SELECT TBSPACE FROM SYSCAT.TABLES where TABNAME =\n'IDN_OAUTH2_ACCESS_TOKEN' AND TABSCHEMA =\n&lt;TABLE_SCHEMA_OF_IDN_OAUTH2_ACCESS_TOKEN_TABLE&gt;),\n'',\n'',\n'',\n'',\n'',\n'MOVE');\n\nCALL SYSPROC.ADMIN_MOVE_TABLE(\n\n&lt;TABLE_SCHEMA_OF_IDN_OAUTH2_AUTHORIZATION_CODE_TABLE&gt;,\n\n'IDN_OAUTH2_AUTHORIZATION_CODE',\n\n(SELECT TBSPACE FROM SYSCAT.TABLES where TABNAME =\n'IDN_OAUTH2_AUTHORIZATION_CODE' AND TABSCHEMA =\n&lt;TABLE_SCHEMA_OF_IDN_OAUTH2_AUTHORIZATION_CODE_TABLE&gt;),\n'TS32K',\n(SELECT TBSPACE FROM SYSCAT.TABLES where TABNAME =\n'IDN_OAUTH2_AUTHORIZATION_CODE' AND TABSCHEMA =\n&lt;TABLE_SCHEMA_OF_IDN_OAUTH2_AUTHORIZATION_CODE_TABLE&gt;),\n'',\n'',\n'',\n'',\n'',\n'MOVE');\n</code></pre> <p>In the above store procedure call,</p> <p> and  : Replace these schema\u2019s with each respective schema for the table. <p>Troubleshooting Tip</p> <p>If you recieve an error due to missing SYSTOOLSPACE or SYSTOOLSTMPSPACE tablespaces, create these tablespaces manually using the following script prior to executing the stored procedure given above. For more information, see SYSTOOLSPACE and SYSTOOLSTMPSPACE table spaces in the IBM documentation.</p> <pre><code>CREATE TABLESPACE SYSTOOLSPACE IN IBMCATGROUP\n\nMANAGED BY AUTOMATIC STORAGE USING STOGROUP IBMSTOGROUP\nEXTENTSIZE 4;\n\nCREATE USER TEMPORARY TABLESPACE SYSTOOLSTMPSPACE IN IBMCATGROUP\n\nMANAGED BY AUTOMATIC STORAGE USING STOGROUP IBMSTOGROUP\n\nEXTENTSIZE 4;\n</code></pre> <li> <p>Do the following database updates:</p> <ol> <li>Get the <code>wso2is-migration-x.x.x.zip</code> file provided by the WSO2 team. Unzip it to a local directory. This folder is referred to as . <li>Copy the org.wso2.carbon.is.migration-x.x.x.jar file in the /dropins folder into the /repository/components/dropins directory. <li>Copy migration-resources directory to the  root directory. <li> <p>Ensure that the following property values are as follows in the migration-config.yaml file found in the /migration-resources directory. <pre><code>migrationEnable: \"true\"\n\ncurrentVersion: \"5.7.0\"\n\nmigrateVersion: \"5.8.0\"\n</code></pre> <li> <p>If you manually added any custom OSGI bundles to the /repository/components/dropins directory, copy those to the /repository/components/dropins directory. <li> <p>If you manually added any JAR files to the /repository/components/lib directory, copy those and paste in the /repository/components/lib directory. <li>Copy the .jks files from the /repository/resources/security directory and paste in the /repository/resources/security directory. <li>If you have created tenants in the previous WSO2 Identity Server version and if there are any resources in the /repository/tenants directory, copy the content to the /repository/tenants directory. <li> <p>If you have created secondary user stores in the previous WSO2 IS version, copy the content in the /repository/deployment/server/userstores directory to the  /repository/deployment/server/userstores directory. <li> <p>Start the Identity Server 5.8.0 with the following command to perform the data migration for all components.</p> <ul> <li> <p>Linux/Unix:</p> <pre><code>sh wso2server.sh -Dmigrate -Dcomponent=identity\n</code></pre> </li> <li> <p>Windows:</p> <pre><code>wso2server.bat -Dmigrate -Dcomponent=identity\n</code></pre> </li> </ul> </li> <li> <p>Once the migration is successful, stop the server and start using the appropriate command.</p> <ul> <li> <p>Linux/Unix:</p> <pre><code>sh wso2server.sh\n</code></pre> </li> <li> <p>Windows:</p> <pre><code>wso2server.bat\n</code></pre> </li> </ul> </li>"},{"location":"identity-server/migration-docs/is-5.8.0/upgrading-from-5.7.0/#verifying-the-migration","title":"Verifying the migration","text":"<p>Follow the steps below to verify if the migration has been completed successfully.</p> <ol> <li>Go through the logs and check if each migration step has completed successfully without any error logs.</li> <li>Run functional tests against the migrated deployment to verify that all functionality is working as expected.</li> </ol>"},{"location":"identity-server/migration-docs/is-5.8.0/upgrading-from-older-version/","title":"Upgrading from an Older Version of WSO2 IS","text":"<p>The following sections provide instructions that enable you to upgrade from older versions of WSO2 Identity Server (from version 5.0.0 onwards) to the latest version of WSO2 Identity Server. In this topic,  is the directory that the older version of WSO2 Identity Server resides in, and  is the directory that the latest version of WSO2 Identity Server resides in."},{"location":"identity-server/migration-docs/is-5.8.0/upgrading-from-older-version/#before-you-begin","title":"Before you begin","text":"<p>This release is a WUM-only release. This means that there are no manual patches. Any further fixes or latest updates for this release can be updated through WSO2 Update Manager (WUM).</p> <ul> <li>If you are upgrading to use this version in your production environment, use the WSO2 Update Manager to get the latest updates available for WSO2 IS. For more information on how to do this, see Updating WSO2 Products.</li> </ul>"},{"location":"identity-server/migration-docs/is-5.8.0/upgrading-from-older-version/#migrating-the-embedded-ldap-user-store","title":"Migrating the embedded LDAP user store","text":"<p>It is not generally recommended to use the embedded LDAP user store that is shipped with WSO2 Identity Server in production setups. However, if migration of the embedded LDAP is required, follow the instructions below to migrate the existing WSO2 IS LDAP user store to the new version of WSO2 IS.</p> <ol> <li>Copy the /repository/data folder to /repository/data folder. <li>Restart the server to save the changes.</li>"},{"location":"identity-server/migration-docs/is-5.8.0/upgrading-from-older-version/#migrating-the-configurations","title":"Migrating the configurations","text":"<p>You can use one of the following approaches to migrate depending on your production environment.</p>"},{"location":"identity-server/migration-docs/is-5.8.0/upgrading-from-older-version/#migrating-by-updating-the-custom-configurations","title":"Migrating by updating the custom configurations","text":"<p>This approach is recommended if: -   You have done very few configuration changes in your previous version of WSO2 IS. These configuration changes have been tracked and are easy to redo.</p> <p>Steps: 1.  If you have made configuration changes to the config files in your previous version of WSO2 IS, update the files in the /repository/conf folder with your own configurations. 2.  Proceed to the Migrating the data section to run the migration client."},{"location":"identity-server/migration-docs/is-5.8.0/upgrading-from-older-version/#migrating-by-updating-the-new-configurations-in-58","title":"Migrating by updating the new configurations in 5.8.","text":"<p>This approach is recommended if:</p> <ul> <li>You have done many configuration changes in your previous version of WSO2 IS. These configurations have not been tracked completely and/or are difficult to redo.</li> </ul> <p>Steps:</p> <ol> <li>Make a copy of the /repository/conf folder. (Do not change the original configurations. You may use it as a backup in case there are any issues) <li>Copy the health-check-config.xml file from the /repository/conf directory and paste it in the copy of the /repository/conf directory. <li>Copy the wso2-log-masking.properties file from the /repository/conf directory and paste it in the copy of the /repository/conf directory. <li> <p>The documents listed below provides all the configuration changes from IS 5.0.0 to IS 5.8.0. You can take a look at the relevant version and change the relevant configurations according to the features you are using.</p> <ul> <li>Configuration Changes - WSO2 IS 5.0.0 to 5.1.0</li> <li>Configuration Changes - WSO2 IS 5.1.0 to 5.2.0</li> <li>Configuration Changes - WSO2 IS 5.2.0 to 5.3.0</li> <li>Configuration Changes - WSO2 IS 5.3.0 to 5.4.0</li> <li>Configuration Changes - WSO2 IS 5.4.0 to 5.5.0</li> <li>Configuration Changes - WSO2 IS 5.5.0 to 5.6.0</li> <li>Configuration Changes - WSO2 IS 5.6.0 to 5.7.0</li> </ul> <p>Note:</p> <p>The configuration changes listed above will not affect the existing system because these configurations are applied only at first start up and new tenant creation. If you want to change the configurations for the existing tenants, configure it through the management console user interface.</p> </li> <li> <p>Replace the /repository/conf folder with the modified copy of the  /repository/conf folder. <li>Proceed to the Migrating the data section to run the migration client.</li>"},{"location":"identity-server/migration-docs/is-5.8.0/upgrading-from-older-version/#migrating-the-custom-components","title":"Migrating the custom components","text":"<p>Any custom OSGI bundles which were added manually should be recompiled with new dependency versions that are relevant to the new WSO2 IS version. All custom OSGI components reside in the  /repository/components/dropins directory. <ol> <li>Get the source codes of the custom OSGI components located in the dropins directory.</li> <li>Change the dependency versions in the relevant POM files according to the WSO2 IS version that you are upgrading to, and compile them. The compatible dependency versions for each release of WSO2 IS is given below.<ul> <li>WSO2 Identity Server 5.1.0</li> <li>WSO2 Identity Server 5.2.0</li> <li>WSO2 Identity Server 5.3.0</li> <li>WSO2 Identity Server 5.4.0</li> <li>WSO2 Identity Server 5.5.0</li> <li>WSO2 Identity Server 5.6.0</li> <li>WSO2 Identity Server 5.7.0</li> </ul> </li> <li>If you come across any compile time errors, refer to the WSO2 IS code base and make the necessary changes related to that particular component version.</li> <li>Add the compiled JAR files to the /repository/components/dropins directory. <li>If there were any custom OSGI components in /repository/components/lib directory, add newly compiled versions of those components to the /repository/components/lib directory."},{"location":"identity-server/migration-docs/is-5.8.0/upgrading-from-older-version/#migrating-the-data","title":"Migrating the data","text":"<p>To upgrade the version of WSO2 Identity Server, the user store database should be upgraded. Note that there are no registry schema changes between versions.</p> <p>Follow the steps below as needed to complete the migration process.</p> <p>Download the latest version of WSO2 Identity Server and unzip it in the  directory. <ol> <li> <p>Take a backup of the existing database used by the . This backup is necessary in case the migration causes issues in the existing database.Make the following database updates as indicated below. <ol> <li> <p>Get the <code>wso2is-migration-x.x.x.zip</code> file provided by the WSO2 team. Unzip it to a local directory. This folder is referred to as . <li> <p>Copy the org.wso2.carbon.is.migration-x.x.x.jar file in the /dropins folder into the /repository/components/dropins directory. <li>Copy the migration-resources folder to the  root folder. <li>Set the following property values accordingly in the migration-config.yaml file found in the /migration-resources folder. Specify the current WSO2 Identity Server version as the currentVersion value and specify the new version of WSO2 Identity Server that you want to migrate to, as the migrateVersion. <p>Note</p> <p>If your current version of WSO2 Identity Server is 5.4.1, set the value of the currentVersion parameter to 5.4.0 in the migration-config.yaml instead. This is because data migration is not required when migrating from 5.4.0 to 5.4.1.</p> <pre><code>migrationEnable: \"true\"\n\ncurrentVersion: \"5.x.x\"\n\nmigrateVersion: \"5.x.x\"\n</code></pre> <li> <p>Copy any custom OSGI bundles that were added manually from the /repository/components/dropins folder and paste it in the /repository/components/dropinsfolder. <li>Copy any added JAR files from the /repository/components/lib folder and paste it in the /repository/components/lib folder. <li>Copy the .jks files from the /repository/resources/security folder and paste them in /repository/resources/security folder. <li>If you have created tenants in the previous WSO2 Identity Server version and if there are any resources in the /repository/tenants directory, copy the content to the  /repository/tenants directory. <li> <p>If you have created secondary user stores in the previous WSO2 IS version, copy the content in the /repository/deployment/server/userstores directory to the /repository/deployment/server/userstores directory. <p>Note </p> <p>If your current version is 5.0.0, run the following queries on the database that is &gt;referenced in the identity.xml file in order to identify if there is any corrupted data.</p> <pre><code>SELECT * FROM IDN_OAUTH2_ACCESS_TOKEN WHERE AUTHZ_USER LIKE '% @%' AND\n\nTOKEN_STATE='ACTIVE';\nSELECT * FROM IDN_OAUTH2_ACCESS_TOKEN WHERE AUTHZ_USER NOT LIKE '%@%'\nAND TOKEN_STATE='ACTIVE';\n</code></pre> <li> <p>Start WSO2 Identity Server with the following command to perform the data migration for all components.</p> <ul> <li> <p>Linux/Unix:</p> <pre><code>sh wso2server.sh -Dmigrate -Dcomponent=identity\n</code></pre> </li> <li> <p>Windows:</p> <pre><code>wso2server.bat -Dmigrate -Dcomponent=identity\n</code></pre> </li> </ul> </li> <li> <p>Once the migration is successful, stop the server and remove the following files and folders from the /repository/components/dropins directory. <ul> <li>org.wso2.carbon.is.migration-5.x.x.jar</li> <li>snakeyaml-1.16.0.wso2v1.jar</li> <li>migration-resources directory</li> </ul>"},{"location":"identity-server/migration-docs/is-5.9.0/migrating-custom-scope-validators/","title":"Migrating Custom Scope Validators","text":"<p>Warning</p> <p>This section is only applicable if you are migrating from WSO2 Identity server 5.4.1 or older, and only if you have added a custom scope validator in that version.</p> <p>WSO2 Identity Server 5.5.0 and later versions support configuring scope validators for a service provider. If you take a look at support for configuring scope validators in previous versions of WSO2 Identity Server (WSO2 IS), you will understand that,</p> <ul> <li>WSO2 Identity Server 5.4.0 and 5.4.1 supported setting JDBC Scope     validators as a global configuration, but did not\u00a0support     configuring scope validators for a service provider. WSO2 Identity     Server 5.4.0 and 5.4.1 also\u00a0allowed you to create custom scope     validators\u00a0depending on your requirement.</li> <li>Versions older that\u00a0WSO2 Identity Server 5.4.0 did not\u00a0support     configuring scope validators, but allowed you to create custom scope     validators depending on your requirement.</li> </ul> <p>Therefore, if you have added any custom scope validators to your existing version of WSO2 IS, and you want to migrate those custom scope validators to IS 5.9.0, follow the instructions below:</p> <p>Tip</p> <p>The instructions you need to follow to migrate your custom scope     validators can vary depending on your implementation. You may not need to follow all the steps below in the same order. Be sure to follow the appropriate steps depending on your implementation.</p> <ol> <li> <p>If you have extended the <code>OAuth2ScopeValidator</code>     and implemented your own scope validator, implement a new method     called <code>getValidatorName()</code> . The name that you     specify as\u00a0the new method will be used in the database and the     Management Console user interface.</p> <p>Note</p> <p>If you do not implement a new method, the canonical name of the     class will be used in the database and the Management Console user interface.</p> </li> <li> <p>If you have custom scope validators that you have configured     globally, and you want to configure those scope validators in all     service providers in WSO2 IS 5.5.0, add the following snippet to the     appropriate migration script in the     <code>&lt;IS5.9.0_MIGRATION_TOOL_HOME&gt;/migration-resources/migration-resources/5.5.0/dbscripts/step2/identity</code>     directory.</p> <pre><code>INSERT INTO IDN_OAUTH2_SCOPE_VALIDATORS (APP_ID, SCOPE_VALIDATOR)\nSELECT IDN_OAUTH_CONSUMER_APPS.ID, '&lt;scopeValidatorName&gt;'\nFROM IDN_OAUTH_CONSUMER_APPS;\n</code></pre> <p>Note</p> <ul> <li>If you have configured JDBC scope validators in IS 5.4.x, and you want to configure those JDBC scope validators in all service providers in latest version, replace the         <code>&lt;scopeValidatorName&gt;</code> place holder in         the above snippet with         <code>Role based scope validator</code> .</li> <li>If you have specified a name for the scope validator in step 1,         then replace the <code>&lt;scopeValidatorName&gt;</code>         place holder in the above snippet with that name. If you have         not specified a name for the scope validator, you can use the         canonical name of your custom scope validator class to replace         the <code>&lt;scopeValidatorName&gt;</code> place holder         in the above snippet.</li> </ul> </li> <li> <p>If you want to use the XACML based scope validator introduced in     WSO2 IS 5.5.0 together with your custom scope validators, add the     following configuration to the <code>deployment.toml</code> file in the <code>&lt;IS_HOME&gt;/repository/conf/</code> folder:</p> <pre><code>[oauth.scope_validator.xacml]\nenable = true\n</code></pre> </li> </ol>"},{"location":"identity-server/migration-docs/is-5.9.0/migrating-data-publishers/","title":"Migrating Data Publishers","text":"<p>In prior versions of WSO2 Identity Server, data publishers were implementations of the AbstractAuthenticationDataPublisher which were invoked iteratively by the AuthnDataPublisherProxy when a session changes, such that the data publishers send events to their corresponding destinations. From WSO2 Identity Server 5.8.0 onwards, all data publishers have been migrated to act as event handlers that subscribe to authentication events.</p> <p>One of the main reasons for this is because the current implementation causes the DASSessionDataPublisherImpl, AuthenticationAuditLogger and DASLoginDataPublisherImpl classes to unnecessarily implement all the methods of the AbstractAuthenticationDataPublisher.  This change provides the capability for the data publishers to subscribe only to the relevant events of interest and act upon them.</p> <p>The new design approach is as follows:</p> <ul> <li> <p>When a session changes, the identity-framework publishes an event to     the <code>AuthnDataPublisherProxy</code>.</p> </li> <li> <p><code>AuthnDataPublisherProxy</code> uses the <code>IdentityEventService</code> in     the\u00a0identity framework to invoke corresponding handlers to handle     the event.</p> </li> <li> <p>These event handlers extend the     AbstractEventHandler     and override its <code>handleEvent</code> method.</p> </li> </ul> <p>The following diagrams illustrate the difference between the design approach in the versions prior to WSO2 IS 5.9.0 and the new design approach.</p> <ul> <li>Old design approach </li> <li>New design approach </li> </ul> <p>The following section will guide you through migrating an existing data publisher to an event handler.</p>"},{"location":"identity-server/migration-docs/is-5.9.0/migrating-data-publishers/#migrating-data-publisher-to-event-handler","title":"Migrating data publisher to event handler","text":"<p>For the purposes of demonstrating this using an example, the steps given in this tutorial demonstrate deprecating the DASSessionDataPublisherImpl and migrating it to use the AnalyticsSessionDataPublishHandler instead.</p> <ol> <li> <p>If you have enabled <code>org.wso2.carbon.identity.data.publisher.application.authentication.impl.DASSessionDataPublisherImpl</code>     in <code>&lt;OLD_IS_HOME&gt;/repository/conf/identity.xml</code> do not enable it in     the WSO2 Identity Server 5.9.0 configurations. Simply, skip     migrating this particular configuration and it will disable the old     event listener.</p> <p>Note</p> <p>For the new configuration model in WSO2 Identity Server 5.9.0, see New Configuration Model for more information.</p> <p>If you already have a WSO2 subscription, reach out to our support team through your support account for assiatance.</p> </li> <li> <p>In order to support backward compatibility, override the <code>isEnabled</code>     method in the event handler class that extends the     <code>AbstractEventHandler</code>, such that if the listener property is not     defined in the <code>deployment.toml</code> (previously in <code>identity.xml</code>) it     will return false.</p> <pre><code>    @Override\npublic boolean isEnabled(MessageContext messageContext) {\nIdentityEventListenerConfig identityEventListenerConfig = IdentityUtil.readEventListenerProperty\n(AbstractIdentityMessageHandler.class.getName(), this.getClass().getName());\n\nif (identityEventListenerConfig == null) {\nreturn false;\n}\n\nreturn Boolean.parseBoolean(identityEventListenerConfig.getEnable());\n}\n</code></pre> </li> <li> <p>To enable the new event handler, add handler and relevant property     to the <code>deployment.toml</code> file found in the      <code>&lt;NEW_IS_HOME&gt;/repository/conf</code> folder. For example, following     property is added to enable the     AnalyticsSessionDataPublishHandler     .</p> <pre><code>[identity_mgt.events.schemes.analyticsSessionDataPublisher.properties]\nenable = true\n</code></pre> <p>Note</p> <p>For more information on new configurations, see      New Configuration Model.</p> </li> <li> <p>Add the following method to the event handler in order to verify     that the handler is enabled properly. Adjust the code according to     the relevant handler.</p> <pre><code>    private boolean isAnalyticsSessionDataPublishingEnabled(Event event) throws IdentityEventException {\n\nboolean isEnabled = false;\n\nString handlerEnabled = this.configs.getModuleProperties().getProperty(SessionDataPublisherConstants.\nANALYTICS_SESSION_DATA_PUBLISHER_ENABLED);\nisEnabled = Boolean.parseBoolean(handlerEnabled);\n\nreturn isEnabled;\n}\n</code></pre> </li> <li> <p>One of the main reasons to deprecate the implementation of data     publishers is that these data publishers override all the methods of     <code>AbstractAuthenticationDataPublisher</code> . Due to     this redundancy, this implementation has been changed such that     these publishers get subscribed only to their relevant event. Adjust     the implementation accordingly as shown in the example below.</p> <pre><code>    @Override\npublic void publishAuthenticationStepSuccess(HttpServletRequest request, AuthenticationContext context,\nMap&lt;String, Object&gt; params) {\n// This method is overridden to do nothing since this is a session data publisher.\n}\n\n@Override\npublic void publishAuthenticationStepFailure(HttpServletRequest request, AuthenticationContext context,\nMap&lt;String, Object&gt; params) {\n// This method is overridden to do nothing since this is a session data publisher.\n}\n\n@Override\npublic void publishAuthenticationSuccess(HttpServletRequest request, AuthenticationContext context, Map&lt;String,\nObject&gt; params) {\n// This method is overridden to do nothing since this is a session data publisher.\n}\n\n@Override\npublic void publishAuthenticationFailure(HttpServletRequest request, AuthenticationContext context, Map&lt;String,\nObject&gt; params) {\n// This method is overridden to do nothing since this is a session data publisher.\n}\n\n@Override\npublic void doPublishAuthenticationStepSuccess(AuthenticationData authenticationData) {\n// This method is not implemented since there is no usage of it in session publishing\n}\n\n@Override\npublic void doPublishAuthenticationStepFailure(AuthenticationData authenticationData) {\n// This method is not implemented since there is no usage of it in session publishing\n}\n\n@Override\npublic void doPublishAuthenticationSuccess(AuthenticationData authenticationData) {\n// This method is not implemented since there is no usage of it in session publishing\n}\n\n@Override\npublic void doPublishAuthenticationFailure(AuthenticationData authenticationData) {\n// This method is not implemented since there is no usage of it in session publishing\n}\n\n@Override\npublic void doPublishSessionCreation(SessionData sessionData) {\nif (LOG.isDebugEnabled()) {\nLOG.debug(\"Publishing session creation to DAS\");\n}\npublishSessionData(sessionData, AuthPublisherConstants.SESSION_CREATION_STATUS);\n}\n\n@Override\npublic void doPublishSessionTermination(SessionData sessionData) {\nif (LOG.isDebugEnabled()) {\nLOG.debug(\"Publishing session termination to DAS\");\n}\npublishSessionData(sessionData, AuthPublisherConstants.SESSION_TERMINATION_STATUS);\n\n}\n\n@Override\npublic void doPublishSessionUpdate(SessionData sessionData) {\nif (LOG.isDebugEnabled()) {\nLOG.debug(\"Publishing session update to DAS\");\n}\npublishSessionData(sessionData, AuthPublisherConstants.SESSION_UPDATE_STATUS);\n}\n</code></pre> </li> <li> <p>Override the <code>handleEvent</code> method as seen in     the example below.     For example, as seen in the implementation of the     DASSessionDataPublisherImpl     shown above, it publishes data only for the following three events.</p> <ul> <li> <p>Session Create</p> </li> <li> <p>Session Terminate</p> </li> <li> <p>Session Update</p> </li> </ul> <p>This means that the the event handler written for this data publisher should only handle the events mentioned above. Therefore, the AnalyticsSessionDataPublishHandler is implemented to override the <code>handleEvent</code> method as follows.</p> <pre><code>    @Override\npublic void handleEvent(Event event) throws IdentityEventException {\n\nboolean isEnabled = isAnalyticsSessionDataPublishingEnabled(event);\n\nif (!isEnabled) {\nreturn;\n}\n\nSessionData sessionData = SessionDataPublisherUtil.buildSessionData(event);\nif (IdentityEventConstants.EventName.SESSION_CREATE.name().equals(event.getEventName())) {\ndoPublishSessionCreation(sessionData);\n} else if (IdentityEventConstants.EventName.SESSION_TERMINATE.name().equals(event.getEventName())) {\ndoPublishSessionTermination(sessionData);\n} else if (IdentityEventConstants.EventName.SESSION_UPDATE.name().equals(event.getEventName())) {\ndoPublishSessionUpdate(sessionData);\n} else {\nLOG.error(\"Event \" + event.getEventName() + \" cannot be handled\");\n}\n}\n</code></pre> <p>Note</p> <p>As shown above, in order to invoke the corresponding publishing     method, you must first verify whether the handler is enabled or not.     The <code>buildSessionData</code> method of the     SessionDataPublisherUtil     is introduced to create a session data object to populate the     payload of the relevant event.</p> </li> <li> <p>Next, populate the event payload of the event handler\u00a0and publish it     to the Analytics Engine. In this example, similar to the     implementation of the     DASSessionDataPublisherImpl     , the event payload of the     AnalyticsSessionDataPublishHandler     is populated and published. The final implementation of the     AnalyticsSessionDataPublishHandler     class is as follows.</p> <pre><code>    public class AnalyticsSessionDataPublishHandler extends AbstractEventHandler {\n\nprivate static final Log LOG = LogFactory.getLog(AnalyticsSessionDataPublishHandler.class);\n\n@Override\npublic String getName() {\n\nreturn SessionDataPublisherConstants.ANALYTICS_SESSION_PUBLISHER_NAME;\n}\n\n@Override\npublic void handleEvent(Event event) throws IdentityEventException {\n\nboolean isEnabled = isAnalyticsSessionDataPublishingEnabled(event);\n\nif (!isEnabled) {\nreturn;\n}\n\nSessionData sessionData = SessionDataPublisherUtil.buildSessionData(event);\nif (IdentityEventConstants.EventName.SESSION_CREATE.name().equals(event.getEventName())) {\ndoPublishSessionCreation(sessionData);\n} else if (IdentityEventConstants.EventName.SESSION_TERMINATE.name().equals(event.getEventName())) {\ndoPublishSessionTermination(sessionData);\n} else if (IdentityEventConstants.EventName.SESSION_UPDATE.name().equals(event.getEventName())) {\ndoPublishSessionUpdate(sessionData);\n} else {\nLOG.error(\"Event \" + event.getEventName() + \" cannot be handled\");\n}\n}\n\nprotected void doPublishSessionCreation(SessionData sessionData) {\n\npublishSessionData(sessionData, SessionDataPublisherConstants.SESSION_CREATION_STATUS);\n}\n\nprotected void doPublishSessionTermination(SessionData sessionData) {\n\npublishSessionData(sessionData, SessionDataPublisherConstants.SESSION_TERMINATION_STATUS);\n\n}\n\nprotected void doPublishSessionUpdate(SessionData sessionData) {\n\npublishSessionData(sessionData, SessionDataPublisherConstants.SESSION_UPDATE_STATUS);\n}\n\nprotected void publishSessionData(SessionData sessionData, int actionId) {\n\nSessionDataPublisherUtil.updateTimeStamps(sessionData, actionId);\ntry {\nObject[] payloadData = createPayload(sessionData, actionId);\npublishToAnalytics(sessionData, payloadData);\n\n} catch (IdentityRuntimeException e) {\nif (LOG.isDebugEnabled()) {\nLOG.error(\"Error while publishing session information\", e);\n}\n}\n\n}\n\nprivate void publishToAnalytics(SessionData sessionData, Object[] payloadData) {\n\nString[] publishingDomains = (String[]) sessionData.getParameter(AuthPublisherConstants.TENANT_ID);\nif (publishingDomains != null &amp;&amp; publishingDomains.length &gt; 0) {\ntry {\nFrameworkUtils.startTenantFlow(MultitenantConstants.SUPER_TENANT_DOMAIN_NAME);\nfor (String publishingDomain : publishingDomains) {\nObject[] metadataArray = AuthnDataPublisherUtils.getMetaDataArray(publishingDomain);\norg.wso2.carbon.databridge.commons.Event event =\nnew org.wso2.carbon.databridge.commons.Event(SessionDataPublisherConstants.\nSESSION_DATA_STREAM_NAME, System.currentTimeMillis(),\nmetadataArray, null, payloadData);\nSessionDataPublishServiceHolder.getInstance().getPublisherService().publish(event);\nif (LOG.isDebugEnabled() &amp;&amp; event != null) {\nLOG.debug(\"Sending out to publishing domain:\" + publishingDomain + \" \\n event : \"\n+ event.toString());\n}\n}\n} finally {\nFrameworkUtils.endTenantFlow();\n}\n}\n}\n\nprivate Object[] createPayload(SessionData sessionData, int actionId) {\n\nObject[] payloadData = new Object[15];\npayloadData[0] = AuthnDataPublisherUtils.replaceIfNotAvailable(AuthPublisherConstants.CONFIG_PREFIX +\nAuthPublisherConstants.SESSION_ID, sessionData.getSessionId());\npayloadData[1] = sessionData.getCreatedTimestamp();\npayloadData[2] = sessionData.getUpdatedTimestamp();\npayloadData[3] = sessionData.getTerminationTimestamp();\npayloadData[4] = actionId;\npayloadData[5] = AuthnDataPublisherUtils.replaceIfNotAvailable(AuthPublisherConstants.CONFIG_PREFIX +\nAuthPublisherConstants.USERNAME, sessionData.getUser());\npayloadData[6] = AuthnDataPublisherUtils.replaceIfNotAvailable(AuthPublisherConstants.CONFIG_PREFIX +\nAuthPublisherConstants.USER_STORE_DOMAIN, sessionData.getUserStoreDomain());\npayloadData[7] = sessionData.getRemoteIP();\npayloadData[8] = AuthPublisherConstants.NOT_AVAILABLE;\npayloadData[9] = sessionData.getTenantDomain();\npayloadData[10] = sessionData.getServiceProvider();\npayloadData[11] = sessionData.getIdentityProviders();\npayloadData[12] = sessionData.isRememberMe();\npayloadData[13] = sessionData.getUserAgent();\npayloadData[14] = System.currentTimeMillis();\n\nif (LOG.isDebugEnabled()) {\nLOG.debug(\"The created payload :\" + Arrays.asList(payloadData));\n}\nreturn payloadData;\n}\n\n@Override\npublic boolean isEnabled(MessageContext messageContext) {\nIdentityEventListenerConfig identityEventListenerConfig = IdentityUtil.readEventListenerProperty\n(AbstractIdentityMessageHandler.class.getName(), this.getClass().getName());\n\nif (identityEventListenerConfig == null) {\nreturn false;\n}\n\nreturn Boolean.parseBoolean(identityEventListenerConfig.getEnable());\n}\n\nprivate boolean isAnalyticsSessionDataPublishingEnabled(Event event) throws IdentityEventException {\n\nboolean isEnabled = false;\n\nString handlerEnabled = this.configs.getModuleProperties().getProperty(SessionDataPublisherConstants.\nANALYTICS_SESSION_DATA_PUBLISHER_ENABLED);\nisEnabled = Boolean.parseBoolean(handlerEnabled);\n\nreturn isEnabled;\n}\n}\n</code></pre> </li> <li> <p>Register the service to the OSGi runtime using the following code.</p> <pre><code>    BundleContext bundleContext = context.getBundleContext();\nbundleContext.registerService(AbstractEventHandler.class, new AnalyticsSessionDataPublishHandler(), null);\n</code></pre> </li> </ol>"},{"location":"identity-server/migration-docs/is-5.9.0/migrating-preparing-for-migration/","title":"Preparing for migration","text":"<p>note</p> <p>Before you follow this section, see the Before you begin document to read on prerequisites.</p> <p>note</p> <p>In this section, <code>&lt;OLD_IS_HOME&gt;</code> is the directory that current Identity Server resides in, and <code>&lt;NEW_IS_HOME&gt;</code> is the directory that WSO2 Identity Server 5.9.0 resides in. </p>"},{"location":"identity-server/migration-docs/is-5.9.0/migrating-preparing-for-migration/#disabling-versioning-in-the-registry-configuration","title":"Disabling versioning in the registry configuration","text":"<p>If there are frequently updating registry properties, having the versioning enabled for  registry resources in the registry can lead to unnecessary growth in the registry related tables in the database. To avoid this, we have disabled versioning by default in Identity  Server 5.9.0.</p> <p>Therefore, when migrating to IS 5.9.0 it is required to turn off the registry versioning in your current Identity Server and run the below scripts against the database that is used by the registry.</p> <p>Note</p> <p>Alternatively, it is possible to turn on registry versioning in IS 5.9.0 and continue. But this is highly NOTE RECOMMENDED and these configurations should only be changed once.</p> <p>Turning off registry versioning in your current IS and running the scripts</p> <p>Open the <code>registry.xml</code> file in the <code>&lt;OLD_IS_HOME&gt;/repository/conf</code> directory. Set the <code>versioningProperties</code>, <code>versioningComments</code>, <code>versioningTags</code> and <code>versioningRatings</code> false.</p> <pre><code>&lt;staticConfiguration&gt;\n      &lt;versioningProperties&gt;false&lt;/versioningProperties&gt;\n      &lt;versioningComments&gt;false&lt;/versioningComments&gt;\n      &lt;versioningTags&gt;false&lt;/versioningTags&gt;\n      &lt;versioningRatings&gt;false&lt;/versioningRatings&gt;\n&lt;/staticConfiguration&gt;\n</code></pre> <p>Warning</p> <p>If the above configurations are already set as <code>false</code> you should not run the below scripts.</p> <p>When the above configurations are turned off, we need to remove the versioning detatils from the database in order for the registry resources to work properly. Choose the relevant DB type and run the script against the DB that the registry resides in. These DB scripts are provided by the WSO2 team.</p> <p>DB Scripts</p> <ul> <li>H2 - <code>1_H2.h2.db</code> </li> <li>DB2 - <code>2_DB2.db2</code></li> <li>MSSQL - <code>3_MSSQL.sql</code></li> <li>MySQL - <code>4_MySQL.sql</code> </li> <li>Oracle - <code>5_Oracle.sql</code> </li> <li>PostgreSQL - <code>6_PostgreSQL.sql</code></li> </ul> <p>Not recommended</p> <p>If you decide to proceed with registry resource versioning enabled, Add the following configuration to the <code>deployment.toml</code> file of new WSO2 Identity Server. <code>&lt;NEW_IS_HOME&gt;/repository/conf/deployment.toml</code></p> <pre><code>[registory.static_configuration]\nenable=false\n</code></pre> <p>Note</p> <p>Changing these configuration should only be done before the initial Identity Server startup. If changes are done after the initial startup, the registry resource created previously will not be available.</p>"},{"location":"identity-server/migration-docs/is-5.9.0/migrating-preparing-for-migration/#migrating-the-secondary-userstore-password-to-the-internal-keystore","title":"Migrating the Secondary Userstore Password to the Internal Keystore","text":"<p>Ideally, the internal keystore should be used for encrypting internal critical data. However, in  previous versions, the secondary userstore passwords are encrypted using the primary keystore,  which is also used to sign and encrypt tokens.</p> <p>In WSO2 Identity Server 5.9.0 we have moved the secondary userstore password encryption functionality  from the primary keystore to the internal keystore.</p> <p>See the document on migrating the secondary userstore password to the internal keystore (IS 5.9.0) document. </p>"},{"location":"identity-server/migration-docs/is-5.9.0/migrating-preparing-for-migration/#migrating-custom-components","title":"Migrating custom components","text":"<p>In WSO2 Identity Server 5.9.0 we have done a major upgrade to our kernel and our main components.  Any custom OSGI bundles which are added manually should be recompiled with new dependency versions  that are relevant to the new WSO2 IS version.  All custom OSGI components reside in the  <code>&lt;OLD_IS_HOME&gt;/repository/components/dropins</code> directory.</p> <ol> <li> <p>Get the source codes of the custom OSGI components located in the dropins directory. </p> </li> <li> <p>Change the dependency versions in the relevant POM files according to the WSO2 IS version that      you are upgrading to, and compile them. The compatible dependency versions can be found      here. </p> </li> <li> <p>If you come across any compile time errors, refer to the WSO2 IS code base and make the      necessary changes related to that particular component version.</p> </li> <li> <p>Add the compiled JAR files to the <code>&lt;NEW_IS_HOME&gt;/repository/components/dropins</code> directory.</p> </li> <li> <p>If there were any custom OSGI components in <code>&lt;OLD_IS_HOME&gt;/repository/components/lib</code> directory,      add newly compiled versions of those components to the <code>&lt;NEW_IS_HOME&gt;/repository/components/lib</code>  directory.</p> </li> </ol> <p>Warning</p> <p>WSO2 Identity Server 5.9.0 switched from log4j to log4j2. If any custom components are already using <code>carbon.logging</code> jar for logging purposes, make sure to update the custom components for logging to work with log4j2. For instructions, see the document on Migrating to log4j2.</p>"},{"location":"identity-server/migration-docs/is-5.9.0/migrating-preparing-for-migration/#migrating-the-configurations","title":"Migrating the configurations","text":"<p>Previous WSO2 Identity Server versions supported multiple configuration files  such as <code>carbon.xml</code>, <code>identity.xml</code>, and <code>axis2.xml</code>. With the  new configuration model in WSO2 Identity Server 5.9.0,  configurations are handled by the a single file named  <code>deployment.toml</code> in the <code>&lt;IS_HOME&gt;/repository/conf</code> directory.</p> <p>Note</p> <p>When you are migrating from older version of WSO2 Identity Server, you need to convert old configurations to new configuration model as well.</p> <p>Refer to the relevant feature documents and What Has Changed in IS 5.9.0 to add the necessary configurations according to the new configuration model.</p> <p>Info</p> <p>If you have a WSO2 Subscription, it is highly recommended to reach WSO2 Support before attempting to proceed with the configuration migration.</p>"},{"location":"identity-server/migration-docs/is-5.9.0/migrating-preparing-for-migration/#zero-down-time-migration","title":"Zero down time migration","text":"<p>Info</p> <p>If you do not require a zero down time migration, then you can directly proceed to the document on Migrating to 5.9.0.</p> <p>A typical WSO2 Identity Server deployment requires an update or upgrade from time to time,  usually when there\u2019s a patch, or critical security upgrade for products used in the solution,  or an upgrade to a newer version. To address this situation while avoiding downtime, system  admins and DevOps follow blue-green deployments to roll out updates.</p> <p>Blue-Green Migration</p> <p></p> <p>A blue-green deployment is a change management strategy for releasing software. Blue-green deployments require two identical hardware environments that are configured the same way. While one environment is live and serving all production traffic, the other environment remains idle. In the diagram below, the blue environment is live and the green is idle.</p> <p>As you prepare a new version of WSO2 Identity Server to be deployed into production, the final stage of testing takes place in an environment that is idle, i.e., in this example, the green environment. Once you have deployed and fully tested the deployment in green, you switch the load balancer so all incoming requests now go to green instead of blue. The green environment is now live, and blue is idle.</p> <p>This guide provides instructions to do a blue-green deployment with mission-critical services  enabled in the deployment. At the moment WSO2 allows,     <ul> <li>Authentication with</li> <ul> <li>OAuth 2.0 / OIDC</li> <li>SAML 2</li> <li>WS-Federation (Passive)</li> </ul> </ul> Data created when using the above-mentioned services are synced from the old system to the new system.  All the other data will not be preserved in the new system.</p> <p>Now let's see how to do the blue-green deployment with WSO2 Identity Server.</p> <ol> <li>Create a new databases for the new WSO2 Identity Server version (5.9.0)      that you are migrating to.</li> <li>Unzip a WSO2 Identity Server 5.9.0 distribution (use a WUM updated distribution      if possible). This will be used as the data sync tool between the Identity      Server versions. We will refer to WSO2 Identity Server distribution as      \u201cdata sync tool\u201d and location as <code>&lt;SYNC-TOOL-HOME&gt;</code>. </li> <li>Get the sync client jar file provided by the WSO2 team to the <code>&lt;SYNC-TOOL-HOME&gt;/repository/components/dropins</code> directory.</li> <li>Replace the <code>log4j2.properties</code> file located in <code>&lt;SYNC-TOOL-HOME&gt;/repository/conf</code>      with the log4j2.properties file provided by the WSO2 team.      This will create a separate log file <code>syn.log</code> in the <code>&lt;SYNC-TOOL-HOME&gt;/repository/logs</code> directory      which will contain the sync tool related logs.</li> <li> <p>Add the data sources used in source and target WSO2 Identity Server deployments involved in the migration      to <code>deployment.toml</code> file located <code>&lt;SYNC-TOOL-HOME&gt;/repository/conf/deployment.toml</code>.</p> <p>A sample configuration written for the MySQL DB type will look this</p> <pre><code>[[datasource]]\nid=\"source\"\nurl=\"jdbc:mysql://localhost:3306/sourcedb\"\nusername=\"sourceUsername\"\npassword=\"sourcePassword\"\ndriver=\"com.mysql.jdbc.Driver\"\n[datasource.pool_options]\nmaxActive=\"80\"\nmaxWait=\"60000\"\nminIdle=\"5\"\ntestOnBorrow=\"true\"\nvalidationQuery=\"SELECT 1\"\nvalidationInterval=\"30000\"\ndefaultAutoCommit=\"false\"\n\n[[datasource]]\nid=\"target\"\nurl=\"jdbc:mysql://localhost:3306/targetdb\"\nusername=\"targetUsername\"\npassword=\"targetPassword\"\ndriver=\"com.mysql.jdbc.Driver\"\n[datasource.pool_options]\nmaxActive=\"80\"\nmaxWait=\"60000\"\nminIdle=\"5\"\ntestOnBorrow=\"true\"\nvalidationQuery=\"SELECT 1\"\nvalidationInterval=\"30000\"\ndefaultAutoCommit=\"false\"\n</code></pre> </li> <li> <p>Create a property file with below properties as required and name it as <code>sync.properties</code>.</p> Property Description Mandatory/Optional Default value sourceVersion= Source product version Mandatory - targetVersion= Target product version Mandatory - batchSize= Size of a sync batch Optional 100 syncInterval= Interval in milliseconds between data sync batches Optional 5000 syncTables= Tables to be synced. Tables should be comma separated. Mandatory - identitySchema= JNDI names of source and target data sources for an identity schema. Mandatory - <p>Tables that support syncing</p> Table Purpose Recommendation IDN_IDENTITY_USER_DATA Identity claims when the identity data store is enabled Usually recommended to sync if identity management features are enabled in the system. IDN_OAUTH2_ACCESS_TOKEN OAuth 2.0 tokens Need to sync if the tokens created during the migration period needs to be valid after migration. IDN_OAUTH2_ACCESS_TOKEN_SCOPE OAuth 2.0 scopes If the IDN_OAUTH2_ACCESS_TOKEN is synced, this table also needs to be synced. IDN_OAUTH2_AUTHORIZATION_CODE OAuth 2.0 authorization codes Need to sync if the authorization codes created during the migration period need to be valid after migration. Not generally required since the validity period is small. <p>Tip</p> <p>A sample <code>sync.properties</code> file will be provided by the WSO2 team.</p> </li> <li> <p>Disable the endpoints in the WSO2 Identity Server that are not mission-critical for the maintenance window.</p> <p>Currently traffic allowed endpoints</p> <ul> <li> <p>For login common*</p> Endpoint (pattern) Use case /commonauth All authentication use cases /authenticationendpoint All authentication use cases /x509certificateauthenticationendpoint Client certificate based authentication </li> <li> <p>For OAuth 2.0/OpenID Connect</p> Endpoint (pattern) Use case /oauth2/token OAuth 2.0 token generation /oauth2/userinfo OAuth 2.0 user info retrieval /oauth2/introspect OAuth 2.0 token introspection /oauth2/revoke OAuth 2.0 token revocation /oauth2/authorize OAuth 2.0 authorization /oauth2/jwks OAuth 2.0 jwks /oidc/checksession OIDC session management /oidc/logout OIDC logout </li> <li> <p>For SAML2 Web SSO</p> Endpoint (pattern) Use case /samlsso SAML 2.0 login </li> <li> <p>For WS-Federation (Passive)</p> Endpoint (pattern) Use case /passivests Passive sts login </li> <li> <p>For the second factors in the login</p> Endpoint (pattern) Use case /smsotpauthenticationendpoint SMS OTP authentication /totpauthenticationendpoint TOTP authentication /emailotpauthenticationendpoint Email OTP authentication </li> <li> <p>For authorization XACML</p> Endpoint (pattern) Use case /api/identity/entitlement XACML REST Profile </li> </ul> </li> <li> <p>Start the sync tool with the following command.</p> <ul> <li>If you want to create the required tables and trigger directly on the database.     <pre><code>sh wso2server.sh -DprepareSync -DconfigFile=&lt;path to sync.properties file&gt;/sync.properties\n</code></pre></li> <li>If you want to generate the DDL scripts for the required tables and trigger      (after generating you need to manually execute them) on the database.     <pre><code>sh wso2server.sh -DprepareSync -DgenerateDDL -DconfigFile=&lt;path to sync.properties file&gt;/sync.properties\n</code></pre> This will generate the required triggers and the metadata tables to sync the data between the databases used for  the 2 versions of the identity server. At the moment below tables are supported to be synced.<ul> <li>IDN_IDENTITY_USER_DATA</li> <li>IDN_OAUTH2_ACCESS_TOKEN</li> <li>IDN_OAUTH2_ACCESS_TOKEN_SCOPE</li> <li>IDN_OAUTH2_AUTHORIZATION_CODE</li> </ul> </li> </ul> </li> <li> <p>Create database dumps from the old databases (databases used in the old version of the WSO2 Identity Server)  and restore in the new databases created.</p> </li> <li> <p>Proceed to the document on Migrating to 5.9.0.</p> </li> </ol>"},{"location":"identity-server/migration-docs/is-5.9.0/migrating-the-secondary-userstore-password-to-the-internal-keystore/","title":"Migrating the Secondary Userstore Password to the Internal Keystore","text":"<p>WSO2 Identity Server by default has one keystore. To mitigate security incidents it is advisable to maintain multiple keystores. For example, if one keystores gets compromised, you can continue with the other keystores that are intact. Mainly, you may maintain three keystores:</p> <ul> <li>A keystore to store tokens, which is mentioned in the <code>deployment.toml</code> file.</li> <li>An internal keystore to store internal critical data such as encrypted passwords. </li> <li>A keystore for Tomcat SSL connection, which is the secondary keystore of the WSO2 Identity Server.</li> </ul> <p>Ideally, the internal keystore should be used for encrypting internal critical data. However, currently, the secondary userstore passwords are encrypted using the primary keystore, which is also used to sign and encrypt tokens. Thus, it is preferable to move the secondary userstore password encryption functionality from the primary keystore to the internal keystore.</p> <p></p> <p>After moving the secondary userstore password encryption functionality to the internal keystore, WSO2 Identity Server secondary userstore password encryption tool allows you to decrypt all the existing secondary userstore passwords using the primary keystore and re-encrypt them using the internal keystore.</p> <p>Let's get started! </p> <p>Note</p> <ul> <li>If you are using an NFS-like file system, make sure to isolate the newly-downloaded binary from others.</li> <li>The secondary userstore password encryption tool is a one-time tool. Do not use the WSO2 Identity Server pack that contains this tool in production.</li> </ul>"},{"location":"identity-server/migration-docs/is-5.9.0/migrating-the-secondary-userstore-password-to-the-internal-keystore/#set-up","title":"Set up","text":"<ol> <li> <p>To add the details about the primary keystore and internal keystore, add the following configurations to the <code>deployment.toml</code> file in the <code>&lt;IS_HOME&gt;/repository/conf</code> directory.</p> <pre><code>[keystore]\nuserstore_password_encryption=\"InternalKeyStore\"\n</code></pre> </li> <li> <p>Copy the following files and directories from your existing WSO2 Identity Server pack to the respective directories of the newly-downloaded pack.</p> <p> File/Directory Purpose The <code>/repository/tenants</code> directory. This contains the tenant's secondary userstore configurations. The <code>/repository/deployment/server/userstores</code> directory. This contains the super tenant secondary userstore configurations. The keystore in the <code>/repository/resources/security</code> directory. This is the primary keystore. The internal keystore in the <code>/repository/resources/security</code> directory. This is the internal keystore. </p> </li> <li> <p>If you are using a cipher tool, copy the following files in the <code>&lt;IS_HOME&gt;/repository/conf/security</code> directory in your existing WSO2 Identity Server pack to the respective directory of the newly-downloaded pack.</p> <ul> <li><code>cipher-tool.properties</code></li> <li><code>cipher-text.properties</code></li> <li><code>secret-conf.properties</code></li> </ul> </li> <li> <p>Open the <code>secret-conf.properties</code> file in an editor and replace the <code>keystore.identity.location</code> element value with the directory path of the current internal keystore.</p> </li> </ol>"},{"location":"identity-server/migration-docs/is-5.9.0/migrating-the-secondary-userstore-password-to-the-internal-keystore/#re-encrypt-the-secondary-userstore-passwords","title":"Re-encrypt the secondary userstore passwords","text":"<p>Follow the steps below to re-encrypt the secondary userstore passwords:</p> <ol> <li> <p>Get the password encryption tool provided by the WSO2 team and copy the <code>.jar</code> into the <code>&lt;IS_HOME&gt;/repository/components/dropins</code> directory.</p> </li> <li> <p>To start the modified WSO2 Identity Server pack: </p> <ol> <li> <p>Navigate to the directory where the modified WSO2 Identity Server pack is located in a command prompt.</p> </li> <li> <p>Execute the following command. </p> </li> </ol> <pre><code>sh wso2server.sh -DreEncryptSecondaryUserStorePassword\n</code></pre> </li> <li> <p>Observe the logs in the <code>wso2carbon.log</code> file located in the <code>&lt;IS_HOME&gt;/repository/logs</code> directory to monitor the re-encryption of the secondary userstore passwords.</p> <ol> <li> <p>The following appears when the <code>.jar</code> file is being read by the server. </p> <pre><code>\"secondary userstore password re-encryption component activated\"\n</code></pre> </li> <li> <p>The following appears when the migration starts. </p> <pre><code>\"secondary userstore password re-encryption started\"\n</code></pre> </li> <li> <p>The following appears when the migration ends. </p> <pre><code>\"secondary userstore password re-encryption ended\"\n</code></pre> </li> </ol> </li> <li> <p>Once the process ends, stop the WSO2 Identity Server.</p> </li> </ol>"},{"location":"identity-server/migration-docs/is-5.9.0/migrating-the-secondary-userstore-password-to-the-internal-keystore/#copy-the-userstore-to-the-existing-wso2-identity-server-pack","title":"Copy the userstore to the existing WSO2 Identity Server pack","text":"<p>To copy the user store to the existing WSO2 Identity Server pack, copy the following directories in the modified WSO2 Identity Server pack into the respective directories of the original pack. </p> <p>Warning</p> <ul> <li>As a precautionary measure, take a backup of the existing userstore.</li> <li>During the directory copying process, the userstores may get unavailable for a few seconds.</li> </ul> Directory Purpose The <code>/repository/tenants</code> directory This contains the tenant's secondary user store configurations. The <code>/repository/deployment/server/userstores</code> directory This contains the super tenant secondary user store configurations."},{"location":"identity-server/migration-docs/is-5.9.0/migrating-to-590/","title":"Migrating to 5.9.0","text":"<p>Before you follow this section, see the Before you begin document and the Preparing for migration document to read the prerequisites.</p> <p>Note</p> <p>In this section, <code>&lt;OLD_IS_HOME&gt;</code> is the directory that current Identity Server resides in, and <code>&lt;NEW_IS_HOME&gt;</code> is the directory that WSO2 Identity Server 5.9.0 resides in. </p> <p>If you are using DB2</p> <p>Move indexes to the the TS32K Tablespace. The index tablespace in the      <code>IDN_OAUTH2_ACCESS_TOKEN</code>  and      <code>IDN_OAUTH2_AUTHORIZATION_CODE</code> tables need     to be\u00a0moved\u00a0to the existing TS32K tablespace in order to support     newly added table indexes.</p> <p>SQLADM or DBADM authority is required in order to invoke the <code>ADMIN_MOVE_TABLE</code> stored procedure. You must also have the appropriate object creation authorities, including authorities to issue the SELECT statement on the source table and to issue the INSERT statement on the target table.</p> <p>Stored procedure</p> <p>Replace the <code>&lt;TABLE_SCHEMA_OF_IDN_OAUTH2_ACCESS_TOKEN_TABLE&gt;</code> and <code>&lt;TABLE_SCHEMA_OF_IDN_OAUTH2_AUTHORIZATION_CODE_TABLE&gt;</code> tags with the respective schema for the table. </p> <p>``` sql    CREATE BUFFERPOOL BP32K IMMEDIATE SIZE 250 AUTOMATIC PAGESIZE 32K;</p> <p>CREATE LARGE TABLESPACE TS32K PAGESIZE 32K MANAGED by AUTOMATIC &gt;STORAGE BUFFERPOOL BP32K;</p> <p>CALL SYSPROC.ADMIN_MOVE_TABLE(    ,    'IDN_OAUTH2_ACCESS_TOKEN',    (SELECT TBSPACE FROM SYSCAT.TABLES WHERE     TABNAME = 'IDN_OAUTH2_ACCESS_TOKEN' AND     TABSCHEMA = ),    'TS32K',    (SELECT TBSPACE FROM SYSCAT.TABLES WHERE     TABNAME = 'IDN_OAUTH2_ACCESS_TOKEN' AND     TABSCHEMA = ),    '',    '',    '',    '',    '',    'MOVE'); <p>CALL SYSPROC.ADMIN_MOVE_TABLE(    ,    'IDN_OAUTH2_AUTHORIZATION_CODE',    (SELECT TBSPACE FROM SYSCAT.TABLES WHERE     TABNAME = 'IDN_OAUTH2_AUTHORIZATION_CODE' AND     TABSCHEMA = ),    'TS32K',    (SELECT TBSPACE FROM SYSCAT.TABLES WHERE     TABNAME = 'IDN_OAUTH2_AUTHORIZATION_CODE' AND     TABSCHEMA = ),    '',    '',    '',    '',    '',    'MOVE');    ``` <p>If you recieve an error due to missing <code>SYSTOOLSPACE</code> or     <code>SYSTOOLSTMPSPACE</code> tablespaces, create     those tablespaces manually using the following script prior to     executing the stored procedure given above. For more information,     see SYSTOOLSPACE and SYSTOOLSTMPSPACE table     spaces     in the IBM documentation.           </p> <pre><code>    CREATE TABLESPACE SYSTOOLSPACE IN IBMCATGROUP\nMANAGED BY AUTOMATIC STORAGE USING STOGROUP IBMSTOGROUP\nEXTENTSIZE 4;\n\nCREATE USER TEMPORARY TABLESPACE SYSTOOLSTMPSPACE IN IBMCATGROUP\nMANAGED BY AUTOMATIC STORAGE USING STOGROUP IBMSTOGROUP\nEXTENTSIZE 4;\n</code></pre> <ol> <li> <p>If you manually added any custom OSGI bundles to the     <code>&lt;OLD_IS_HOME&gt;/repository/components/dropins</code>     directory, copy those OSGI bundles to\u00a0the     <code>&lt;NEW_IS_HOME&gt;/repository/components/dropins</code>     directory.</p> <p>Important</p> <p>You may need to update the custom components to work with WSO2 Identity Server 5.9.0, refer to the Migrating custom components document. If applicable migrate see the Data Publishers and the Custom Scope validators referring to the corresponding document.</p> </li> <li> <p>If you manually added any JAR files to the     <code>&lt;OLD_IS_HOME&gt;/repository/components/lib</code>     directory, copy\u00a0and paste those JARs in the     <code>&lt;NEW_IS_HOME&gt;/repository/components/lib</code>     directory.</p> </li> <li> <p>Copy the <code>.jks</code> files from the     <code>&lt;OLD_IS_HOME&gt;/repository/resources/security</code>     directory and paste in the     <code>&lt;NEW_IS_HOME&gt;/repository/resources/security</code>     directory.</p> <p>Note</p> <p>In WSO2 Identity Server 5.9.0, it is required to use a certificate with the RSA key size greater than 2048. If you have used a certificate that has a weak RSA key (key size less than 2048) in the previous IS version, add the following configuration to <code>&lt;NEW_IS_HOME&gt;/repository/conf/deployment.toml</code> file to configure internal and primary keystores. </p> <pre><code>[keystore.primary]\nfile_name = \"primary.jks\"\ntype = \"JKS\"\npassword = \"wso2carbon\"\nalias = \"wso2carbon\"\nkey_password = \"wso2carbon\"\n\n[keystore.internal]\nfile_name = \"internal.jks\"\ntype = \"JKS\"\npassword = \"wso2carbon\"\nalias = \"wso2carbon\"\nkey_password = \"wso2carbon\"\n</code></pre> <p>Make sure to point the internal keystore to the keystore that is copied from the previous WSO2 Identity Server version. The primary keystore can be pointed to a keystore with a certificate that has a strong RSA key.</p> </li> <li> <p>If you have created tenants in the previous WSO2 Identity Server     version and if there are any resources in the     <code>&lt;OLD_IS_HOME&gt;/repository/tenants</code> directory,     copy the content to the     <code>&lt;NEW_IS_HOME&gt;/repository/tenants</code> directory.</p> </li> <li> <p>If you have created secondary user stores in\u00a0the previous WSO2 IS     version, copy the content in the     <code>&lt;OLD_IS_HOME&gt;/repository/deployment/server/userstores</code>     directory to the     <code>&lt;NEW_IS_HOME&gt;/repository/deployment/server/userstores</code>     directory.</p> </li> <li> <p>Ensure that you have migrated the configurations into NEW version as    advised in the preparing for migration document.</p> </li> <li> <p>Migrate the Log4j2 configurations document.</p> </li> <li> <p>Do the following to perform database updates:</p> <ol> <li> <p>Get the migration resources (<code>wso2is-migration-v1.0.101.zip</code>) file provided by the WSO2 team. Unzip it to a local directory.</p> <p>Note</p> <ul> <li>v1.0.101 of <code>wso2is-migration-v1.0.101.zip</code> denotes the     version number of the latest released migration resources. </li> <li>The directory where the <code>wso2is-migration-v1.0.101.zip</code> is unziped will be referred to as <code>&lt;IS_MIGRATION_TOOL_HOME&gt;</code>.</li> </ul> </li> <li> <p>Copy the <code>org.wso2.carbon.is.migration-v1.0.101.jar</code> file in the     <code>&lt;IS_MIGRATION_TOOL_HOME&gt;/dropins</code> directory into the <code>&lt;NEW_IS_HOME&gt;/repository/components/dropins</code>     directory.</p> </li> <li> <p>Copy migration-resources\u00a0directory to the     <code>&lt;NEW_IS_HOME&gt;</code> root directory.</p> </li> <li> <p>Ensure that the following property values are as follows in the     <code>migration-config.yaml</code> file found in     the <code>&lt;NEW_IS_HOME&gt;/migration-resources</code>     directory.</p> <pre><code>migrationEnable: \"true\"\n\ncurrentVersion: \"5.7.0\"\n\nmigrateVersion: \"5.9.0\"\n</code></pre> <p>Note</p> <p>Here the <code>currentVersion</code> is the current WSO2 Identity Server version that you are using.</p> </li> </ol> </li> <li> <p>Start the WSO2 Identity Server 5.9.0 with the following command to     execute the migration client.</p> <ol> <li> <p>Linux/Unix:</p> <pre><code>sh wso2server.sh -Dmigrate -Dcomponent=identity\n</code></pre> </li> <li> <p>Windows:</p> <pre><code>wso2server.bat -Dmigrate -Dcomponent=identity\n</code></pre> </li> </ol> </li> <li> <p>Stop the server once the migration client execution is completed.</p> <p>Tip</p> <p>If you are migrating from WSO2 Identity Server 5.8.0, then you can skip steps 8-10 and run following the following DB script against the IDENTITY_DB. These DB scripts are provided by the WSO2 team.</p> <p>DB Scripts</p> <ul> <li>H2 - <code>1_H2.h2.db</code></li> <li>DB2 - <code>2_DB2.db2</code></li> <li>MSSQL - <code>3_MSSQL.sql</code></li> <li>MySQL - <code>4_MySQL.sql</code></li> <li>Oracle - <code>5_Oracle.sql</code></li> <li>PostgreSQL - <code>6_PostgreSQL.sql</code></li> </ul> </li> </ol>"},{"location":"identity-server/migration-docs/is-5.9.0/migrating-to-590/#executing-the-sync-tool","title":"Executing the sync tool","text":"<p>warning</p> <p>Proceed with this step only if you have opt in for Zero down time migration. If not your migration task is completed now and you can omit the following steps.</p> <ol> <li> <p>Start the data sync tool with the following command pointing to the  sync.properties file.  This will start syncing data created in the old WSO2 Identity Server database after taking the database dump  to the new WSO2 Identity Server database.     <pre><code>sh wso2server.sh -DsyncData -DconfigFile=&lt;path to sync.properties file&gt;/sync.properties\n</code></pre></p> </li> <li> <p>Monitor the logs in the sync tool to see how many entries are synced at a given time and progress of the data sync  process. Following line will be printed in the logs for each table you have specified to sync if there are no  data to be synced.</p> <p><code>tab=\"Sample\" [2019-02-27 17:26:32,388]  INFO {org.wso2.is.data.sync.system.pipeline.process.BatchProcessor} -  No data to sync for: &lt;TABLE_NAME&gt;</code></p> <p>info</p> <p>If you have some traffic to the old version of the WSO2 Identity Server, the number of entries to be synced might not become zero at any time. In that case, watch for the logs and decide a point      that the number of entries that are synced is a lower value.</p> </li> <li> <p>When the data sync is completed, switch the traffic from the old setup to the new setup.</p> </li> <li> <p>Allow the sync client to run for some time to sync the entries that were not synced before switching  the deployments. When the number of entries synced by the sync tool, becomes zero, stop the sync client.</p> </li> </ol>"},{"location":"identity-server/migration-docs/is-5.9.0/migrating-to-590/#verifying-the-migration-was-successful","title":"Verifying the migration was successful","text":"<p>After the migration is completed, proceed to the following verification steps.</p> <ul> <li>Monitor the system health (CPU, memory usage etc).</li> <li>Monitor the WSO2 logs to see if there are errors logged in the log files.</li> <li>Run functional tests against the migrated deployment to verify that all functionality is working as expected.</li> </ul> <p>If you see any problems in the migrated system, revert the traffic back to the previous setup and  investigate the problem.</p>"},{"location":"identity-server/migration-docs/is-5.9.0/migrating-to-log4j2/","title":"Migrating to Log4j2","text":"<p>From kernel 4.5.x onwards the carbon.logging jar is not packed and the pax-logging-api is used instead. With this upgrade the log4j version is also updated to log4j2.</p> <p>Warning</p> <p>Note that WSO2 Identity Server 5.9.0, 5.10.0, and 5.11.0 are affected by the Log4j2 zero-day vulnerability, which has been reported to WSO2 on 10th December 2021. You can mitigate this vulnerability in your product by following our instructions and guidelines.</p> <p>Refer to the following steps for log4j2 migration.</p> <ol> <li> <p>Replace carbon logging or commons.logging dependencies with pax-logging dependency.</p> <pre><code>&lt;!-- Pax Logging --&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.ops4j.pax.logging&lt;/groupId&gt;\n    &lt;artifactId&gt;pax-logging-api&lt;/artifactId&gt;\n    &lt;version&gt;${pax.logging.api.version}&lt;/version&gt;\n&lt;/dependency&gt;\n\n&lt;!-- Pax Logging Version --&gt;\n&lt;pax.logging.api.version&gt;1.10.1&lt;/pax.logging.api.version&gt;\n</code></pre> </li> <li> <p>If log4j dependency is directly used </p> <ul> <li> <p>Option 1</p> <p>Replace log4j dependency with log4j2 dependency and rewrite the loggers accordingly.</p> <pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;org.ops4j.pax.logging&lt;/groupId&gt;\n    &lt;artifactId&gt;pax-logging-log4j2&lt;/artifactId&gt;\n    &lt;version&gt;${pax.logging.log4j2.version}&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre> </li> <li> <p>Option 2</p> <p>Replace log4j dependency with pax-logging dependency and rewrite the loggers using commons.logging accordingly.</p> </li> </ul> </li> <li> <p>If commons.logging is imported using Import-Package add the version range.     <pre><code>org.apache.commons.logging; version=\"${commons.logging.version.range}\"\n\n\n&lt;commons.logging.version.range&gt;[1.2.0,2.0.0)&lt;/commons.logging.version.range&gt;\n</code></pre></p> </li> <li> <p>Change appenders in the log4j2.properties file and add the appender to the appenders list.</p> <pre><code>appender.CARBON_LOGFILE.type = RollingFile\nappender.CARBON_LOGFILE.name = CARBON_LOGFILE\nappender.CARBON_LOGFILE.fileName = ${sys:carbon.home}/repository/logs/wso2carbon.log\nappender.CARBON_LOGFILE.filePattern = ${sys:carbon.home}/repository/logs/wso2carbon-%d{MM-dd-yyyy}.log\nappender.CARBON_LOGFILE.layout.type = PatternLayout\nappender.CARBON_LOGFILE.layout.pattern = TID: [%tenantId] [%appName] [%d] %5p [%c] - %m%ex%n\nappender.CARBON_LOGFILE.policies.type = Policies\nappender.CARBON_LOGFILE.policies.time.type = TimeBasedTriggeringPolicy\nappender.CARBON_LOGFILE.policies.time.interval = 1\nappender.CARBON_LOGFILE.policies.time.modulate = true\nappender.CARBON_LOGFILE.policies.size.type = SizeBasedTriggeringPolicy\nappender.CARBON_LOGFILE.policies.size.size=10MB\nappender.CARBON_LOGFILE.strategy.type = DefaultRolloverStrategy\nappender.CARBON_LOGFILE.strategy.max = 20\nappender.CARBON_LOGFILE.filter.threshold.type = ThresholdFilter\nappender.CARBON_LOGFILE.filter.threshold.level = DEBUG\n\nappenders = CARBON_LOGFILE, CARBON_CONSOLE, AUDIT_LOGFILE, ATOMIKOS_LOGFILE, CARBON_TRACE_LOGFILE, CARBON_MEMORY, \nDELETE_EVENT_LOGFILE, TRANSACTION_LOGFILE\n</code></pre> </li> <li> <p>Add logger in the log4j2.properties file and add the logger to the loggers list.</p> <pre><code>logger.&lt;Logger_Name&gt;.name = &lt;Component_name&gt;\nlogger.&lt;Logger_Name&gt;.type = INFO\n</code></pre> <p>Then add the  to the loggers list by comma-separate. <pre><code>logger.org-wso2-carbon-identity-core.name = org.wso2.carbon.identity.core\nlogger.org-wso2-carbon-identity-core.level = INFO\n\nloggers = org-wso2-carbon-identity-core, trace-messages, org-apache-coyote,com-hazelcast\n</code></pre>"},{"location":"identity-server/migration-docs/is-5.9.0/migrating-what-has-changed/","title":"What Has Changed","text":"<p>WSO2 Identity Server 5.9.0 brings a range of new features and major improvements. In IS 5.9.0, the following  aspects have been changed compared to the previous IS versions.</p>"},{"location":"identity-server/migration-docs/is-5.9.0/migrating-what-has-changed/#changes-to-resource-access-control","title":"Changes to Resource Access Control","text":"<p>WSO2 Identity Server maintains a set of resources that requires user authentication.  In previous versions, if a resource is not mentioned in the configuration, it was  allowed to be accessed without user authentication. In WSO2 Identity Server 5.9.0,  the configuration is changed to deny any request to a resource that is not  mentioned in the configuration. In addition, the resources which do not require any user authentication,  has to be explicitly mentioned in the <code>deployment.toml</code> file in the <code>&lt;IS_HOME&gt;/repository/conf/</code> directory.</p> <p>Resource definition order</p> <p>The order in which the resource are defined is important for permission that are defined for resources under <code>ResourceAccessControl</code>. The entries at the top get precedence over the entries at the bottom.</p> <p>As all new resources and permissions are added to the top, they get precedence over the already defined resources/permissions. A new resource can be added to the resource access control using the following config. You can add the config to the <code>deployment.toml</code> file in the <code>&lt;IS_HOME&gt;/repository/conf/</code> directory.</p> <pre><code>[[resource.access_control]]\ncontext=\"&lt;resource&gt;\"\nsecure=\"&lt;true/false&gt;\"\nhttp_method=\"&lt;method&gt;\"\npermissions=[\"&lt;permission&gt;\"]\n</code></pre> <p>Note </p> <p>To revert back to the previous behaviour, add the following configuration to the <code>deployment.toml</code> file in the <code>&lt;IS_HOME&gt;/repository/conf/</code> directory.</p> <pre><code>[resource_access_control]\ndefault_access = \"allow\"\n</code></pre>"},{"location":"identity-server/migration-docs/is-5.9.0/migrating-what-has-changed/#log-printing","title":"Log printing","text":"<p>WSO2 Identity Server has a log printing mechanism. With WSO2 Identity Server 5.9.0, a correlation Id is  added to all the places where the logs are printed. </p> <p>Correlation Id</p> <p>The correlation Id is used to correlate the method calls made for a request. The correlation Id is printed after the timestamp.</p> <p><code>tab=\"Sample log\" [2019-09-10 20:36:09,181] [16667e80-6470-425b-b63a-253f096c7e69]  INFO {org.wso2.carbon.core.services.util.CarbonAuthenticationUtil} - 'admin@wso2.com [1]logged in at [2019-09-10 20:36:09,180+0530]</code></p> <p>Note</p> <p>To get the previous format in error logs, change the the <code>log4j2.properties</code> file in the <code>&lt;IS-Home&gt;/repository/conf</code> directory as shown below.</p> New Format Old Format <code>appender.CARBON_CONSOLE.layout.pattern = [%d] [%X <code> appender.CARBON_CONSOLE.layout.pattern = [%d] %5p [%c] - %m%ex%n </code> <code>appender.CARBON_LOGFILE.layout.pattern = TID: [%tenantId] [%appName] [%d] [%X <code> appender.CARBON_LOGFILE.layout.pattern = TID: [%tenantId] [%appName] [%d] %5p [%c] - %m%ex%n </code> <code>appender.AUDIT_LOGFILE.layout.pattern = TID: [%tenantId] [%d] [%X <code> appender.AUDIT_LOGFILE.layout.pattern = TID: [%tenantId] [%d] %5p [%c] - %m%ex%n </code>"},{"location":"identity-server/migration-docs/is-5.9.0/migrating-what-has-changed/#storing-the-username-in-consent-management","title":"Storing the username in consent management","text":"<p>WSO2 Identity Server supports obtaining user consent at user authentication. Consent management  in previous Identity Server versions, enforced case-sensitive usernames. But, Identity  Server 5.9.0 supports case-insensitive usernames by default. </p> <p>Note</p> <p>If you are using a case-sensitive username configuration, add the following configuration to the <code>deployment.toml</code> in file in <code>&lt;IS_HOME&gt;/repository/conf/</code> directory.</p> <pre><code>[user_store]\nuse_case_sensitive_username_for_cache_keys = true\n</code></pre>"},{"location":"identity-server/migration-docs/is-5.9.0/migrating-what-has-changed/#changes-to-the-oidc-discovery-response","title":"Changes to the OIDC discovery response","text":"<p>WSO2 Identity Server has an OpendID discovery service that can be called by using  the <code>https://{server-ip}/oauth2/oidcdiscovery/.well-known/openid-configuration</code> endpoint. </p> <p>In previous versions, the response values of the <code>request_parameter_supported</code> and <code>claims_parameter_supported</code>  properties were as follows.</p> <pre><code>\"request_parameter_supported\": \"true\",\n\"claims_parameter_supported\": \"true\",\n</code></pre> <p>In WSO2 Identity Server 5.9.0 the values for above properties have been changed to <code>boolean</code> instead of <code>string</code>.</p> <pre><code>\"request_parameter_supported\": true,\n\"claims_parameter_supported\": true,\n</code></pre>"},{"location":"identity-server/migration-docs/is-5.9.0/migrating-what-has-changed/#redirecting-to-callbackurl-in-oauth-flow-errors","title":"Redirecting to callbackUrl in OAuth flow errors","text":"<p>In previous Identity Server versions, when an error occurs while using the OAuth 2.0 flow, the  user was redirected to an error page at the <code>authenticationendpoint/oauth2_error.do</code> URL. According to the  specification, unless the provided <code>redirect URI</code> and <code>client Id</code> are invalid, the user should be redirected  to the provided redirect URI.  </p> <p>For WSO2 Identity Server 5.9.0 to be specification-compliant, unless the provided <code>redirect URI</code> or  <code>client Id</code> are invalid, the user will be redirected to the given redirect URI with the <code>error</code>, <code>error_description</code>,  and <code>state</code> parameters set to the query component of the redirection URI.</p> <p>Note</p> <p>To achieve the previous behaviour, add the following configuration to the <code>deployment.toml</code> in <code>&lt;IS_HOME&gt;/repository/conf/</code> directory.</p> <pre><code>[oauth]\nredirect_to_idp_error_page_on_error=true\n</code></pre>"},{"location":"identity-server/migration-docs/is-5.9.0/migrating-what-has-changed/#redirecting-to-postlogouturi-in-user-consent-denial-for-oidc-logout","title":"Redirecting to PostLogoutUri in user consent denial for OIDC logout","text":"<p>When a user rejects the OIDC logout consent, in earlier versions of the WSO2 Identity Server the user was redirected to  the <code>oauth2_error.do</code> page with \u201caccess_denied - End User denied the logout request\u201d error message. Custom  parameters such as \u201coauthErrorCode\u201d and \u201coauthErrorMsg\u201d were used to explain the issue to the user.</p> <p>In WSO2 Identity Server 5.9.0, the user will be redirected to <code>postLogoutUri</code> with the parameters <code>error</code>  and  <code>error_description</code> which are defined in the OIDC specification. </p> <p>Note</p> <p>To achieve previous behaviour, add the following configuration to the <code>deployment.toml</code> in <code>&lt;IS_HOME&gt;/repository/ conf/</code> directory.</p> <pre><code>[oauth.oidc]\nredirect_to_post_logout_uri_on_consent_denial = false\n</code></pre>"},{"location":"identity-server/migration-docs/is-5.9.0/migrating-what-has-changed/#scope-validation-for-token-issuing","title":"Scope validation for token issuing","text":"<p>WSO2 Identity Server supports scope validation when issuing tokens for  OAuth Service Providers. </p> <p>In previous Identity Server versions, this capability was not available when issuing tokens for  Authorization Code and Implicit grant types. Identity Server 5.9.0 supports  these by default when using a scope validator.</p> <p>Note</p> <p>To achieve the previous behaviour, add the following configuration to the <code>deployment.toml</code> in <code>&lt;IS_HOME&gt;/repository/conf/</code> directory.</p> <pre><code>[oauth.scope_validator.authz_implicit]\nenable = false\n</code></pre>"},{"location":"identity-server/migration-docs/is-5.9.0/migrating-what-has-changed/#authentication-endpoint-and-account-recovery-endpoint","title":"Authentication Endpoint and Account Recovery Endpoint","text":"<p>In earlier versions of the WSO2 Identity Server the <code>authenticationendpoint</code> and the  <code>accountrecoveryendpoint</code> was packed in as <code>war</code> files in the <code>&lt;IS_HOME&gt;/repository/  deployment/server/webapps/</code> directory. In WSO2 Identity Server 5.9.0 the exploded war files are packed.</p>"},{"location":"identity-server/migration-docs/is-5.9.0/migrating-what-has-changed/#log4j-upgrade","title":"Log4j upgrade","text":"<p>WSO2 Identity Server 5.9.0 has switched from log4j to log4j2. You will notice that there is a  <code>log4j2.properties</code> file in the <code>&lt;IS_HOME&gt;/repository/conf/</code> directory instead of the  <code>log4j.properties</code> file.</p> <p>Warning</p> <p>Taking the <code>log4j.properties</code> file from your old WSO2 Identity Server and adding it to WSO2 Identity Server 5.9.0 will no longer work. Refer the Migrating to log4j2 document to see how to add a log appender or a logger to the <code>log4j2.properties</code> file.</p> <p>Migrating to JDK 11</p> <p>If you are migrating to JDK 11, you need to change the signature of the adaptive authentication script method since the improvements done for the Nashorn Engine to support ES6 in JDK 9 made the following method signature unsupported.</p> <ul> <li>Unsupported method signature*    <pre><code>function getAge(birthDate) {\n...   }\n</code></pre></li> <li>Supported method signature**    <pre><code>var getAge = function (birthDate) {\n...\n};\n</code></pre></li> </ul>"},{"location":"identity-server/migration-docs/is-5.9.0/migrating-what-has-changed/#handling-role-based-or-xacml-based-scope-validation-for-implicit-and-authorization-code-grants","title":"Handling Role-based or XACML-based Scope Validation for Implicit and Authorization Code Grants","text":"<p>Scope validation has been enforced for authorization code grant and implicit grants. </p> <p>Note</p> <p>If you have implemented any apps that work without scope validation and you wish to disable the behaviour, add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[oauth]\nscope_validator.authz_implicit.enable = false\n</code></pre>"},{"location":"identity-server/migration-docs/is-5.9.0/migrating-what-has-changed/#multi-factor-authentication-using-fido","title":"Multi factor Authentication using FIDO","text":"<p>From IS 5.9.0 onwards, WebAuthn API is being used instead of U2F API. If you have used FIDO previously, your devices must be re-enrolled.</p> <p>Warning</p> <p>If you choose to keep using the previous behavior which based on U2F API you need to use an old version of chrome where U2F API was supported so you can enroll new devices and you will also miss the new FIDO features which introduced in IS 5.9.0 like FIDO REST API</p> <p>Note</p> <p>To achieve the previous behaviour, add the following configuration to the <code>deployment.toml</code> in <code>&lt;IS_HOME&gt;/repository/conf/</code> directory. <pre><code>[fido.webauthn]\nenable = false\n</code></pre></p>"},{"location":"identity-server/migration-docs/is-5.9.0/migrating-what-has-changed/#h2-database-for-wso2_carbon_db-datasource","title":"H2 Database for WSO2_CARBON_DB datasource","text":"<p>From IS 5.9.0 onwards, the WSO2_CARBON_DB datasource will use the embedded H2 database and it is not configurable. The default WSO2_CARBON_DB datasource is only used in the local registry mount of the server. Therefore, in every IS version, it's recommended to use the embedded H2 database even in the production deployment. This recommendation is enforced with the new configuration model from IS 5.9.0 onwards. Note that you don't need to change the WSO2_CARBON_DB datasource in IS 5.9.0 and it will not be available in the <code>deployment.toml</code> file by default.</p> <p>There are two configurable datasources available in the default <code>deployment.toml</code> file as follows:</p> <p><pre><code>[database.identity_db]\ntype = \"h2\"\nurl = \"jdbc:h2:./repository/database/WSO2IDENTITY_DB;DB_CLOSE_ON_EXIT=FALSE;LOCK_TIMEOUT=60000\"\nusername = \"wso2carbon\"\npassword = \"wso2carbon\"\n\n[database.shared_db]\ntype = \"h2\"\nurl = \"jdbc:h2:./repository/database/WSO2SHARED_DB;DB_CLOSE_ON_EXIT=FALSE;LOCK_TIMEOUT=60000\"\nusername = \"wso2carbon\"\npassword = \"wso2carbon\"\n</code></pre> It is sufficient to change these two datasources without considering WSO2_CARBON_DB even for production deployments due to the reasons mentioned above.</p> <p>See the instructions on working with databases for details on changing datasource configurations.</p>"},{"location":"identity-server/migration-docs/is-5.9.0/migration-guide/","title":"Before you begin","text":"<p>This section walks you through the steps you need to follow to upgrade WSO2 Identity Server to version 5.9.0.\u00a0</p>"},{"location":"identity-server/migration-docs/is-5.9.0/migration-guide/#should-i-migrate","title":"Should I migrate?","text":"<p>WSO2 recommends upgrading to the latest version in order to ensure that users receive the latest updates for the product.</p> <ul> <li>For a high level overview of what has been added, changed, or     deprecated in this release, see About this     release.</li> <li>For a detailed overview of behavioral changes in this release, see the     What Has Changed in IS 5.9.0 document.</li> </ul>"},{"location":"identity-server/migration-docs/is-5.9.0/migration-guide/#prerequisites","title":"Prerequisites","text":"<ol> <li> <p>Review what has been changed in this release. For a detailed list of     changes\u00a0from 5.8.0 to 5.9.0, see the     What Has Changed in IS 5.9.0 document.</p> </li> <li> <p>Before you migrate, refer to the Migration Process document      to get an understanding on the migration process.</p> </li> <li> <p>This release is a WUM-only release. This means that there are no     manual patches. You can use WSO2 Update Manager(WUM) to get any     fixes or latest updates for this release.</p> <p>Important</p> <p>If you are upgrading to use this version in your production     environment, use WSO2 Update Manager to get the latest updates     available for WSO2 IS 5.9.0. For more information on how to use WSO2     Update Manager, see Updating WSO2 Products.</p> </li> <li> <p>Take a backup of the existing database used by the current WSO2 Identity Server.      This backup is necessary in case the migration causes any issues in the existing database.</p> </li> <li> <p>Download WSO2 Identity Server 5.9.0 and unzip it in the <code>&lt;NEW_IS_HOME&gt;</code> directory.</p> </li> <li> <p>Next, refer to the Preparing for migration document.</p> </li> </ol>"},{"location":"identity-server/migration-docs/is-5.9.0/migration-process/","title":"Migration Process","text":"<p>This section contains the complete migration process related to the WSO2 Identity Server. Go through the guidelines given below before attempting to migrate the production environment.</p> <ol> <li> <p>If you already have a WSO2 subscription, reach out to our support team through  your support account.</p> </li> <li> <p>Always migrate to the latest version      since latest fixes and new features are available in the newest version. If you have a particular      requirement to migrate to an intermediate version, contact      WSO2 Support.</p> <p>Note</p> <p>Migrating the production environment requires additional hardware/VM resources since both the old  environment and the new environment will be running until all the traffic is routed to the new environment.</p> </li> <li> <p>If you have customizations in your setup, check if they are supported out of the box in the latest  version.</p> <ul> <li>If your customizations are already available in the latest version, you can remove the  customization after migration. You can contact WSO2 Support  for assistance.</li> <li> <p>If any custom requirement is not available in the latest version,  migrate the customization to support the latest product version. Note the following points.</p> <p>Migrating the customizations that are not available in the latest version   - First update the dependency version of the dependant WSO2 components and re-build the customized component.   - As a practice, WSO2 does not make API changes in minor releases of the dependency jars. However, if there are API changes, please update the custom code and re-build.   -  For more information about migrating customizations, see the Migrating Custom Components document.</p> </li> </ul> </li> <li> <p>List down the functional and nonfunctional use cases in your deployment and create test cases for them. </p> <p>Note</p> <p>This step is crucial to verify that the migrated environment works as expected.     </p> </li> <li> <p>Identify the configuration migrations required for the new setup. </p> <p>Note   For more information about this release, see the document on What has changed in WSO2 IS 5.9.0.</p> </li> <li> <p>Prepare a test setup of the migrating version with customizations and necessary config changes, and  test your functional and nonfunctional requirements.</p> </li> <li> <p>Before starting the migration, run the token and session  cleanup scripts  in the databases of the environment, if you are not doing regular cleanups.</p> <p>Info</p> <p>Clean-up scripts can be found in the relevant db folder in <code>&lt;IS-HOME&gt;/dbscripts/identity/stored-procedures</code></p> </li> <li> <p>Start the migration from the lowest environment such as dev and continue up to the highest before the production  such as pre-prod. Run the test cases in the migrated environments to confirm that your functional and nonfunctional  requirements are met in the migrated environment.</p> </li> <li> <p>Prior to the production migration, run a pilot migration on your pre-prod environment. It would be  ideal if the pre-prod environment is similar to the production environment.</p> <ul> <li>If possible, restore a database dump of the production environment to the pre-prod environment and  perform the pilot migration.</li> <li>If the production database dump cannot be used, at least ensure that you have a sufficient amount  of data in the database to mimic the production environment.</li> </ul> </li> <li> <p>When you follow the above steps, you can get a rough estimate of the time for the final  production update and you can allocate time slots as per the above analysis. WSO2 recommends performing the  migration while the system is under minimum traffic. </p> </li> </ol> <p>Once you are satisfied with the above steps, proceed with production migration. After the migration is complete,  verify it using the following steps.</p> <ul> <li>Monitor the system health (CPU, memory usage etc).</li> <li>Monitor the WSO2 logs for errors.</li> </ul> <p>NOTE: </p> <p>If you see any problems in the migrated system, revert the traffic back to the previous setup and investigate the problem.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/migrate-to-600/","title":"Migrating to 6.0.0","text":"<p>This document guides you through the migration process from earlier versions of WSO2 Identity Server to Identity Server 6.0.0.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/migrate-to-600/#before-you-begin","title":"Before you begin","text":"<p>See the document on preparing for migration.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/migrate-to-600/#step-1-migrate-artifacts-and-configs","title":"Step 1: Migrate artifacts and configs","text":"<p>Note</p> <p>Note that <code>&lt;OLD_IS_HOME&gt;</code> is the folder that the current Identity Server resides in, and <code>&lt;NEW_IS_HOME&gt;</code> is the folder that WSO2 Identity Server 6.0.0 resides in.</p> <p>Once all the prerequisites are met, follow the instructions given below to migrate to WSO2 IS 6.0.0.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/migrate-to-600/#components","title":"Components","text":"<p>Follow the instructions given below to migrate any component artifacts.</p> <ul> <li> <p>If you have manually added any JAR files to the <code>&lt;OLD_IS_HOME&gt;/repository/components/lib</code> folder, copy those JARs to the <code>&lt;NEW_IS_HOME&gt;/repository/components/lib</code> folder.</p> </li> <li> <p>If you have manually added any custom OSGI bundles to the <code>&lt;OLD_IS_HOME&gt;/repository/components/dropins</code> folder, copy those OSGI bundles to\u00a0the <code>&lt;NEW_IS_HOME&gt;/repository/components/dropins</code> folder.</p> </li> <li> <p>Custom components</p> <p>In WSO2 Identity Server 6.0.0, a major upgrade has been made to the kernel and the main components. Any custom OSGI bundles, which are added manually, should be recompiled with new dependency versions that are relevant to the new WSO2 IS version. All custom OSGI components reside in the <code>&lt;OLD_IS_HOME&gt;/repository/components/dropins</code> folder.</p> <ol> <li> <p>Get the source codes of the custom OSGI components located in the <code>dropins</code> folder.</p> </li> <li> <p>Change the dependency versions in the relevant POM files according to the WSO2 IS version that you are upgrading to (WSO2 IS 6.0.0) and compile them. </p> <p>Info The compatible dependency versions can be found here.</p> </li> <li> <p>If you come across any compile time errors, refer to the WSO2 IS code base and make the necessary changes related to that particular component version.</p> </li> <li> <p>Add the compiled JAR files to the <code>&lt;NEW_IS_HOME&gt;/repository/components/dropins</code> folder.</p> </li> <li> <p>If there were any custom OSGI components in <code>&lt;OLD_IS_HOME&gt;/repository/components/lib</code> folder, add newly compiled versions of those components to the <code>&lt;NEW_IS_HOME&gt;/repository/components/lib</code> folder.</p> </li> </ol> </li> </ul>"},{"location":"identity-server/migration-docs/is-6.0.0/migrate-to-600/#resources","title":"Resources","text":"<p>Copy the <code>.jks</code> files from the <code>&lt;OLD_IS_HOME&gt;/repository/resources/security</code> folder to the <code>&lt;NEW_IS_HOME&gt;/repository/resources/security</code> folder.</p> <p>Note</p> <p>From WSO2 Identity Server 5.11.0 onwards, it is required to use a certificate with the RSA key size greater than 2048. If you have used a certificate that has a weak RSA key (key size less than 2048) in the previous WSO2 IS version, add the following configuration to the <code>&lt;NEW_IS_HOME&gt;/repository/conf/deployment.toml</code> file to configure internal and primary keystores.  ```toml [keystore.primary]  file_name = \"primary.jks\"  type = \"JKS\"  password = \"wso2carbon\"  alias = \"wso2carbon\"  key_password = \"wso2carbon\"</p> <p>[keystore.internal]  file_name = \"internal.jks\"  type = \"JKS\"  password = \"wso2carbon\"  alias = \"wso2carbon\"  key_password = \"wso2carbon\"  ```</p> <p>Make sure to point the internal keystore to the keystore that is copied from the previous WSO2 Identity Server version. The primary keystore can be pointed to a keystore with a certificate that has a strong RSA key.</p> <p>Also, make sure to add the public key of the primary keystore to the client trust store copied from the previous IS.</p> <ul> <li> <p>Export the public key from your primary keystore file using the following command:  <code>keytool -export -alias wso2carbon -keystore primary.jks -file &lt;public key name&gt;.pem</code></p> </li> <li> <p>Import the public key you extracted to the <code>client-truststore.jks</code> file by using the following command:  <code>keytool -import -alias &lt;new alias&gt; -file &lt;public key name&gt;.pem -keystore client-truststore.jks -storepass wso2carbon</code></p> </li> </ul>"},{"location":"identity-server/migration-docs/is-6.0.0/migrate-to-600/#tenants","title":"Tenants","text":"<p>If you have created tenants in the previous WSO2 Identity Server version that contain resources, copy the content from the <code>&lt;OLD_IS_HOME&gt;/repository/tenants</code> folder to the <code>&lt;NEW_IS_HOME&gt;/repository/tenants</code> folder.</p> <p>Note</p> <p>If you are migrating from IS 5.8.0 or below, delete the <code>eventpublishers</code> and <code>eventstreams</code> folders from each tenant in the <code>tenants</code> folder when copying to IS 6.0.0. Make sure to back up the <code>tenants</code> folder before deleting the subfolders. You can use the following set of commands to find and delete all the relevant subfolders at once.</p> <pre><code>cd &lt;NEW_IS_HOME&gt;/repository/tenants\nfind . -type d -name 'eventpublishers' -exec rm -rf {} +\nfind . -type d -name 'eventstreams' -exec rm -rf {} +\n</code></pre>"},{"location":"identity-server/migration-docs/is-6.0.0/migrate-to-600/#user-stores","title":"User stores","text":"<p>If you have created secondary user stores in\u00a0the previous WSO2 IS version, copy the content in the <code>&lt;OLD_IS_HOME&gt;/repository/deployment/server/userstores</code> folder to the <code>&lt;NEW_IS_HOME&gt;/repository/deployment/server/userstores</code> folder.</p> <p>Note - If you are migrating from a version prior to IS 5.5.0, you need to make the following changes in the <code>&lt;NEW_IS_HOME&gt;/migration-resources/migration-config.yaml</code> file (see Step 2 for instructions on getting the migration resources). - Remove all <code>UserStorePasswordMigrators</code> from versions above your previous IS version. User store password migration will be done by the <code>EncryptionAdminFlowMigrator</code> in version 5.11.0.</p> <pre><code>name: \"UserStorePasswordMigrator\"\norder: 5\nparameters:\nschema: \"identity\"\n</code></pre> <ul> <li> <p>Change the <code>currentEncryptionAlgorithm</code> to <code>RSA</code> in <code>EncryptionAdminFlowMigrator</code> of version 5.11.0.</p> <pre><code>name: \"EncryptionAdminFlowMigrator\"\norder: 1\nparameters:\ncurrentEncryptionAlgorithm: \"RSA\"\nmigratedEncryptionAlgorithm: \"AES/GCM/NoPadding\"\nschema: \"identity\"\n</code></pre> </li> <li> <p>If you are migrating from a version prior to IS 5.10.0, you need to update the <code>UserStoreManager</code> class name in the XML files of your user stores with its respective Unique ID &gt;userstore manager class name according to the table below.</p> </li> </ul> Deprecated Userstore Manager Unique ID Userstore &gt;Manager ReadWriteLDAPUserStoreManager UniqueIDReadWriteLDAPUserStoreManager ActiveDirectoryUserStoreManager UniqueIDActiveDirectoryUserStoreManager ReadOnlyLDAPUserStoreManage UniqueIDReadOnlyLDAPUserStoreManager JDBCUserStoreManager UniqueIDJDBCUserStoreManager <ul> <li>Make sure to update the JDBC driver class name used in the userstore XML file if the current class is deprecated. </li> </ul>"},{"location":"identity-server/migration-docs/is-6.0.0/migrate-to-600/#webapps","title":"Webapps","text":"<p>If you have customized any existing web apps in the previous WSO2 Identity Server version, those changes should be manually applied to the relevant files in WSO2 IS 6.0.0 with careful inspection.</p> <p>If you have deployed custom web apps in the previous WSO2 Identity Server, update the webapps to be compatible with WSO2 IS 6.0.0 and copy the web apps to the <code>&lt;NEW_IS_HOME&gt;/repository/deployment/server/webapps</code> folder.</p> <p>Info</p> <p>See the document on What has changed in WSO2 IS 6.0.0 to learn about the changes (if any) that need to be made to the webapps.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/migrate-to-600/#configurations","title":"Configurations","text":"<p>Info</p> <p>If you have a WSO2 Subscription, it is highly recommended to reach WSO2 Support before attempting to proceed with the configuration migration.</p> <ol> <li> <p>Make sure that all the properties in the <code>&lt;IS_HOME&gt;/repository/conf/deployment.toml</code> file such as the database configurations are set to the correct values based on the requirement.</p> </li> <li> <p>Replace the <code>&lt;NEW_IS_HOME&gt;/repository/conf/email/email-admin-config.xml</code> file with <code>&lt;OLD_IS_HOME&gt;/repository/conf/email/email-admin-config.xml</code>.</p> </li> <li> <p>If you're migrating from a version prior to WSO2 IS 5.11.0, configure the SymmetricKeyInternalCryptoProvider as the default internal cryptor provider.</p> <ol> <li> <p>Generate your own secret key using a tool like OpenSSL.</p> <p><code>tab=\"Example\" openssl enc -nosalt -aes-128-cbc -k hello-world -P</code></p> </li> <li> <p>Add the configuration to the <code>&lt;NEW_IS_HOME&gt;/repository/conf/deployment.toml</code> file.</p> <pre><code>[encryption]\nkey = \"&lt;provide-your-key-here&gt;\"\n</code></pre> </li> <li> <p>Open the <code>&lt;NEW_IS_HOME&gt;/migration-resources/migration-config.yaml</code> file and note that the following two migrators are configured under migratorConfigs for 5.11.0:</p> <ul> <li>EncryptionAdminFlowMigrator</li> <li>EncryptionUserFlowMigrator</li> </ul> </li> <li> <p>If you're migrating from a version prior to WSO2 IS 5.6.0, open the <code>&lt;NEW_IS_HOME&gt;/migration-resources/migration-config.yaml</code> file and change the value of <code>transformToSymmetric</code> to <code>true</code> as shown below.</p> <pre><code>name: \"KeyStorePasswordMigrator\"\norder: 9\nparameters:\nschema: \"identity\"\ncurrentEncryptionAlgorithm: \"RSA\"\nmigratedEncryptionAlgorithm: \"RSA/ECB/OAEPwithSHA1andMGF1Padding\"\ntransformToSymmetric: \"true\"\n</code></pre> </li> <li> <p>Under each migrator's parameters, find the property value of currentEncryptionAlgorithm and ensure that it matches the value of the <code>org.wso2.CipherTransformation</code> property found in the <code>&lt;OLD_IS_HOME&gt;/repository/conf/carbon.properties</code> file.</p> </li> </ol> </li> </ol>"},{"location":"identity-server/migration-docs/is-6.0.0/migrate-to-600/#step-2-run-the-migration-client","title":"Step 2: Run the migration client","text":"<p>To set up the migration resources:</p> <ol> <li>Get the migration client (<code>wso2is-migration-x.x.x.zip</code>) provided by the WSO2 team.</li> <li> <p>Unzip it to a local folder.</p> <p>Note</p> <ul> <li>x.x.x of <code>wso2is-migration-x.x.x.zip</code> denotes the version number of the most recently-released migration resources.</li> <li>The folder of the <code>wso2is-migration-x.x.x.zip</code> will be referred to as <code>&lt;IS_MIGRATION_TOOL_HOME&gt;</code>.</li> </ul> </li> <li> <p>Copy the <code>org.wso2.carbon.is.migration-x.x.x.jar</code> file in the <code>&lt;IS_MIGRATION_TOOL_HOME&gt;/dropins</code> folder into the <code>&lt;NEW_IS_HOME&gt;/repository/components/dropins</code> folder.</p> </li> <li> <p>Copy the migration-resources\u00a0folder to the <code>&lt;NEW_IS_HOME&gt;</code> root folder.</p> </li> </ol>"},{"location":"identity-server/migration-docs/is-6.0.0/migrate-to-600/#dry-run","title":"Dry run","text":"<p>Before doing the actual migration, it is recommended to do a dry run and analyze the generated report for any recommendations related to the migration. </p> <p>Dry-run capability of the migrator allows you to validate the system for the user store configurations and to generate a report regarding the migration compatibility. If there are any warnings in the migration report, it is recommended to contact WSO2 support to identify the best migration strategy.</p> <p>Follow the steps given below to perform the dry run.</p> <ol> <li> <p>Configure the migration report path using the <code>reportPath</code> value in the <code>&lt;IS_HOME&gt;/migration-resources/migration-config.yaml</code> file. </p> <p>Info</p> <p>Use one of the following methods when configuring the report path:  </p> <ul> <li>Create a text file. Provide the absolute path for that text file for all <code>reportPath</code> parameters. All results from the dry run will be appended to this text file.</li> <li>Create separate directories to store dry run reports of every migrator having the <code>reportPath</code> parameter. Provide the absolute paths of these directories for the <code>reportPath</code> of the relevant migrator. Dry run result of each migrator will be created in their specific report directories according to the timestamp.</li> </ul> <p>Important</p> <p>The <code>reportPath</code> should be added under a <code>parameters</code> attribute in the <code>migration-config.yaml</code> file. The <code>reportPath</code> attribute and, in some cases, the <code>parameters</code> attribute is commented out by default. Both these attributes should be uncommented and the report path value should be added as a string for all migrators which support dry run within the current IS version and the target IS version.</p> </li> <li> <p>Run the migration utility with the <code>dryRun</code> system property:</p> <ul> <li> <p>On Linux/MacOS</p> <pre><code>sh wso2server.sh -Dmigrate -Dcomponent=identity -DdryRun\n</code></pre> </li> <li> <p>On Windows</p> <pre><code>wso2server.bat -Dmigrate -Dcomponent=identity -DdryRun\n</code></pre> </li> </ul> </li> </ol> <p>Once this is executed, you can analyze the generated report that resides in the provided location.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/migrate-to-600/#set-up-the-databases","title":"Set up the databases","text":"<p>Note the following database requirements before running the migration tool.</p> <ul> <li> <p>If you are using PostgreSQL</p> <p>During the migration, the \"uuid-ossp\" extension is created in the database. To create this extension, the database user should have the 'Superuser' permission. If the user is not already a super user, assign the permission before starting the migration.</p> <pre><code>ALTER USER &lt;user&gt; WITH SUPERUSER;\n</code></pre> </li> <li> <p>If you are using DB2</p> <p>Verify that the indexes are in the TS32K tablespace. If not, move indexes to the TS32K tablespace. The index tablespace in the <code>IDN_OAUTH2_ACCESS_TOKEN</code>  and <code>IDN_OAUTH2_AUTHORIZATION_CODE</code> tables need to be\u00a0moved\u00a0to the existing TS32K tablespace in order to support newly added table indexes. </p> <p>The <code>SQLADM</code> or <code>DBADM</code> authority is required in order to invoke the <code>ADMIN_MOVE_TABLE</code> stored procedure. You must also have the appropriate object creation authorities, including authorities to issue the SELECT statement on the source table and to issue the INSERT statement on the target table.</p> <ul> <li> <p>Stored procedure</p> <p>Replace the <code>&lt;TABLE_SCHEMA_OF_IDN_OAUTH2_ACCESS_TOKEN_TABLE&gt;</code> and <code>&lt;TABLE_SCHEMA_OF_IDN_OAUTH2_AUTHORIZATION_CODE_TABLE&gt;</code> tags with the respective schema for the table. </p> <pre><code>CREATE BUFFERPOOL BP32K IMMEDIATE SIZE 250 AUTOMATIC PAGESIZE 32K;\n\nCREATE LARGE TABLESPACE TS32K PAGESIZE 32K MANAGED by AUTOMATIC STORAGE BUFFERPOOL BP32K;\n\nCALL SYSPROC.ADMIN_MOVE_TABLE(\n&lt;TABLE_SCHEMA_OF_IDN_OAUTH2_ACCESS_TOKEN_TABLE&gt;,\n'IDN_OAUTH2_ACCESS_TOKEN',\n(SELECT TBSPACE FROM SYSCAT.TABLES WHERE TABNAME = 'IDN_OAUTH2_ACCESS_TOKEN' AND TABSCHEMA = &lt;TABLE_SCHEMA_OF_IDN_OAUTH2_ACCESS_TOKEN_TABLE&gt;),\n'TS32K',\n(SELECT TBSPACE FROM SYSCAT.TABLES WHERE TABNAME = 'IDN_OAUTH2_ACCESS_TOKEN' AND TABSCHEMA = &lt;TABLE_SCHEMA_OF_IDN_OAUTH2_ACCESS_TOKEN_TABLE&gt;),\n'',\n'',\n'',\n'',\n'',\n'MOVE');\n\nCALL SYSPROC.ADMIN_MOVE_TABLE(\n&lt;TABLE_SCHEMA_OF_IDN_OAUTH2_AUTHORIZATION_CODE_TABLE&gt;,\n'IDN_OAUTH2_AUTHORIZATION_CODE',\n(SELECT TBSPACE FROM SYSCAT.TABLES WHERE TABNAME = 'IDN_OAUTH2_AUTHORIZATION_CODE' AND TABSCHEMA = &lt;TABLE_SCHEMA_OF_IDN_OAUTH2_AUTHORIZATION_CODE_TABLE&gt;),\n'TS32K',\n(SELECT TBSPACE FROM SYSCAT.TABLES WHERE TABNAME = 'IDN_OAUTH2_AUTHORIZATION_CODE' AND TABSCHEMA = &lt;TABLE_SCHEMA_OF_IDN_OAUTH2_AUTHORIZATION_CODE_TABLE&gt;),\n'',\n'',\n'',\n'',\n'',\n'MOVE');\n</code></pre> </li> </ul> <p>If you recieve an error due to missing <code>SYSTOOLSPACE</code> or <code>SYSTOOLSTMPSPACE</code> tablespaces, create those tablespaces manually using the following script prior to executing the stored procedure given above: </p> <pre><code>CREATE TABLESPACE SYSTOOLSPACE IN IBMCATGROUP\nMANAGED BY AUTOMATIC STORAGE USING STOGROUP IBMSTOGROUP\nEXTENTSIZE 4;\n\nCREATE USER TEMPORARY TABLESPACE SYSTOOLSTMPSPACE IN IBMCATGROUP\nMANAGED BY AUTOMATIC STORAGE USING STOGROUP IBMSTOGROUP\nEXTENTSIZE 4;\n</code></pre> <p>For more information, see SYSTOOLSPACE and SYSTOOLSTMPSPACE table spaces in the IBM documentation.</p> </li> </ul>"},{"location":"identity-server/migration-docs/is-6.0.0/migrate-to-600/#set-up-the-client","title":"Set up the client","text":"<p>To set up the migration client for execution, apply the following configurations to the <code>&lt;NEW_IS_HOME&gt;/migration-resources/migration-config.yaml</code> file:</p> <p>Note</p> <p>The <code>currentVersion</code> is the current WSO2 Identity Server version that you are using.</p> <pre><code>migrationEnable: \"true\"\n\ncurrentVersion: \"5.11.0\"\n\nmigrateVersion: \"6.0.0\"\n</code></pre> <ul> <li> <p>If you have multiple tenants and multiple user stores and you only need to migrate a few of them, use the configurations given below.</p> Property Name Description migrateAll Migrate all the tenants and all the user store domains in it. This is set to <code>true</code> by default. </li> <li> <p>If you are only migrating a few tenants, apply the configurations given below. </p> <p>Info</p> <p>Note that <code>Tenant-param</code> is a place holder to represent a unique tenant, e.g., tenant1.</p> <pre><code>-\nname: \"UserIDMigrator\"\norder: 7\nparameters:\n    &lt;tenant-param&gt;:\n</code></pre> <p>Given below are the parameters you can use in the above configuration:</p> Property Name Description tenantDomain (Mandatory) Domain name of the tenant. increment (Optional) Number of users to be updated in each iteration. startingPoint (Optional) This denotes from where the migration should start (Offset). This is useful if the migration stopped in the middle and needs to restart. scimEnabled (Optional) Specifies whether SCIM is enabled for user stores in this tenant. migratingDomains (Optional) List of comma-separated domain names that should be migrated to this domain. forceUpdateUserId (Optional) Marks whether user IDs should be updated if there is an existing ID. </li> <li> <p>If the user store is an LDAP and SCIM is enabled for that userstore, migrating that userstore is not required. As SCIM creates a user ID for the users in that user store, the SCIM ID can be used as the unique user ID. To do that, change <code>user_id_attribute</code> to the value of the SCIM ID, in the <code>&lt;IS_HOME&gt;/repository/conf/deployment.toml</code> file.</p> </li> </ul>"},{"location":"identity-server/migration-docs/is-6.0.0/migrate-to-600/#run-the-client","title":"Run the client","text":"<p>Now, let's run the migration client to upgrade the databases.</p> <ol> <li> <p>Start the WSO2 Identity Server 6.0.0 with the following command to execute the migration client.</p> <ul> <li> <p>Linux/Unix:</p> <pre><code>sh wso2server.sh -Dmigrate -Dcomponent=identity\n</code></pre> </li> <li> <p>Windows:</p> <pre><code>wso2server.bat -Dmigrate -Dcomponent=identity\n</code></pre> </li> </ul> </li> <li> <p>Restart the server once the migration client execution is complete.</p> </li> </ol>"},{"location":"identity-server/migration-docs/is-6.0.0/migrate-to-600/#step-3-optional-migrate-secondary-user-stores","title":"Step 3: (Optional) Migrate secondary user stores","text":"<p>These steps should be carried out for the old database before the migration. A backup of the UM database should be taken and database triggers should be set to update the backup database based on the updates of the live database. After performing the following steps, the backup database should be migrated to the next version:</p> <ol> <li> <p>If you have JDBC secondary user stores with SCIM disabled, execute the following queries on the UM database: </p> <p>Info</p> <p>This adds a <code>UM_USER_ID</code> column to the <code>UM_USER</code> table with a random <code>UUID</code> as the default value for <code>UM_USER_ID</code>.</p> <ul> <li>Postgresql</li> </ul> <pre><code>/* User should have the Superuser permission */\nCREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";\n\nALTER TABLE UM_USER\n    ADD COLUMN UM_USER_ID CHAR(36) DEFAULT uuid_generate_v4(),\n    ADD CONSTRAINT UM_USER_UUID_CONSTRAINT UNIQUE(UM_USER_ID);\n</code></pre> <ul> <li>Oracle</li> </ul> <pre><code>ALTER TABLE UM_USER\n    ADD (\n        UM_USER_ID CHAR(36) DEFAULT LOWER(regexp_replace(rawtohex(sys_guid()), '([A-F0-9]{8})([A-F0-9]{4})([A-F0-9]{4})([A-F0-9]{4})([A-F0-9]{12})', '\\1-\\2-\\3-\\4-\\5')))\n/\n\nALTER TABLE UM_USER ADD UNIQUE (UM_USER_ID)\n/\n</code></pre> <ul> <li>Oracle_rac</li> </ul> <pre><code>ALTER TABLE UM_USER\n    ADD (\n        UM_USER_ID CHAR(36) DEFAULT LOWER(regexp_replace(rawtohex(sys_guid()), '([A-F0-9]{8})([A-F0-9]{4})([A-F0-9]{4})([A-F0-9]{4})([A-F0-9]{12})', '\\1-\\2-\\3-\\4-\\5')))\n/\n\nALTER TABLE UM_USER ADD UNIQUE (UM_USER_ID)\n/\n</code></pre> <ul> <li> <p>MySQL   <pre><code>ALTER TABLE UM_USER ADD COLUMN UM_USER_ID CHAR(36) NOT NULL DEFAULT 'NONE';\nUPDATE UM_USER SET UM_USER_ID = UUID();\nALTER TABLE UM_USER ADD UNIQUE(UM_USER_ID, UM_TENANT_ID);\n</code></pre></p> </li> <li> <p>MySQL_cluster</p> </li> </ul> <pre><code>ALTER TABLE UM_USER ADD COLUMN UM_USER_ID CHAR(36) NOT NULL DEFAULT 'NONE';\nUPDATE UM_USER SET UM_USER_ID = UUID();\nALTER TABLE UM_USER ADD UNIQUE(UM_USER_ID, UM_TENANT_ID);\n</code></pre> <ul> <li>MS SQL</li> </ul> <pre><code>ALTER TABLE UM_USER\n    ADD UM_USER_ID CHAR(36) DEFAULT LOWER(NEWID()) NOT NULL,\n    UNIQUE(UM_USER_ID);\n</code></pre> <ul> <li> <p>H2   <pre><code>ALTER TABLE UM_USER ADD COLUMN (UM_USER_ID CHAR(36) DEFAULT RANDOM_UUID());\nALTER TABLE UM_USER ADD UNIQUE (UM_USER_ID);\n</code></pre></p> </li> <li> <p>DB2   <pre><code>CREATE OR REPLACE FUNCTION NEWUUID()\nRETURNS CHAR(36)\nBEGIN\n    DECLARE @UUID CHAR(32);\n    SET @UUID=LOWER(HEX(RAND()*255) || HEX(RAND()*255));\n    RETURN LEFT(@UUID,8)||'-'||\n        SUBSTR(@UUID,9,4)||'-'||\n        SUBSTR(@UUID,13,4)||'-'||\n        SUBSTR(@UUID,17,4)||'-'||\n        RIGHT(@UUID,12);\nEND\n/\n\nALTER TABLE UM_USER ADD COLUMN UM_USER_ID CHAR(36) NOT NULL DEFAULT 'NONE'\n/\nCALL SYSPROC.ADMIN_CMD('REORG TABLE UM_USER')\n/\n\nUPDATE UM_USER SET UM_USER_ID = NEWUUID()\n/\nCALL SYSPROC.ADMIN_CMD('REORG TABLE UM_USER')\n/\n</code></pre></p> </li> </ul> </li> <li> <p>If you have JDBC secondary user stores with SCIM enabled, execute the following queries on the UM database.</p> <ul> <li>PostgreSQL</li> </ul> <pre><code>SELECT DISTINCT t.ATTRIBUTE_NAME\n    FROM IDN_CLAIM_MAPPED_ATTRIBUTE AS t\n    WHERE t.LOCAL_CLAIM_ID IN (SELECT t2.MAPPED_LOCAL_CLAIM_ID\n    FROM IDN_CLAIM_MAPPING AS t2\n    JOIN IDN_CLAIM AS t1\n    ON t1.ID = t2.EXT_CLAIM_ID\n    WHERE t1.CLAIM_URI = 'urn:ietf:params:scim:schemas:core:2.0:id');\n</code></pre> <ul> <li>Oracle</li> </ul> <pre><code>select DISTINCT t.ATTRIBUTE_NAME\n    FROM IDN_CLAIM_MAPPED_ATTRIBUTE t\n      WHERE t.LOCAL_CLAIM_ID IN ( SELECT t2.MAPPED_LOCAL_CLAIM_ID\n      FROM IDN_CLAIM_MAPPING t2\n      JOIN IDN_CLAIM t1\n      ON t1.ID = t2.EXT_CLAIM_ID\n      WHERE t1.CLAIM_URI = 'urn:ietf:params:scim:schemas:core:2.0:id'   \n)\n/\n</code></pre> <ul> <li>MySQL</li> </ul> <pre><code>SELECT DISTINCT t.ATTRIBUTE_NAME \n  FROM IDN_CLAIM_MAPPED_ATTRIBUTE t \n  WHERE t.LOCAL_CLAIM_ID IN(\n  SELECT t2.MAPPED_LOCAL_CLAIM_ID\n  FROM IDN_CLAIM_MAPPING t2 \n  JOIN IDN_CLAIM t1\n  ON t1.ID = t2.EXT_CLAIM_ID \n  WHERE t1.CLAIM_URI ='urn:ietf:params:scim:schemas:core:2.0:id' \n) ;\n</code></pre> <ul> <li>MS SQL</li> </ul> <pre><code>SELECT DISTINCT t.ATTRIBUTE_NAME \n    FROM IDN_CLAIM_MAPPED_ATTRIBUTE AS t\n    WHERE t.LOCAL_CLAIM_ID IN ( SELECT t2.MAPPED_LOCAL_CLAIM_ID\n    FROM IDN_CLAIM_MAPPING AS t2\n    JOIN IDN_CLAIM AS t1\n    ON t1.ID = t2.EXT_CLAIM_ID\n    WHERE t1.CLAIM_URI = 'urn:ietf:params:scim:schemas:core:2.0:id'\n);\n</code></pre> </li> <li> <p>Based on the result of the above query, follow the relevant instructions given below.  </p> <ul> <li> <p>If the result of the above query is <code>scimId</code>, execute the following queries to update <code>UM_USER_ID</code> of <code>UM_USER</code> with a SCIM Id based on the mapped attribute <code>scimId</code>:</p> <p>Info</p> <p>If the result of the above query is <code>scimId</code>, it means that the default mapped attribute (scimId) of <code>http://wso2.org/claims/userid</code> or the default local claim (<code>http://wso2.org/claims/userid</code>) mapped to the <code>urn:ietf:params:scim:schemas:core:2.0:id</code> claim is not updated in your WSO2 IS.  </p> <ul> <li>PostgreSQL</li> </ul> <pre><code>CREATE OR REPLACE FUNCTION update_um_user_id()    returns int \nLANGUAGE plpgsql\nAS $$\nDECLARE \ncount_rows int;\ncur_um_attr cursor for select T2.um_attr_value, T1.um_id\n          from um_user_attribute  T2\n            join um_user T1\n            on T1.um_Id = T2.um_user_id \n            where T2.um_attr_name ='scimId';\n\nrec_um_attr RECORD;       \nBEGIN\n  count_rows = 0; \n  open cur_um_attr;\n    LOOP\n          fetch cur_um_attr into rec_um_attr;\n      exit when not found;\n\n        update um_user\n        set um_user_id=rec_um_attr.um_attr_value\n        where um_id = rec_um_attr.um_id;  \n\n    count_rows = count_rows + 1;\n    END LOOP;         \n  close cur_um_attr;\nreturn count_rows;        \nEND;\n$$;\nselect update_um_user_id();\nCREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";\nupdate um_user set um_user_id=uuid_generate_v4() where um_user_id = 'N';\n</code></pre> <ul> <li>Oracle</li> </ul> <pre><code>DECLARE\nv_um_attr_value varchar2(100);\nv_um_id number;\nCURSOR cur_um_attr IS\n      select T2.um_attr_value, T1.um_id\n        from um_user_attribute  T2\n          join um_user T1\n          on T1.um_Id = T2.um_user_id \n          where T2.um_attr_name ='scimId';    \nBEGIN \n\n  OPEN cur_um_attr;\n  LOOP\n    FETCH cur_um_attr INTO v_um_attr_value, v_um_id;\n      IF cur_um_attr%NOTFOUND THEN\n              EXIT;\n            END If;\n\n          update um_user\n      set um_user_id = v_um_attr_value\n      where um_id =  v_um_id;     \n\n  END LOOP;\n  CLOSE cur_um_attr; \n\nEND;\n/\n</code></pre> <ul> <li>My SQL</li> </ul> <pre><code>ALTER TABLE UM_USER ADD COLUMN UM_USER_ID CHAR(36) NOT NULL DEFAULT 'NONE';\nALTER TABLE UM_USER ADD UNIQUE(UM_USER_ID, UM_TENANT_ID);\nDELIMITER $$\nCREATE FUNCTION update_um_user_id() RETURNS int\nDETERMINISTIC \nBEGIN\n  DECLARE count_rows int;\n  DECLARE um_usr_attr_value varchar(100);\n  DECLARE um_id int;\n  DECLARE done INT DEFAULT FALSE;\n  DECLARE cur_um_attr CURSOR FOR \nSELECT\n  T2.UM_ATTR_VALUE,\n  T1.UM_ID \nFROM\n  UM_USER_ATTRIBUTE T2 \n  JOIN\n      UM_USER T1 \n      ON T1.UM_ID = T2.UM_USER_ID \nWHERE\n  T2.UM_ATTR_NAME = 'scimId';\nDECLARE CONTINUE HANDLER FOR NOT FOUND \nSET\n  done = TRUE;\nSET\n  count_rows = 0;\nOPEN cur_um_attr;\nread_loop: loop FETCH cur_um_attr INTO um_usr_attr_value,\num_id;\nIF done \nTHEN\n  LEAVE read_loop;\nEND\nIF;\nUPDATE\n  UM_USER \nSET\n  UM_USER_ID = um_usr_attr_value \nWHERE\n  UM_ID = um_id;\nSET\n  count_rows = count_rows + 1;\nEND\nloop;\nCLOSE cur_um_attr;\nRETURN count_rows;\nEND\n$$ DELIMITER ;\nSELECT\n  update_um_user_id();\nUPDATE\n  UM_USER \nSET\n  UM_USER_ID = UUID() \nWHERE\n  UM_USER_ID IS NULL;\n</code></pre> <ul> <li>MS SQL</li> </ul> <pre><code>IF NOT EXISTS(SELECT * FROM sys.columns WHERE Name = 'UM_USER_ID' \n          AND object_id = OBJECT_ID('UM_USER'))\nBEGIN\nALTER TABLE UM_USER ADD UM_USER_ID CHAR(36) DEFAULT 'N' \nEND\nBEGIN\n  DECLARE @count_rows int\n  DECLARE @um_attr_value varchar(100)\n  DECLARE @um_id int\n\n    DECLARE cur_um_attr CURSOR LOCAL FOR select T2.UM_ATTR_VALUE, T1.UM_ID\n          from UM_USER_ATTRIBUTE T2\n            join UM_USER T1\n            on T1.UM_ID = T2.UM_USER_ID \n            where T2.um_attr_name ='scimId'       \n\n  SET @count_rows = 0\n\n  OPEN cur_um_attr    \n  -- loop through a cursor\n  FETCH NEXT FROM cur_um_attr INTO @um_attr_value, @um_id\n    WHILE @@FETCH_STATUS = 0\n        BEGIN     \n        update UM_USER \n        set UM_USER_ID = @um_attr_value\n        where UM_ID =  @um_id \n\n      SET @count_rows = @count_rows + 1\n      FETCH NEXT FROM cur_um_attr INTO @um_attr_value, @um_id\n    END   \n\n  CLOSE cur_um_attr\nEND;\n\nupdate UM_USER set UM_USER_ID =LOWER(NEWID())  where UM_USER_ID='N' ;\n</code></pre> </li> <li> <p>If the result of the above query is something different from <code>scimId</code>, execute the following queries to update <code>UM_USER_ID</code> of <code>UM_USER</code> with a SCIM Id based on the updated mapped attribute. </p> <p>Info</p> <p>This means that the local claim mapped to the <code>urn:ietf:params:scim:schemas:core:2.0:id</code> claim is different from <code>http://wso2.org/claims/userid</code> or the mapped attribute for the local claim <code>http://wso2.org/claims/userid</code> is different from <code>scimId</code>.</p> <ul> <li>PostgreSQL</li> </ul> <pre><code>CREATE OR REPLACE FUNCTION update_um_user_id()    returns int \nLANGUAGE plpgsql\nAS $$\nDECLARE \ncount_rows int;\ncur_um_attr CURSOR FOR SELECT T2.um_attr_value, T1.um_id \n  FROM   um_user_attribute T2 \n  JOIN   um_user T1 \n  ON     T1.um_id = T2.um_user_id \n  WHERE  T2.um_attr_name IN \n        ( \n                SELECT T.attribute_name \n                FROM   idn_claim_mapped_attribute AS T \n                WHERE  T.local_claim_id IN \n                      (      SELECT T3.mapped_local_claim_id \n                              FROM   idn_claim_mapping AS T3 \n                              JOIN   idn_claim         AS T4 \n                              ON     T4.id = T3.ext_claim_id \n                              WHERE  T4.claim_uri = 'urn:ietf:params:scim:schemas:core:2.0:id') );\n\nrec_um_attr RECORD;       \nBEGIN\n  count_rows = 0; \n  open cur_um_attr;\n    LOOP\n          fetch cur_um_attr into rec_um_attr;\n      exit when not found;\n\n        update um_user\n        set um_user_id=rec_um_attr.um_attr_value\n        where um_id = rec_um_attr.um_id;  \n\n    count_rows = count_rows + 1;\n    END LOOP;         \n  close cur_um_attr;\nreturn count_rows;        \nEND;\n$$;\nselect update_um_user_id();\nCREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";\nupdate um_user set um_user_id=uuid_generate_v4() where um_user_id = 'N';\n</code></pre> <ul> <li>Oracle</li> </ul> <pre><code>DECLARE\nv_um_attr_value varchar2(100);\nv_um_id number;\nCURSOR cur_um_attr IS\n        select DISTINCT t.ATTRIBUTE_NAME\n        FROM IDN_CLAIM_MAPPED_ATTRIBUTE t\n          WHERE t.LOCAL_CLAIM_ID IN ( SELECT t2.MAPPED_LOCAL_CLAIM_ID\n          FROM IDN_CLAIM_MAPPING t2\n          JOIN IDN_CLAIM t1\n          ON t1.ID = t2.EXT_CLAIM_ID\n          WHERE t1.CLAIM_URI = 'urn:ietf:params:scim:schemas:core:2.0:id'   \n)\n\nBEGIN \n\n  OPEN cur_um_attr;\n  LOOP\n    FETCH cur_um_attr INTO v_um_attr_value, v_um_id;\n      IF cur_um_attr%NOTFOUND THEN\n              EXIT;\n            END If;\n\n          update um_user\n      set um_user_id = v_um_attr_value\n      where um_id =  v_um_id;     \n\n  END LOOP;\n  CLOSE cur_um_attr; \n\nEND;\n/\n</code></pre> <ul> <li>My SQL</li> </ul> <pre><code>ALTER TABLE UM_USER ADD COLUMN UM_USER_ID CHAR(36) NOT NULL DEFAULT 'NONE';\nALTER TABLE UM_USER ADD UNIQUE(UM_USER_ID, UM_TENANT_ID);\nDELIMITER $$ CREATE FUNCTION update_um_user_id() RETURNS int DETERMINISTIC \nBEGIN\n  DECLARE count_rows int;\n  DECLARE um_usr_attr_value varchar(100);\n  DECLARE um_id int;\n  DECLARE done INT DEFAULT FALSE;\n  DECLARE cur_um_attr CURSOR FOR \nSELECT\n  T2.UM_ATTR_VALUE,\n  T1.UM_ID \nFROM\n  UM_USER_ATTRIBUTE T2 \n  join\n      UM_USER T1 \n      on T1.UM_ID = T2.UM_USER_ID \nWHERE\n  T2.UM_ATTR_NAME in \n  (\n      SELECT\n        T.ATTRIBUTE_NAME \n      FROM\n        IDN_CLAIM_MAPPED_ATTRIBUTE as T \n      WHERE\n        T.LOCAL_CLAIM_ID in \n        (\n            SELECT\n              T3.MAPPED_LOCAL_CLAIM_ID \n            FROM\n              IDN_CLAIM_MAPPING as T3 \n              JOIN\n                  IDN_CLAIM as T4 \n                  on T4.ID = T3.EXT_CLAIM_ID \n            WHERE\n              T4.CLAIM_URI = 'urn:ietf:params:scim:schemas:core:2.0:id' \n        )\n  )\n;\nDECLARE CONTINUE HANDLER FOR NOT FOUND \nSET\n  done = TRUE;\nSET\n  count_rows = 0;\nOPEN cur_um_attr;\nread_loop: loop FETCH cur_um_attr INTO um_usr_attr_value,\num_id;\nIF done \nTHEN\n  LEAVE read_loop;\nEND\nIF;\nUPDATE\n  UM_USER \nSET\n  UM_USER_ID = um_usr_attr_value \nWHERE\n  UM_ID = um_id;\nSET\n  count_rows = count_rows + 1;\nEND\nloop;\nCLOSE cur_um_attr;\nRETURN count_rows;\nEND\n$$ DELIMITER ;\nSELECT\n  update_um_user_id();\nUPDATE\n  UM_USER \nSET\n  UM_USER_ID = UUID() \nWHERE\n  UM_USER_ID IS NULL;\n</code></pre> <ul> <li>MS SQL</li> </ul> <pre><code>IF NOT EXISTS(SELECT * FROM sys.columns WHERE Name = 'UM_USER_ID' \n          AND object_id = OBJECT_ID('UM_USER'))\nBEGIN\nALTER TABLE UM_USER ADD UM_USER_ID CHAR(36) DEFAULT 'N' \nEND\nBEGIN\n  DECLARE @count_rows int\n  DECLARE @um_attr_value varchar(100)\n  DECLARE @um_id int\n\n    DECLARE cur_um_attr CURSOR LOCAL FOR SELECT T2.um_attr_value, T1.um_id \n      FROM um_user_attribute T2 \n      JOIN um_user T1 \n      ON T1.um_id = T2.um_user_id \n      WHERE  T2.um_attr_name \n          IN (SELECT T.attribute_name \n                          FROM   idn_claim_mapped_attribute AS T \n                          WHERE  T.local_claim_id IN \n                                  (SELECT T3.mapped_local_claim_id \n                                  FROM   idn_claim_mapping AS T3 \n                                  JOIN idn_claim AS T4 \n                                  ON T4.id = T3.ext_claim_id \n                                  WHERE T4.claim_uri = 'urn:ietf:params:scim:schemas:core:2.0:id'))           \n\n  SET @count_rows = 0\n        OPEN cur_um_attr  \n  -- loop through a cursor\n  FETCH NEXT FROM cur_um_attr INTO @um_attr_value, @um_id\n    WHILE @@FETCH_STATUS = 0\n        BEGIN     \n        UPDATE UM_USER \n    SET UM_USER_ID = @um_attr_value\n    where UM_ID =  @um_id \n\n    SET @count_rows = @count_rows + 1\n    FETCH NEXT FROM cur_um_attr INTO @um_attr_value, @um_id\n      END     \n\n  CLOSE cur_um_attr\nEND;\n\nUPDATE UM_USER SET UM_USER_ID =LOWER(NEWID())  WHERE UM_USER_ID='N' ;\n</code></pre> </li> </ul> </li> </ol>"},{"location":"identity-server/migration-docs/is-6.0.0/migrate-to-600/#step-4-verify-the-migration","title":"Step 4: Verify the migration","text":"<p>After the migration is complete, proceed to the following verification steps:</p> <ul> <li>Monitor the system health (CPU, memory usage etc).</li> <li>Monitor the WSO2 logs to see if there are errors logged in the log files.</li> <li>Run functional tests against the migrated deployment to verify that all the functionalities are working as expected.</li> </ul> <p>Note</p> <ul> <li>If you see any problems in the migrated system, revert the traffic to the previous setup and investigate the problem.</li> <li>If the id token validation for the Console and My Account applications are failing, see the section on V**alidation of issuer in .well-known endpoint URL** in the What Has Changed in IS 6.0.0 document.</li> </ul>"},{"location":"identity-server/migration-docs/is-6.0.0/migrate-to-600/#step-5-after-migration","title":"Step 5: After migration","text":"<p>If you are using the data cleanup scripts to perform data purging, use the latest cleanup scripts or cleanup scripts specific to the migrated version. You can find the latest cleanup scripts from here.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/migration-process/","title":"Migration Process","text":"<p>This section contains the complete migration process related to WSO2 Identity Server. Go through the guidelines given below before attempting to migrate the production environment.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/migration-process/#recommendations","title":"Recommendations","text":"<ol> <li> <p>If you already have a WSO2 subscription, reach out to our support team through  your support account.</p> </li> <li> <p>Always migrate to the latest version      since latest fixes and new features are available in the newest version. If you have a particular      requirement to migrate to an intermediate version, contact      WSO2 Support.</p> </li> </ol> <p>Note</p> <p>Migrating the production environment requires additional hardware/VM resources since both the old environment and the new environment will be running until all the traffic is routed to the new environment.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/migration-process/#do-you-have-a-custom-requirement","title":"Do you have a custom requirement?","text":"<p>If your customizations are already available in the latest version, you can remove the  customization after migration. You can contact WSO2 Support for assistance. However, if a custom requirement is not available in the latest version, follow the steps given below to migrate the customizations.</p> <ul> <li>First update the dependency version of the dependant WSO2 components and re-build the customized component.</li> <li>As a practice, WSO2 does not make API changes in minor releases of the dependency jars. However, if there are API changes, update the custom code and re-build.</li> <li>For more information about migrating customizations, see the document on Migrating to WSO2 IS 6.0.0.</li> </ul>"},{"location":"identity-server/migration-docs/is-6.0.0/migration-process/#step-by-step-instructions","title":"Step-by-step instructions","text":"<p>Follow the steps given below once you have followed the steps above to migrate customizations OR if you do not have any custom requirements.</p> <p>Recommendation</p> <p>When you follow the above steps, you can get a rough estimate of the time for the final production update and you can allocate time slots as per the above analysis. WSO2 recommends performing the migration while the system is under minimum traffic.</p> <ol> <li> <p>List down the functional and nonfunctional use cases in your deployment and create test cases for them. </p> <p>Important</p> <p>This step is crucial to verify that the migrated environment works as expected.     </p> </li> <li> <p>Make sure that all the properties in the <code>&lt;IS_HOME&gt;/repository/conf/deployment.toml</code> file such as the database configurations are set to the correct values based on the requirement.</p> </li> <li> <p>Identify the configuration migrations required for the new setup. For more information, see the document on What Has Changed in IS 6.0.0.</p> </li> <li> <p>Prepare a test setup of the migrating version with customizations and necessary config changes, and  test your functional and nonfunctional requirements.</p> </li> <li> <p>Before starting the migration, run the token and session  cleanup scripts  in the databases of the environment if you are not doing regular cleanups.</p> <p>Info</p> <p>Clean-up scripts can be found in the relevant db folder in <code>&lt;IS-HOME&gt;/dbscripts/identity/stored-procedures</code></p> </li> <li> <p>Start the migration from the lowest environment such as dev and continue up to the highest before the production  such as pre-prod. </p> </li> <li> <p>Run the test cases in the migrated environments to confirm that your functional and nonfunctional  requirements are met in the migrated environment.</p> </li> <li> <p>Prior to the production migration, run a pilot migration on your pre-prod environment. It would be  ideal if the pre-prod environment is similar to the production environment.</p> <ul> <li>If possible, restore a database dump of the production environment to the pre-prod environment and  perform the pilot migration.</li> <li>If the production database dump cannot be used, at least ensure that you have a sufficient amount  of data in the database to mimic the production environment. </li> </ul> </li> <li> <p>Once you are satisfied with the above steps, proceed with production migration. </p> </li> <li> <p>After the migration is complete, verify it using the following steps:</p> <ul> <li>Monitor the system health (CPU, memory usage etc).</li> <li>Monitor the WSO2 logs for errors.</li> </ul> </li> </ol> <p>Note</p> <p>If you see any problems in the migrated system, revert the traffic back to the previous setup and investigate the problem.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/prepare-for-migration/","title":"Preparing for migration","text":"<p>Before you start the migration, see the instructions given here.</p> <p>Note</p> <p>In this section, <code>&lt;OLD_IS_HOME&gt;</code> is the directory that current Identity Server resides in, and <code>&lt;NEW_IS_HOME&gt;</code> is the directory that WSO2 Identity Server 6.0.0 resides in.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/prepare-for-migration/#prerequisites","title":"Prerequisites","text":"<ol> <li> <p>Review what has been changed in this release. For a detailed list of changes\u00a0from 5.11.0 to 6.0.0, see the document on What Has Changed in WSO2 IS 6.0.0.</p> </li> <li> <p>Before you migrate, refer to the Migration Process document to get an understanding on the migration process.</p> </li> <li> <p>You can use the Update Management Tool (UMT) to get any fixes or latest updates for this release.</p> </li> <li> <p>Take a backup of the existing database used by the current WSO2 Identity Server. This backup is necessary in case the migration causes any issues in the existing database.</p> </li> <li> <p>Before proceeding with the migration, change the following property to <code>false</code> in the <code>&lt;NEW_IS_HOME&gt;/repository/conf/deployment.toml</code> file.</p> <pre><code>[super_admin]\ncreate_admin_account = false </code></pre> </li> </ol> <p>Note</p> <ul> <li>If you are migrating from a version below IS 5.9.0 with a JDBC primary userstore configured, use the following configuration to disable the use of Unique ID Userstore Managers during the migration.</li> </ul> <pre><code>[user_store]\ntype = \"database\"\n</code></pre> <p>As the former (non-unique ID) userstore managers are no longer supported, this configuration must be changed to the Unique ID Userstore Manager after the migration is complete to ensure proper functionality in IS 6.0.0 by using the configuration below.</p> <pre><code>[user_store]\ntype = \"database_unique_id\"\n</code></pre> <ul> <li>If you are migrating from a version below IS 5.10.0, make sure to disable the Groups and Roles Separation feature during the migration.</li> </ul> <p><pre><code>[authorization_manager.properties]\nGroupAndRoleSeparationEnabled = false\n</code></pre>   After the migration is complete, change this configuration to enable the feature.</p> <ul> <li>It is recommended to run the token cleanup scripts before migration to clean the expired, inactive, and revoked tokens/codes. This reduces the time taken for migration.</li> </ul>"},{"location":"identity-server/migration-docs/is-6.0.0/prepare-for-migration/#prepare-for-groups-and-roles-separation","title":"Prepare for Groups and Roles separation","text":"<p>With WSO2 Identity Server 5.11.0, groups and roles are separated. For more information, see the document on What Has Changed in 5.11.0. </p> <p>However, you may or may not have opted not to use the new groups and roles feature in your WSO2 IS 5.11.0 deployment. When you migrate from WSO2 IS 5.11.0 to WSO2 IS 6.0.0, you can choose whether to continue with the old functionality or to switch to the new groups and roles functionality.</p> <p>Backward compatibility</p> <p>Groups and roles separation improvements brings enhanced clarity, and improved performance to the product. All of these improvements and behavioural changes are introduced in a way that existing deployments can adapt to the new state as easily as possible.</p> <p>However, it\u2019s inevitable to bring all the goodness with zero compromises. Therefore, if you opt to use this, some applications, customizations, and integration flows might need some changes to fully adapt to these improvements. Alternatively, you can choose to disable this functionality in WSO2 IS 6.0.0 and continue to use the old way of working.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/prepare-for-migration/#overview","title":"Overview","text":"<p>Following changes have been made to the product claims.</p> Claim Change Description wso2.role Modified <ul> <li>Removed supported by default.</li> <li>Updated display name to Roles and groups.</li> <li>Updated description to Include both userstore groups and internal roles.</li> </ul> wso2.roles New <ul> <li>Display name: Roles.</li> <li>AttributionID Roles.</li> <li>Description Roles.</li> </ul> wso2.roles New <ul> <li>Display name: Roles.</li> <li>AttributionID Roles.</li> <li>Description Roles.</li> <li>Supported by default configured as <code>true</code>.</li> <li>read-only configured as <code>true</code>.</li> </ul> wso2.groups Modified <ul> <li>Supported by default configured as <code>true</code>.</li> <li>read-only configured as <code>true</code>.</li> </ul> OIDC group Modified              Mapped local claim to the <code>wso2.groups</code> claim.          OIDC roles New              Mapped to the <code>wso2.roles</code> local claim.          SCIM2 roles.default Modified              Mapped to the <code>wso2.roles</code> local claim.          <p>Please note that following abbreviations are used in the sections below.</p> <ul> <li>wso2.role claim = http://wso2.org/claims/role</li> <li>wso2.roles claim = http://wso2.org/claims/roles</li> <li>wso2.groups claim = http://wso2.org/claims/groups</li> </ul>"},{"location":"identity-server/migration-docs/is-6.0.0/prepare-for-migration/#enable-groups-and-roles-separation","title":"Enable Groups and Roles separation","text":"<p>If you want to use the new groups and roles functionality in WSO2 IS 6.0.0, be mindful of the following recommendations</p> <p>Note</p> <ul> <li>All claim configurations are already configured OOTB in the fresh pack, and will be done via the migration client for migrating deployments. No need to configure these manually.</li> <li>Any custom external claim mapped to the wso2.role claim should be mapped to either wso2.roles or wso2.groups claim as per the requirement of the custom use case.</li> <li>Our recommendation is to fix any consuming client to become compatible with these changes. But if somehow the above configs need to be reverted (possibly in a migrated deployment), it can be done via the Identity Server Claim Management REST APIs.</li> </ul> <ul> <li> <p>Utilizing carbon kernel level support</p> <p>The following abstract userstore manager APIs: <code>getUserClaimValues()</code>, <code>getUsersClaimValues()</code>,  <code>getUserClaimValuesWithID()</code>, <code>getUsersClaimValuesWithID()</code> now support both <code>wso2.roles</code> and <code>wso2.groups</code> claims properly. We recommend modifying custom extensions to request wso2.roles or wso2.groups via above APIs rather depending on wso2.role claim.</p> </li> <li> <p>Service provider role mapping and identity provider role mapping restrictions</p> <p>We recommend removing existing SP and IdP role mappings which use groups, and utilize roles to achieve the same functionality.</p> </li> <li> <p>OIDC group claim return groups</p> <p>OIDC group claim does not return internal roles anymore. We recommend modifying applications and custom extensions to utilize this behaviour. If roles are required, utilize the OIDC roles claim.</p> </li> <li> <p>Obtaining roles via the SAML assertion</p> <p>We recommend applications and custom extensions to switch from wso2.role to the wso2.roles claim in the SAML assertion.</p> </li> <li> <p>SCIM2 roles.default claim returns roles and groups claim return groups</p> <p>Previously, the <code>roles.default</code> claim in SCIM2 returned both groups and roles as it was mapped to the wso2.roles claim. Going forward, it is mapped to the <code>wso2.roles</code> claim, where only roles are returned. In order to get groups, <code>urn:ietf:params:scim:schemas:core:2.0:User:groups</code> claim should be used instead since with this improvement it is returning groups as intended.</p> </li> <li> <p>Groups and roles in SCIM2 user response</p> <p>Previously users and roles in the SCIM2 user response returned as a single comma-separated entity. However, that has been changed, and now they return as separate complex entities. We recommend modifying clients that consume this response.</p> </li> </ul>"},{"location":"identity-server/migration-docs/is-6.0.0/prepare-for-migration/#disable-groups-and-roles-separation","title":"Disable Groups and Roles separation","text":"<p>If it's mandatory to preserve previous behaviour and avoid enabling the improvements mentioned above, follow the steps given below.</p> <ol> <li> <p>Add the following configuration (enabled by default) to the <code>&lt;IS-Home&gt;/repository/conf/deployment.toml</code> file.</p> <pre><code>[authorization_manager.properties]\ngroup_and_role_separation_improvements_enabled = false\n</code></pre> <p>Note</p> <p>But this configuration option only ensures that the code-level logic is reverted to the previous behaviour. If the improvements are already applied (fresh IS server pack and a migrated pack with group-role migration step completed), these claim configuration changes needs to be reverted manually in both tenants and super-tenant prior setting the above config to false. To do this, please refer to the claim changes introduced with this effort and revert them manually or via a script.</p> </li> <li> <p>To stop claim data migration related to the groups vs roles improvement during the migration, open the <code>claim-config.xml</code> file in the <code>&lt;IS-HOME&gt;/migration-resources/6.0.0/data/6/</code> directory and remove the following claims that are related to groups and roles.</p> <ul> <li> <p>In <code>http://wso2.org/claims</code> dialect:</p> <pre><code>&lt;Claim&gt;\n    &lt;ClaimURI&gt;http://wso2.org/claims/roles&lt;/ClaimURI&gt;\n    &lt;DisplayName&gt;Roles&lt;/DisplayName&gt;\n    &lt;AttributeID&gt;roles&lt;/AttributeID&gt;\n    &lt;Description&gt;Roles&lt;/Description&gt;\n    &lt;SupportedByDefault/&gt;\n    &lt;ReadOnly /&gt;\n&lt;/Claim&gt;\n&lt;Claim&gt;\n    &lt;ClaimURI&gt;http://wso2.org/claims/groups&lt;/ClaimURI&gt;\n    &lt;DisplayName&gt;Groups&lt;/DisplayName&gt;\n    &lt;AttributeID&gt;groups&lt;/AttributeID&gt;\n    &lt;Description&gt;Groups&lt;/Description&gt;\n    &lt;SupportedByDefault /&gt;\n    &lt;ReadOnly /&gt;\n&lt;/Claim&gt;\n&lt;Claim&gt;\n    &lt;ClaimURI&gt;http://wso2.org/claims/role&lt;/ClaimURI&gt;\n    &lt;DisplayName&gt;Roles and groups&lt;/DisplayName&gt;\n    &lt;AttributeID&gt;role&lt;/AttributeID&gt;\n    &lt;Description&gt;Include both userstore groups and internal roles&lt;/Description&gt;\n    &lt;ReadOnly /&gt;\n&lt;/Claim&gt;\n</code></pre> </li> <li> <p>In <code>urn:ietf:params:scim:schemas:core:2.0:User</code> dialect:</p> <pre><code>&lt;Claim&gt;\n    &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:roles.default&lt;/ClaimURI&gt;\n    &lt;DisplayName&gt;Roles&lt;/DisplayName&gt;\n    &lt;AttributeID&gt;roles&lt;/AttributeID&gt;\n    &lt;Description&gt;Roles&lt;/Description&gt;\n    &lt;DisplayOrder&gt;5&lt;/DisplayOrder&gt;\n    &lt;SupportedByDefault /&gt;\n    &lt;MappedLocalClaim&gt;http://wso2.org/claims/roles&lt;/MappedLocalClaim&gt;\n&lt;/Claim&gt;\n</code></pre> </li> <li> <p>In <code>http://wso2.org/oidc/claim</code> dialect:</p> <pre><code>&lt;Claim&gt;\n    &lt;ClaimURI&gt;groups&lt;/ClaimURI&gt;\n    &lt;DisplayName&gt;User Groups&lt;/DisplayName&gt;\n    &lt;AttributeID&gt;role&lt;/AttributeID&gt;\n    &lt;Description&gt;List of group names that have been assigned to the principal. This typically will require a mapping at the application container level to application deployment roles.&lt;/Description&gt;\n    &lt;DisplayOrder&gt;12&lt;/DisplayOrder&gt;\n    &lt;SupportedByDefault /&gt;\n    &lt;MappedLocalClaim&gt;http://wso2.org/claims/groups&lt;/MappedLocalClaim&gt;\n&lt;/Claim&gt;\n&lt;Claim&gt;\n    &lt;ClaimURI&gt;roles&lt;/ClaimURI&gt;\n    &lt;DisplayName&gt;User Roles&lt;/DisplayName&gt;\n    &lt;AttributeID&gt;roles&lt;/AttributeID&gt;\n    &lt;Description&gt;List of role names that have been assigned to the principal. This typically will require a mapping at the application container level to application deployment roles.&lt;/Description&gt;\n    &lt;DisplayOrder&gt;13&lt;/DisplayOrder&gt;\n    &lt;SupportedByDefault /&gt;\n    &lt;MappedLocalClaim&gt;http://wso2.org/claims/roles&lt;/MappedLocalClaim&gt;\n&lt;/Claim&gt;\n</code></pre> </li> </ul> </li> </ol>"},{"location":"identity-server/migration-docs/is-6.0.0/prepare-for-migration/#disabling-versioning-in-the-registry-configuration","title":"Disabling versioning in the registry configuration","text":"<p>If there are frequently updating registry properties, having the versioning enabled for registry resources in the registry can lead to unnecessary growth in the registry related tables in the database. To avoid this, we have disabled versioning by default in Identity Server 6.0.0.</p> <p>Therefore, when migrating to IS 6.0.0, it is required to turn off the registry versioning in your current Identity Server and run the below scripts against the database that is used by the registry.</p> <p>Turning off registry versioning in your current IS and running the scripts</p> <p>Open the <code>registry.xml</code> file in the <code>&lt;OLD_IS_HOME&gt;/repository/conf</code> directory. Set the <code>versioningProperties</code>, <code>versioningComments</code>, <code>versioningTags</code> and <code>versioningRatings</code> false.</p> <pre><code>&lt;staticConfiguration&gt;\n      &lt;versioningProperties&gt;false&lt;/versioningProperties&gt;\n      &lt;versioningComments&gt;false&lt;/versioningComments&gt;\n      &lt;versioningTags&gt;false&lt;/versioningTags&gt;\n      &lt;versioningRatings&gt;false&lt;/versioningRatings&gt;\n&lt;/staticConfiguration&gt;\n</code></pre> <p>Warning</p> <p>If the above configurations are already set as <code>false</code> you should not run the below scripts.</p> <p>When the above configurations are turned off, we need to remove the versioning detatils from the database in order for the registry resources to work properly. Choose the relevant DB type and run the script against the DB that the registry resides in.</p> <p>DB Scripts</p> <p>The following database scripts are provided by the WSO2 team. </p> DB type Script name H2 <code>1_H2.h2.db</code> DB2 <code>2_DB2.db2</code> MSSQL <code>3_MSSQL.sql</code> MySQL <code>4_MySQL.sql</code> Oracle <code>5_Oracle.sql</code> PostgreSQL <code>6_PostgreSQL.sql</code>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/","title":"What Has Changed","text":"<p>WSO2 Identity Server 6.0.0 brings a range of new features and major improvements. The following aspects have changed in 6.0.0 compared to the previous WSO2 IS versions.</p> <p>This page provides details about the behavioral changes from WSO2 Identity Server 5.11.0 to 6.0.0.</p> <p>If you are migrating from an older version of Identity Server</p> <p>To find the changes introduced in the previous versions, you can refer to the following documents  - What Has Changed in IS 5.11.0  - What Has Changed in IS 5.10.0  - What Has Changed in IS 5.9.0  - Migrating Configurations to IS 5.8.0 section in the Upgrading From an Older Version of WSO2 IS document</p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#webapp","title":"Webapp","text":"<p>This section covers the updates related to Console application and the MyAccount application on Identity Server 6.0.0.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#console-app","title":"Console App","text":"<p>Identity Server 5.11.0 had two ways of adding the certification for an application. The two methods used are as follows: - Upload the certificate through the UI - Add the certificate to the keystore and select the certificate through the UI.</p> <p>Having two methods for the same process creates redundancy, therefore in 6.0.0., the second option is removed by default. If you need to enable the signature validation certificate alias option in the UI, add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[console.applications.ui]\ncertificate_alias_enabled = true\n</code></pre>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#common-changes","title":"Common Changes","text":"<ul> <li> <p>The default token binding type of both the Console and MyAccount is changed from <code>SSO-based binding</code> to <code>cookie-based binding</code>. Read more on Access Token Binding Type.</p> </li> <li> <p>With IS 6.0.0, the <code>Callback URL</code> and <code>Post-Logout Redirect URL</code> of the Console and MyAccount are now tenant qualified by default. Hence, after migrating to IS 6.0.0, the Callback URLs of both the MyAccount and Console applications should be updated as follows:</p> <ul> <li> <p>Console     <pre><code>regexp=(https://&lt;hostname&gt;/console|https://&lt;hostname&gt;/t/(.*)/console)\n</code></pre></p> </li> <li> <p>MyAccount     <pre><code>regexp=(https://&lt;hostname&gt;/myaccount|https://&lt;hostname&gt;/t/(.*)/myaccount)\n</code></pre></p> </li> </ul> </li> </ul> <p>This change will be propagated to the migrated IS 6.0.0 via the migration client according to the following configuration in the migration-config.yaml.     <pre><code>- name: \"SystemAppRedirectURLMigrator\"\norder: 15\nparameters:\nconsoleRedirectUrl: \"regexp=(https://localhost:9443/console|https://localhost:9443/t/(.*)/console)\"\nmyaccountRedirectUrl: \"regexp=(https://localhost:9443/myaccount|https://localhost:9443/t/(.*)/myaccount)\"\n</code></pre>   Before running the migration, make sure to update the URLs in the regular expressions with the server domain or hostname, if they are different from the default values.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#user-management","title":"User Management","text":"<p>This section contains the changes of the User Management functionalities of IS 6.0.0.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#admin-forced-password-reset","title":"Admin Forced Password Reset","text":"<p>Identity Server 6.0.0, comes with a new configuration to specify the password reset code validity period for the admin initiated password reset flow.</p> <p>In earlier versions of the Identity Server, a single configuration was used to govern the code validity period of all password reset flows. The configuration used in the earlier versions of IS was the <code>ExpiryTime</code> in the <code>identity.xml</code> file. This property not only affects the admin initiated password reset flow but also some other password reset flows.</p> <p>Updating the <code>ExpiryTime</code> of the <code>identity.xml</code> file does not affect admin initiated password reset flow in IS 6.0.0. This is because usually the code of admin initiated password reset flow is expected to have a longer validity period than the other flows. Therefore  If you need to update the code validity period of this add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[identity_mgt.password_reset_by_admin]\ncode_validity_period = &lt;time&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#authentication","title":"Authentication","text":"<p>This section contains the updates done to the Authentication features of IS 6.0.0.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#otp-authenticator","title":"OTP Authenticator","text":"<p>Some significant changes have been made to the below mentioned OTP authenticators. Please follow the instructions given below to incorporate your custom OTP requirements and changes to Identity Server 6.0.0.</p> Email OTP Authenticator <p>The following changes have been made to the Email OTP authenticator.</p> <ul> <li> <p>It\u2019s no longer required to add the Email OTP authenticator into the <code>dropins</code> folder as the authenticator has been moved into the <code>plugins</code> directory by default in IS 6.0.0.  </p> </li> <li> <p>The artifact ID of the authenticator has been updated.</p> </li> <li> <p>The <code>emailotpauthethentication</code> endpoint, which was packed with the product is now an integral part of the authentication portal. Following are the steps to integrate their changes to Identity Server 6.0.0 for users with customized email TOTP pages.</p> <ol> <li> <p>Merge the customizations to the authentication portal app.The pages related to Email OTP available in authentication portal are included in the table below.      Page name in IS 6.0.0 Page name in earlier version Page description <code>emailAddressCapture.jsp</code> <code>emailAddress.jsp</code> Email OTP email capture page <code>emailOtp.jsp</code> <code>emailotp.jsp</code> Email OTP login page <code>emailOtpError.jsp</code> <code>emailotpError.jsp</code> Email OTP error page </p> </li> <li> <p>Deploy the existing customized email OTP web app to the server and add the following configurations to the <code>deployment.toml</code> file to direct the email OTP flows to the customized pages.     <pre><code>[authentication.authenticator.email_otp.parameters]\nEMAILOTPAuthenticationEndpointURL = \"https://localhost:9443/emailotpauthenticationendpoint/emailotp.jsp\"\nEmailOTPAuthenticationEndpointErrorPage = \"https://localhost:9443/emailotpauthenticationendpoint/emailotpError.jsp\"\nEmailAddressRequestPage = \"https://localhost:9443/emailotpauthenticationendpoint/emailAddress.jsp\"\n</code></pre></p> </li> </ol> </li> </ul> TOTP Authenticator <p>The following changes have been made to the TOTP authenticator.</p> <ul> <li> <p>It\u2019s no longer required to add the TOTP authenticator into the <code>dropins</code> folder as the authenticator has been moved into the <code>plugins</code> directory by default in IS 6.0.0.</p> </li> <li> <p>The <code>totpauthethentication</code> endpoint, which was packed with the product is now an integral part of the authentication portal. Following are the steps to integrate their changes to Identity Server 6.0.0 for users with customized TOTP pages.</p> <ol> <li> <p>Merge the customizations to the authentication portal app.The pages related to TOTP available in authentication portal are:</p> <ul> <li>enableTOTP.jsp (TOTP enroll page)</li> <li>totp.jsp (TOTP login page)</li> <li>totpError.jsp (TOTP error page)</li> </ul> </li> <li> <p>Deploy the existing customized TOTP web app to the server and add the following configurations to the <code>deployment.toml</code> file to direct the TOTP flows to the customized pages.</p> <pre><code>[authentication.authenticator.totp.parameters]\nTOTPAuthenticationEndpointURL=\"totpauthenticationendpoint/totp.jsp\"\nTOTPAuthenticationEndpointErrorPage=\"totpauthenticationendpoint/totpError.jsp\"\nTOTPAuthenticationEndpointEnableTOTPPage=\"totpauthenticationendpoint/enableTOTP.jsp\"\n</code></pre> </li> <li> <p>Unlike the earlier versions of the Identity server, the TOTP authenticator of IS 6.0.0 does not offer sending the TOTP via email as a default option. Add the following configuration to the <code>deployment.toml</code> file to enable sending the TOTP through Email.</p> <pre><code>[authentication.authenticator.totp.parameters]\nAllowSendingVerificationCodeByEmail = true\n</code></pre> </li> </ol> </li> </ul> <p>Note</p> <p>The i18n keys of both OTP authenticators have been moved to the i18n property file of the authentication portal.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#authenticator-display-name","title":"Authenticator Display Name","text":"<p>From IS 6.0.0 onward the display names of some of the local authenticators and handlers were renamed. The following table maps the previous authenticator display names to the IS 6.0.0 display names.</p> Authenticator Previous display name Current display name <code>IdentifierExecutor</code>identifier-firstIdentifier First <code>JWTBasicAuthenticator</code>jwt-basicJWT Basic <code>FIDOAuthenticator</code>fidoSecurity Key/Biometrics <code>BasicAuthenticator</code>basicUsername &amp; Password <code>SessionExecutor</code>active-sessions-limit-handlerActive Sessions Limit"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#adaptive-authentication-function-signature","title":"Adaptive Authentication Function Signature","text":"<p>On WSO2 IS, <code>getUniqueUserWithClaimValues</code>  is an adaptive authentication Javascript utility function that is used to obtain a user definition along with claim values. The utility function will search on the underlying user stores and return a unique user with the claim values.</p> <p>In earlier versions of the Identity Server, the parameters required by this function were as follows:</p> Parameter Description <code>claimMap</code> A map contains the claim URI and claim value <code>tenantDomain</code> The tenant domain of the user <code>profile</code> Profile of the user. (Optional, the default value is 'default') <p>The function in earlier versions of IS: <code>getUniqueUserWithClaimValues (claimMap, tenantDomain, profile)</code></p> <p>With Identity Server 6.0.0, the parameters of this method signature have been changed.The updated parameters used by this function are as follows:</p> Parameter Description <code>claimMap</code> A map contains the claim URI and claim value <code>contect</code> <code>JsAuthenticationContext</code> object available in the authentication flow <code>profile</code> Profile of the user. (Optional, the default value is 'default') <p>The function in IS 6.0.0: <code>getUniqueUserWithClaimValues (claimMap, context, profile)</code></p> <p>Example usage of the updated function:</p> <pre><code>var claimMap = {};\nclaimMap[MAPPED_FEDERATED_USER_NAME_CLAIM] = federatedUserName;\nclaimMap[MAPPED_FEDERATED_IDP_NAME_CLAIM] = idpName;\nvar mappedUsername = getUniqueUserWithClaimValues(claimMap, context);\n</code></pre> <p>Make sure to update the usages of this function, if any, after the migration process.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#application-management","title":"Application management","text":"<p>This section covers the updates related to application configurations on Identity Server 6.0.0.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#application-roles-in-application-management-flows","title":"Application Roles in Application Management Flows","text":"<p>With WSO2 IS 6.0.0, the following functions have been removed by default: - The creation of application roles - The validation of application roles in application management flows.</p> <p>With these changes, - Application roles will not be created nor assigned to the application owner during the application creation. - Application role validation will be skipped for users who initiate application management flows.</p> <p>The above said changes apply to both new and existing applications of WSO2 IS.</p> <p>If you require the former functionality, add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[application_mgt]\nenable_role_validation = true\n</code></pre> <p>Important</p> <p>When setting this configuration value to true, make sure that application roles have been created for all the applications and assigned to the relevant application owners. If not, create and assign the roles.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#application-requested-claims","title":"Application Requested Claims","text":"<p>During federated login flows in IS 6.0.0, if requested claims are not configured for an application, none of the user claims sent from the external IDP will be sent to the application through the ID token.</p> <p>For the same scenario in IS versions 5.11.0 and below, all the claims sent from the external IDP will be sent to the application regardless of the requested claim configuration. If the previous behavior is required in IS 6.0.0, add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[authentication]\nallow_sp_requested_fed_claims_only =false\n\n[oauth.oidc.claims]\nenable_oidc_dialect=false\n</code></pre>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#oidc-protocol","title":"OIDC Protocol","text":"<p>According to the OIDC specification, the OIDC claim <code>locality</code> should be used to store the city of an address. In the earlier versions of the Identity Server, the <code>locality</code> claim was mapped to the local claim <code>http://wso2.org/claims/locality</code>, which is used to store a localization code used mainly in email templates.</p> <p>To maintain compliance with the OIDC specification, the local claim <code>http://wso2.org/claims/locality</code> will be used to store the city of an address with Identity Server 6.0.0 and upwards. The localization code information will be stored in the local claim <code>http://wso2.org/claims/local</code>.</p> <p>To revert to the previous claim usage system, add the following configuration to the deployment.toml file.</p> <pre><code>[claims]\nuse_legacy_localization_claim = true\n</code></pre>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#oidc-claim-mapping","title":"OIDC Claim Mapping","text":"<p>In Identity Server 6.0.0, the claim dialect of the website claim has been changed from <code>http://wso2.org/claims/url</code> to <code>http://wso2.org/claims/websiteurl</code>. This claim mapping migration will be done automatically when executing the migration client.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#oidc-backchannel-logout-token","title":"OIDC Backchannel Logout Token","text":"<p>To maintain compliance with the OIDC specification for Backchannel logout, the logout token attributes have been updated. </p> <p>In Identity Server 5.11.0, a logout token generated during OIDC Backchannel logout would have looked like this.</p> <pre><code>{\n\"iss\": \"https://server.example.com\",\n\"sub\": \"248289761001\",\n\"aud\": \"s6BhdRkqt3\",\n\"iat\": 1471566154,\n\"jti\": \"bWJq\",\n\"sid\": \"08a5019c-17e1-4977-8f42-65a12843ea02\",\n\"event\": {}\n} </code></pre> <p>In Identity Server 6.0.0, the event attribute has been renamed to events and default value has been added to the events list. Hence, a logout token generated in IS 6.0.0 would be as follows.</p> <pre><code>{\n\"iss\": \"https://server.example.com\",\n\"sub\": \"248289761001\",\n\"aud\": \"s6BhdRkqt3\",\n\"iat\": 1471566154,\n\"jti\": \"bWJq\",\n\"sid\": \"08a5019c-17e1-4977-8f42-65a12843ea02\",\n\"events\": {\n\"http://schemas.openid.net/event/backchannel-logout\": {}\n}\n}\n</code></pre> <p>Make sure to update all the client applications that use OIDC Backchannel logout to work with the new format of the logout token.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#openid-scope","title":"OpenID Scope","text":"<p>From Identity Server 6.0.0 onwards, using the openid scope in OpenID Connect flows will not return any user claims. This change will only affect new tenants and will not have an impact on the existing tenants. If user claims are required, the recommended approach is to define a custom OIDC scope with required claims and use that scope in the OIDC flows.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#oidc-consent-updates","title":"OIDC Consent Updates","text":"<p>Following are the changes made to the behavior of the Consent prompt page in the login flow of IS 6.0.0:</p> <p>The OIDC scopes requested by a client application was displayed under the permissions section of the user consent page. These requested OIDC scopes are no longer mentioned under the permissions section of the user consent page. Only the relevant claims will be displayed.</p> <p>Prompting consent for the Subject Claim URI will be done only if it has also been configured as a Requested Claim. This is enabled by default. The previous behavior of the consent page did not prompt for consent for the Subject Claim URI at all, regardless of whether it had been configured as a Requested Claim or not. If the previous behavior is required, add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[authentication.consent.subject]\nprompt=false\n</code></pre>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#userstore-management","title":"Userstore management","text":"<p>This sections contains the details of the updates related to User Management section in IS 6.0.0.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#configuring-custom-userstore-managers","title":"Configuring Custom Userstore Managers","text":"<p>In earlier versions of WSO2 IS, custom userstore managers were enabled by adding the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[user_store_mgt]\nallowed_user_stores=[\u201c&lt;existing userstore managers...&gt;\u201d,\"&lt;new userstore managers\u2026&gt;\"]\n</code></pre> <p>This configuration requires the developer to enter the names of all existing userstore managers together with the new userstore managers that needed to be enabled.</p> <p>In Identity Server 6.0.0, a new configuration has been introduced to enable the custom userstore managers but adding the name of the new userstore manager only.</p> <p>You may use the following configuration on <code>deployment.toml</code> file to configure new custom userstore managers</p> <pre><code>[user_store_mgt]\ncustom_user_stores=[\u201c&lt;new userstore managers\u2026&gt;\u201d]\n</code></pre>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#provisioning","title":"Provisioning","text":"<p>This sections contains the details of the updates related to provisioing section in IS 6.0.0.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#provisioning-unmapped-roles-in-jit-provisioning","title":"Provisioning Unmapped Roles in JIT Provisioning","text":"<p>In Identity Server 5.11.0, provisioning of roles in the JIT provisioning flow took place only for roles which had role mappings configured.</p> <p>In Identity Server 6.0.0, this behavior has been changed. If there is a local role with a name similar to the Identity Provider role name, such roles will be provisioned during JIT provisioning even if there is no role mapping set in the IDP configuration. This is now the default behavior. If the previous behavior is required, add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[idp_role_management]\nreturn_only_mapped_local_roles = true\n</code></pre>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#deleting-locally-added-claims-of-jit-provisioned-users","title":"Deleting locally added claims of JIT provisioned users","text":"<p>In Identity Server 5.11.0, with the <code>Assert identity using mapped local subject identifier</code> option enabled for a service provider, the locally added claim values for a JIT provisioned user during initial provisioning will be retained, even if those specific claim values are not returned by the federated Identity Provider (IdP) during subsequent federated logins.</p> <p>In Identity Server 6.0.0, this behavior has been changed. The attribute synchronization process for a JIT provisioned user was changed so as to delete the existing claim mappings which are not present in the IDP claim mapping. This deletes existing local claim values that are not present in the subsequent federated logins after the initial provisioning.</p> <p>If the previous behavior is required(To preserve locally added claims of JIT provisioned users), add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[authentication.jit_provisioning]\npreserve_locally_added_claims = true\n</code></pre>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#scopes","title":"Scopes","text":"<p>This sections contains the details of the updates related to scopes section in IS 6.0.0.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#system-level-permission-binding-for-maintaining-internal-scopes","title":"System Level Permission Binding for Maintaining Internal Scopes","text":"<p>In earlier versions of the Identity Server, internal system scopes and permissions were managed separately for every tenant. This behavior was not a necessity as these scopes were only used to access the Identity Server\u2019s internal APIs, but it had a negative impact on the tenant creation process.</p> <p>With Identity Servery 6.0.0, the internal scope\u2019s permission bindings will be managed at the server level as system data. All tenants will now use the bindings available in the <code>oauth-scope-bindings.xml</code> file for internal scopes.</p> <p>If the previous behavior is required, add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[oauth]\nenable_system_level_internal_scope_management = false\n</code></pre>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#scope-based-claim-filtering-in-applications","title":"Scope Based Claim Filtering in Applications","text":"<p>In the previous versions of the Identity Server, if there are requested claims configured at the service provider, the claims will be sent to the client application regardless of the scope set in the authorization request.</p> <p>From Identity Server 6.0.0 onwards, this behavior has been changed. The claims configured in the service provider will now be filtered by the scopes set in the authorization requests and only those filtered claims will be sent to the client application.</p> <p>To revert to the previous behavior, add the following configuration to the deployment.toml file.</p> <pre><code>[authentication]\nenable_scope_based_claim_filtering = false\n</code></pre>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#token","title":"Token","text":"<p>This section covers the updates related to Token configurations on Identity Server 6.0.0.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#jwt-access-token-signing-behavior","title":"JWT Access Token Signing Behavior","text":"<p>In the previous versions of the Identity Server, JWT access token signing is done using the tenant of the user accessing  the application. This behavior has been improved to maintain consistency with the ID token which is signed using the application\u2019s tenant by default. This behavioral change will also simplify token validation at the application, especially SaaS applications.</p> <p>In Identity Server 6.0.0, JWT Access Token signing is done using the tenant in which the application (service provider) has been registered. </p> <p>This behavioral change will have an impact on SaaS applications as the user may not always be from the same tenant as that of the application. Token validation may fail at the client application when obtaining new tokens after the migration. The SaaS client applications need to be updated to handle JWT token validation using the application tenant in order to function properly with this behavioral change. If the previous behavior is required, add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[oauth.access_token]\ngenerate_with_sp_tenant_domain = false\n</code></pre> <p>With this configuration in place, the SaaS applications can be used as they were without issues.</p> <p>This change will not have an impact on existing non-SaaS applications as both the application and the user will be from the same tenant in that context.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#id-token-signing-behavior-when-encryption-is-used","title":"ID Token Signing Behavior (when Encryption is Used)","text":"<p>In previous versions of the Identity Server, ID Token encryption happens before signing the token. This behavior has been updated to follow the OIDC specification.</p> <p>In Identity Server 6.0.0, ID Token encryption will occur after the token has been signed. It is important to note that the result of token decryption now will be a signed JWT, instead of the claims set as in previous versions. Hence, client applications that perform token decryption will have to be updated accordingly to read the claims in the JWT token.</p> <p>The following is an example written in JAVA portraying the differences between the old and new scenarios.</p> <pre><code>// Using packages \n// com.nimbusds.jose.crypto.RSADecrypter\n// com.nimbusds.jwt.EncryptedJWT\n// com.nimbusds.jwt.JWTClaimsSet\n\n// Decrypt the ID Token\nEncryptedJWT jwt = EncryptedJWT.parse(idToken);        RSADecrypter decrypter = new RSADecrypter(spPrivateKey);\njwt.decrypt(decrypter);\n\n// Obtaining claims set in IS 5.11.0 and prior versions\nJWTClaimsSet claims = jwt.getJWTClaimsSet();\n\n// Obtaining claims set in IS 6.0.0\nJWTClaimsSet claims = jwt.getPayload().toSignedJWT().getJWTClaimsSet();\n</code></pre> <p>Important</p> <p>This behavior cannot be reversed.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#id-token-address-claim","title":"ID Token Address Claim","text":"<p>In IS 6.0.0, the address claim that is returned with the ID token when the address scope is requested has been updated to comply with the OpenID Connect specification.  <code>Country</code>, <code>postal_code</code>, <code>locality</code>, <code>region</code> and <code>street_address</code> child claims will now be returned within the address claim as shown in the example below.  Any client application that is consuming the ID token claims should be updated to properly parse this claim value. <pre><code>{\n\"address\": {\n\"street_address\": \"1234 Hollywood Blvd.\",\n\"locality\": \"Los Angeles\",\n\"region\": \"CA\",\n\"postal_code\": \"90210\",\n\"country\": \"US\"\n}\n}\n</code></pre></p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#thumbprint-certificate-hashing-algorithm","title":"Thumbprint certificate hashing algorithm","text":"<p>From IS 5.10.0 onwards, the hashing algorithm used for thumbprint certificate generation is updated to <code>SHA-256</code>. For versions before IS 5.10.0, WSO2 Identity Server used <code>SHA-1</code> as the hashing algorithm for thumbprint certificate generation.</p> <p>Therefore, if a user is migrating from IS 5.9.0 or a lower version to IS 6.0.0, the previously issued JWTs will not be validated against the new thumbprint included in the JWKS response of the latest version.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#claims","title":"Claims","text":"<p>This section covers the updates related to claims on Identity Server 6.0.0.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#regex-pattern-validation-for-user-claim-input-values","title":"Regex Pattern Validation for User Claim Input Values","text":"<p>In Identity Server 6.0.0, server-side regex pattern validation has been introduced as a mechanism for validating inputs when adding and updating user claim values. With this feature, the input values for the user claims will be validated against the following patterns by default.</p> Claim Regex Pattern Mobile number <code>^\\d{4}-\\d{2}-\\d{2}$</code> Date of birth <code>^\\s*(?:\\+?(\\d{1,3}))?[-. (](\\d{3})?[-. )](\\d{3})?[-. ]*(\\d{4,6})(?: x(\\d+))?\\s$</code> All other claims <code>[^&lt;&gt;\\`\"]+</code> <p>If the previous behavior is required, the regex pattern validation feature can be disabled adding the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[identity_mgt]\nenable_user_claim_input_regex_validation = false\n</code></pre> <p>However, if user claim value validation is required with different regex patterns, it can be done by configuring the required regex patterns in the user claim configuration window, which will override the default regex validation pattern for that claim. For this to work, the above configuration should be removed (as it is enabled by default) or the value should be set to true.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#regex-pattern-validation-for-scim-attribute-names","title":"Regex Pattern Validation for SCIM Attribute Names","text":"<p>With Identity Server 6.0.0, server-side regex pattern validation has been added for SCIM attribute names. This means that new SCIM attributes created will be validated against the regex <code>&lt;dialect_uri&gt;:[a-z 0-9$\\-_]*$</code>. The regex only allows alphanumeric characters, <code>$</code>, <code>-</code> and <code>_</code> in the attribute names.</p> <p>If you are using a modified claim-config.xml file and you want to incorporate this update to your Identity Server 6.0.0 setup, add the regex patterns manually to your custom claim-config.xml file according to the format given below and replace the default file in <code>&lt;IS_HOME&gt;/repository/conf</code> directory. Refer the table for the Claim Dialect URIs and their corresponding regex patterns.</p> Dialect XML tag format <pre><code>&lt;Dialect dialectURI=\"[Claim Dialect URI]\" claimURIRegex=\"[Regex Pattern]\u201d&gt;\n</code></pre> New Claim Dialect Validation Regexes <p> Claim Dialect URI Regex Pattern <code>urn:scim:schemas:core:1.0</code> <code>urn:scim:schemas:core:1.0:[a-zA-Z0-9\\-_\\.]*</code> <code>urn:ietf:params:scim:schemas:core:2.0</code> <code>urn:ietf:params:scim:schemas:core:2.0:[a-zA-Z0-9\\-_\\.]*\\-_\\.]*</code> <code>urn:ietf:params:scim:schemas:core:2.0:User</code> <code>urn:ietf:params:scim:schemas:core:2.0:User:[a-zA-Z0-9\\-_\\.]*\\-_\\.]*</code> <code>urn:ietf:params:scim:schemas:extension:enterprise:2.0:User</code> <code>urn:ietf:params:scim:schemas:extension:enterprise:2.0:User:[a-zA-Z0-9\\-_\\.]*\\-_\\.]*</code>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#conversion-of-claims-of-assertions-to-oidc-dialect","title":"Conversion of Claims of Assertions to OIDC Dialect","text":"<p>For OAuth/OIDC applications, the default behavior of Identity Server versions till 5.11.0 was to send the original claims sent from IDP directly to the service provider/application as it is without converting the claims to the OIDC dialect.</p> <p>In Identity Server 6.0.0, this behavior has been changed. The claims sent from IDP are now being converted to the OIDC dialect by default before they are sent to the service provider.</p> <p>To disable this and revert to the previous behavior, add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[oauth.oidc.claims]\nenable_oidc_dialect = false\n</code></pre>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#external-dialect-claim-mapping-updates","title":"External Dialect Claim Mapping Updates","text":"<p>In Identity Server 6.0.0, the claim mapping of the <code>meta.version</code> claim of the external claim dialect <code>urn:ietf:params:scim:schemas:core:2.0</code> has been changed from the local claim <code>http://wso2.org/claims/im</code> to the newly added local claim <code>http://wso2.org/claims/metadata.version</code>.  This has been done to address an issue that affected updating the value of the IM attribute which is used for other purposes.</p> <p>Although this new claim mapping is available in a fresh Identity Server 6.0.0, this change will not be propagated from the older versions to a migrated IS 6.0.0 as it would create inconsistencies if <code>urn:ietf:params:scim:schemas:core:2.0:meta.version</code> values have been utilized following the older mapping.  If the <code>IM</code> attribute and <code>meta.version</code> attribute values are required separately, it is recommended to manually update the claim mapping via the Console once the migration is complete.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#api-endpoints","title":"API Endpoints","text":"<p>This section covers the updates related to APIs and API endpoints on Identity Server 6.0.0.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#scim2-endpoint","title":"SCIM2 Endpoint","text":"<p>This section covers the updates related to the SCIM2 endpoint on Identity Server 6.0.0.</p> Intermediate Certificate Validation <p>In WSO2 Identity Server versions 5.11.0 and older, intermediate certificate validation is skipped for the SCIM2 endpoint. This has been enabled by default in WSO2 Identity Server 6.0.0. If the previous behavior is required, add the following configuration to the <code>deployment.toml</code> file.</p> <p><pre><code>[intermediate_cert_validation]\nexempt_contexts = [\u201cscim2\u201d]\n</code></pre> Read more about Intermediate Certificate Validation.</p> Removal of Duplicate Entries in the SCIM2 Users Response <p>In the older versions of the Identity Server, the responses of the SCIM2 Users endpoint did not contain duplicate entries of the same user (it is possible to have to duplicate usernames in separate userstores).</p> <p>In Identity Server 6.0.0, the SCIM2 User responses will contain duplicate entries of the same user as returned by the list of userstores. This has been done to maintain the consistency of the results returned by the userstores for the search queries.</p> <p>If this behavior is not required, it can be disabled using the following configuration.</p> <pre><code>[scim2]\nremove_duplicate_users_in_users_response = true </code></pre> Data type change for boolean attributes from the Schemas endpoint <p>In previous versions of WSO2 Identity Server, the <code>scim2/Schemas</code> endpoint returned the attribute type of boolean attributes as <code>string</code>. <pre><code>caseExact: false\ndescription: \"Status of the account\"\ndisplayName: \"Active\"\ndisplayOrder: \"20\"\nmultiValued: false\nmutability: \"READ_WRITE\"\nname: \"active\"\nrequired: false\nreturned: \"DEFAULT\"\ntype: \"STRING\"\n</code></pre> In Identity Server 6.0.0, the attribute type returned for boolean attributes from the <code>scim2/Schemas</code> endpoint is <code>boolean</code>. <pre><code>caseExact: false\ndescription: \"Status of the account\"\ndisplayName: \"Active\"\ndisplayOrder: \"20\"\nmultiValued: false\nmutability: \"READ_WRITE\"\nname: \"active\"\nrequired: false\nreturned: \"DEFAULT\"\ntype: \"BOOLEAN\"\n</code></pre></p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#token-introspection-endpoint","title":"Token Introspection Endpoint","text":"Disabling Cross Tenant Token Introspection <p>The ability to introspect tokens across tenants will be disabled by default in IS 6.0.0. With this change, cross tenant endpoints will not be accessible using a tenanted access token. For example, using an access token obtained for tenant A to access the user info endpoint of tenant B will result in an \"Access token validation failed\" error response.  The tenanted user info endpoint can only be used with an access token that was issued for that particular tenant.  Hence, the URLs of the introspection (user info) endpoints used in client applications will have to be updated to tenanted endpoints if tenanted access tokens are used. Eg: /userinfo -&gt; /t/tenantdomin/userinfo.</p> <p>If a user needs to enable cross-tenant token introspection, the following config should be added to the <code>deployment.toml</code> file. <pre><code>[oauth.introspect]\nallow_cross_tenant = true\n</code></pre></p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#certificate-configuration-via-application-management-rest-api","title":"Certificate Configuration via Application Management REST API","text":"<p>With IS 6.0.0, it is no longer possible to add expired certificates to applications or update existing certificates of applications with expired certificates using the Application Management REST API.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#oauth-dcr-endpoint-response","title":"OAuth DCR Endpoint Response","text":"<p>With WSO2 Identity Server 6.0.0, the response model of an application <code>GET/PUT</code> response from the OAuth DCR endpoint has been updated. The data type of the <code>client_secret_expires_at</code> property of an OAuth2 Application object has been changed from <code>string</code> to <code>long</code>.</p> <p>Therefore, any client applications that are using this API must update the response parsing mechanisms to work with a long value for this attribute.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#userinfo-endpoint-attributes","title":"UserInfo Endpoint Attributes","text":"Groups Claim <p>The representation of the groups claim in the <code>UserInfo</code> response has been changed. The groups claim is a multi-valued attribute, and it is represented accordingly as a JSON array in the ID token. But in earlier versions of the Identity Server, the value of the groups claim in the UserInfo response is a single string of comma-separated values as shown below.</p> <p><code>\"groups\": \"Internal/everyone,dev\"</code></p> <p>With Identity Server 6.0.0, the UserInfo response has been updated to return a JSON array value for the groups claim, similar to that in the ID token.</p> <p><code>\"groups\": [\"Internal/everyone\",\"dev\"]</code> Hence, any client application that consumes the UserInfo response should be updated to parse this new format of the response properly.</p> Address Claims <p>The representation of the following claims in the <code>UserInfo</code> response has been changed.  - country  - locality  - region  - postal_code</p> <p>These claims will be listed as sub-claims within a JSON object under the address claim in the ID token. In earlier versions of the Identity Server, these claims were listed separately in the UserInfo response as shown below.</p> <pre><code>\"country\": \"Andorra\",\n\"locality\": \"Wales\"\n</code></pre> <p>With Identity Server 6.0.0, the UserInfo response will list the above claims inside the address claim as shown below.</p> <p><pre><code>\"address\": {\n   \"country\": \"Andorra\",\n   \"locality\": \"Wales\"\n}   \n</code></pre> Hence, any client application that consumes the UserInfo response should be updated to parse this new format of the response properly.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#library-management-permissions","title":"Library Management Permissions","text":"<p>Up until WSO2 Identity Server 5.11.0, manage level permissions were required to access the Function Library Management Admin services and APIs.</p> <p>With WSO2 Identity Server 6.0.0, more fine-grained permissions are supported for these services and APIs. The following table maps the operation to the required permissions.</p> Service Operation API Call Permissions Required <code>createFunctionLibrary</code> <code>POST /api/server/v1/script-libraries(.*)</code> <code> /permission/admin/manage/functionsLibrarymgt/create</code> <code>listFunctionLibraries, getFunctionLibrary</code> <code>GET /api/server/v1/script-libraries(.*)</code> <code>/permission/admin/manage/functionslibrarymgt/view</code> <code>deleteFunctionLibrary</code> <code>DELETE /api/server/v1/script-libraries(.*)</code> <code>/permission/admin/managefunctionslibrarymgt/delete</code> <code>updateFunctionLibrary</code> <code>PUT /api/server/v1/script-libraries(.*)</code> <code>/permission/admin/manage/functionslibrarymgt/update</code>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#cors-configuration-management-api-permissions","title":"CORS Configuration Management API Permissions","text":"<p>Up until WSO2 Identity Server 5.11.0, <code>manage</code> level permissions were required to access the CORS Configuration Management APIs. With IS 6.0.0, more fine-grained permissions have been introduced for this API.  The permission <code>/permission/admin/manage/identity/cors/origins/view</code> is now sufficient to access the <code>/api/server/v1/cors/origins</code> API endpoint.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#remote-server-shutdownrestart-via-soap-api","title":"Remote Server Shutdown/Restart via SOAP API","text":"<p>With Identity Server 6.0.0, the capability of the SOAP APIs to initiate server shutdowns or restarts has been disabled by default. If these features are required, add the following configurations to the <code>deployment.toml</code> file to enable the features.</p> <pre><code>[server]\nenable_shutdown_from_api = true\nenable_restart_from_api = true\n</code></pre>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#server-management-api-restrictions","title":"Server Management API Restrictions","text":"<p>From Identity Server 6.0.0 onwards, only client applications configured as Management Applications are able to access Server Management APIs.</p> <p>Applications can configured as management applications in the following methods: - Check the Management Application option available in the application's edit page. - Set the <code>isManagementApp</code> attribute to <code>true</code> using Application Management REST API for the required applications.</p> <p>Note</p> <p>This will affect only new applications. All applications that existed prior to the migration will still be able to access the Server's Management APIs.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#resend-code-api-restrictions","title":"Resend Code API Restrictions","text":"<p>From Identity Server 6.0.0 onwards, only users with identity management permission are able to invoke the resend-code API.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#legacy-dcr-endpoint-deprecation","title":"Legacy DCR Endpoint Deprecation","text":"<p>With IS 6.0.0, the legacy DCR endpoint which was accessible via <code>/identity/register</code> has been deprecated.  The recommended API for DCR should be OAuth2.0 DCR endpoint (<code>/identity/oauth2/dcr/v1.1</code>).</p> <p>If the deprecated legacy DCR endpoint needs to be enabled, use the following config in <code>deployment.toml</code> file. <pre><code>[[legacy_feature]]\nid = \"identity/register\"\nenable = true\n</code></pre></p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#users-session-management-apis","title":"User's Session Management APIs","text":"<p>From Identity Server 6.0.0 onwards, two new API endpoints will be available to retrieve user session information.</p> <ul> <li><code>/{user-id}/sessions/{session-id}</code>: To retrieve information related to the active session given a session-id and a user-id.</li> <li><code>/sessions</code>: To retrieve all active sessions of the tenant. This endpoint supports filtering with some of the attributes.</li> </ul> <p>Read more on User's Session Management API Definition.</p> <p>From Identity Server 6.0.0 onwards, federated authentication sessions associated with local user sessions will be returned with the session's response.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#database","title":"Database","text":"<p>This section covers the updates related to database configurations on Identity Server 6.0.0.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#h2-database-version-upgrade","title":"H2 Database Version Upgrade","text":"<p>The H2 database engine version has been upgraded from <code>1.4.199</code> to <code>2.1.210</code> in Identity Server 6.0.0. As a result of this, Identity Server 6.0.0 will not be able to properly interact with existing H2 databases of the older version.</p> <p>Therefore, it is mandatory to migrate the existing H2 databases to the newer version before running the product migration tool. This applies mainly to the embedded H2 database in the product, if being used.</p> <p>Note</p> <p>If you are migrating from IS 5.11.0 which is using the embedded H2 database and has been updated to update level 111 or higher, the H2 database migration need not be done as the database has already been migrated with update 111.</p> <p>To migrate the H2 databases to the newer versions, follow the instructions given below.</p> <ol> <li> <p>Get the <code>migration.sh</code> script provided by the WSO2 team and run it using the command <code>sh migration.sh</code>.</p> <p>Alternatively, you could run the following command to download and run the script in one go.</p> <pre><code>curl -s https://raw.githubusercontent.com/wso2/samples-is/master/h2-migration-tool/migration.sh | bash\n</code></pre> </li> <li> <p>Once you run the script, you will be prompted with the following questions on the terminal:</p> <ul> <li>Enter the path to the previous database files:     If the database being migrated is the embedded H2 database, the path should be <code>&lt;OLD_IS_HOME&gt;/repository/database</code>.</li> <li>Enter the path to store the newly created files:     Enter the path of the target directory where the new database files should be generated.</li> </ul> </li> <li> <p>After successfully executing the migration script, copy the files in the target directory to the <code>repository/database</code> directory in the new Identity Server 6.0.0 pack for embedded H2 database migration.</p> </li> </ol>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#data-providers","title":"Data providers","text":"<p>This section covers the updates related to data provider configurations on WSO2 Identity Server 6.0.0.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#introspection-data-providers","title":"Introspection Data Providers","text":"<p>Up until WSO2 Identity Server 5.11.0, the following single configuration was used to enable or disable all the registered OAuth introspection data providers.</p> <pre><code>[oauth.grant_type.uma_ticket]\nretrieve_uma_permission_info_through_introspection = true\n</code></pre> <p>This configuration is deprecated from Identity Server 6.0.0 onwards. Introspection data providers are now registered as event listeners and can be individually activated using the configurations given below in the <code>deployment.toml</code> file.</p> <pre><code>[event.default_listener.is_introspection_data_provider]\nenable = true\n\n[event.default_listener.uma_introspection_data_provider]\nenable = true\n</code></pre>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#system-configs","title":"System configs","text":"<p>This section covers the updates related to system configurations on Identity Server 6.0.0.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#default-cors-configuration","title":"Default CORS Configuration","text":"<p>In previous versions of WSO2 Identity Server, the default HTTP methods allowed for CORS were only <code>GET</code>, <code>POST</code>, <code>HEAD</code> and <code>OPTIONS</code>.</p> <p>In Identity Server 6.0.0, this has been changed to allow the following HTTP methods <code>GET</code>, <code>POST</code>, <code>PUT</code>, <code>PATCH</code>, <code>DELETE</code>, <code>HEAD</code> and <code>OPTIONS</code>.</p> <p>Learn more on how to change the CORS configuration.</p>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#log4j2-logging-in-hazelcast","title":"Log4j2 logging in Hazelcast","text":"<p>If you have been using WSO2 Identity Server in a Hazelcast cluster, you may have configured the logging type for Hazelcast as log4j <code>(Log4j1)</code>. Log4j1 logging is no longer supported in WSO2 Identity Server.</p> <p>In WSO2 Identity Server 6.0.0, the Log4j version is upgraded to <code>Log4j2</code>. Therefore the Hazelcast configuration needs to be updated to <code>log4j2</code> by adding the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[hazelcast]\nhazelcast.logging.type = log4j2\n</code></pre>"},{"location":"identity-server/migration-docs/is-6.0.0/what-has-changed/#changes-to-the-webxml-file","title":"Changes to the <code>web.xml</code> file","text":"<p>In previous versions of the WSO2 Identity Server, the <code>authenticationendpoint</code> configurations, <code>accountrecoveryendpoint</code> configurations, and servlet configurations were done in the <code>web.xml</code> file. </p> <p>From WSO2 Identity Server 6.0.0 onwards the <code>authenticationendpoint</code> configurations, <code>accountrecoveryendpoint</code> configurations, and servlet configurations should be done in the <code>deployment.toml</code> file.</p>"},{"location":"identity-server/migration-docs/is-6.1.0/migrate-to-610/","title":"Migrating to 6.1.0","text":"<p>This document guides you through the migration process from earlier versions of WSO2 Identity Server to Identity Server 6.1.0.</p>"},{"location":"identity-server/migration-docs/is-6.1.0/migrate-to-610/#before-you-begin","title":"Before you begin","text":"<p>See the document on preparing for migration.</p>"},{"location":"identity-server/migration-docs/is-6.1.0/migrate-to-610/#step-1-migrate-artifacts-and-configs","title":"Step 1: Migrate artifacts and configs","text":"<p>Note</p> <p>Note that <code>&lt;OLD_IS_HOME&gt;</code> is the folder where the current WSO2 IS resides, and <code>&lt;NEW_IS_HOME&gt;</code> is the folder where WSO2 IS 6.1.0 resides.</p> <p>Once all the prerequisites are met, follow the instructions given below to migrate to WSO2 IS 6.1.0.</p>"},{"location":"identity-server/migration-docs/is-6.1.0/migrate-to-610/#components","title":"Components","text":"<p>Follow the instructions given below to migrate any component artifacts.</p> <ul> <li> <p>If you have manually added any JAR files to the <code>&lt;OLD_IS_HOME&gt;/repository/components/lib</code> folder, copy those JARs to the <code>&lt;NEW_IS_HOME&gt;/repository/components/lib</code> folder.</p> </li> <li> <p>If you have manually added any custom OSGI bundles to the <code>&lt;OLD_IS_HOME&gt;/repository/components/dropins</code> folder, copy those OSGI bundles to\u00a0the <code>&lt;NEW_IS_HOME&gt;/repository/components/dropins</code> folder.</p> </li> <li> <p>Custom components</p> <p>Any custom OSGI bundles, which are added manually, should be recompiled with new dependency versions that are relevant to the new WSO2 IS version. All custom OSGI components reside in the <code>&lt;OLD_IS_HOME&gt;/repository/components/dropins</code> folder.</p> <ol> <li> <p>Get the source codes of the custom OSGI components located in the <code>dropins</code> folder.</p> </li> <li> <p>Change the dependency versions in the relevant POM files according to the WSO2 IS version that you are upgrading to (WSO2 IS 6.1.0) and compile them. </p> <p>Info</p> <p>The compatible dependency versions can be found here.</p> </li> <li> <p>If you come across any compile time errors, refer to the WSO2 IS code base and make the necessary changes related to that particular component version.</p> </li> <li> <p>Add the compiled JAR files to the <code>&lt;NEW_IS_HOME&gt;/repository/components/dropins</code> folder.</p> </li> <li> <p>If there were custom OSGI components in the <code>&lt;OLD_IS_HOME&gt;/repository/components/lib</code> folder, add newly compiled versions of those components to the <code>&lt;NEW_IS_HOME&gt;/repository/components/lib</code> folder.</p> </li> </ol> </li> </ul>"},{"location":"identity-server/migration-docs/is-6.1.0/migrate-to-610/#resources","title":"Resources","text":"<p>Copy the <code>.jks</code> files from the <code>&lt;OLD_IS_HOME&gt;/repository/resources/security</code> folder to the <code>&lt;NEW_IS_HOME&gt;/repository/resources/security</code> folder.</p> <p>Note</p> <p>From WSO2 Identity Server 5.11.0 onwards, it is required to use a certificate with the RSA key size greater than 2048. If you have used a certificate that has a weak RSA key (key size less than 2048) in the previous WSO2 IS version, add the following configuration to the <code>&lt;NEW_IS_HOME&gt;/repository/conf/deployment.toml</code> file to configure internal and primary keystores.  ```toml [keystore.primary]  file_name = \"primary.jks\"  type = \"JKS\"  password = \"wso2carbon\"  alias = \"wso2carbon\"  key_password = \"wso2carbon\"</p> <p>[keystore.internal]  file_name = \"internal.jks\"  type = \"JKS\"  password = \"wso2carbon\"  alias = \"wso2carbon\"  key_password = \"wso2carbon\"  ```</p> <p>Make sure to point the internal keystore to the keystore that is copied from the previous WSO2 Identity Server version. The primary keystore can be pointed to a keystore with a certificate that has a strong RSA key.</p> <p>Also, make sure to add the public key of the primary keystore to the client truststore copied from the previous WSO2 IS.</p> <ul> <li> <p>Export the public key from your primary keystore file using the following command:  <code>keytool -export -alias wso2carbon -keystore primary.jks -file &lt;public key name&gt;.pem</code></p> </li> <li> <p>Import the public key you extracted to the <code>client-truststore.jks</code> file by using the following command:  <code>keytool -import -alias &lt;new alias&gt; -file &lt;public key name&gt;.pem -keystore client-truststore.jks -storepass wso2carbon</code></p> </li> </ul>"},{"location":"identity-server/migration-docs/is-6.1.0/migrate-to-610/#tenants","title":"Tenants","text":"<p>If you have created tenants in the previous WSO2 Identity Server version that contain resources, copy the content from the <code>&lt;OLD_IS_HOME&gt;/repository/tenants</code> folder to the <code>&lt;NEW_IS_HOME&gt;/repository/tenants</code> folder.</p> <p>Note</p> <p>If you are migrating from WSO2 IS 5.8.0 or a previous version, delete the <code>eventpublishers</code> and <code>eventstreams</code> folders from each tenant in the <code>tenants</code> folder when copying to WSO2 IS 6.1.0. Make sure to back up the <code>tenants</code> folder before deleting the subfolders. You can use the following set of commands to find and delete all the relevant subfolders at once.</p> <pre><code>cd &lt;NEW_IS_HOME&gt;/repository/tenants\nfind . -type d -name 'eventpublishers' -exec rm -rf {} +\nfind . -type d -name 'eventstreams' -exec rm -rf {} +\n</code></pre>"},{"location":"identity-server/migration-docs/is-6.1.0/migrate-to-610/#user-stores","title":"User stores","text":"<p>If you have created secondary user stores in\u00a0the previous WSO2 IS version, copy the content in the <code>&lt;OLD_IS_HOME&gt;/repository/deployment/server/userstores</code> folder to the <code>&lt;NEW_IS_HOME&gt;/repository/deployment/server/userstores</code> folder.</p> <p>Note - If you are migrating from a version prior to WSO2 IS 5.5.0, you need to make the following changes in the <code>&lt;NEW_IS_HOME&gt;/migration-resources/migration-config.yaml</code> file (see Step 2 for instructions on getting the migration resources). - Remove all <code>UserStorePasswordMigrators</code> from versions above your previous WSO2 IS version. User store password migration will be done by the <code>EncryptionAdminFlowMigrator</code> in version 5.11.0.</p> <pre><code>name: \"UserStorePasswordMigrator\"\norder: 5\nparameters:\nschema: \"identity\"\n</code></pre> <ul> <li> <p>Change the <code>currentEncryptionAlgorithm</code> to <code>RSA</code> in <code>EncryptionAdminFlowMigrator</code> of version 5.11.0.</p> <pre><code>name: \"EncryptionAdminFlowMigrator\"\norder: 1\nparameters:\ncurrentEncryptionAlgorithm: \"RSA\"\nmigratedEncryptionAlgorithm: \"AES/GCM/NoPadding\"\nschema: \"identity\"\n</code></pre> </li> <li> <p>If you are migrating from a version prior to WSO2 IS 5.10.0, you need to update the <code>UserStoreManager</code> class name in the XML files of your user stores with its respective Unique ID &gt; userstore manager class name according to the table below.</p> </li> </ul> Deprecated Userstore Manager Unique ID Userstore &gt;Manager ReadWriteLDAPUserStoreManager UniqueIDReadWriteLDAPUserStoreManager ActiveDirectoryUserStoreManager UniqueIDActiveDirectoryUserStoreManager ReadOnlyLDAPUserStoreManage UniqueIDReadOnlyLDAPUserStoreManager JDBCUserStoreManager UniqueIDJDBCUserStoreManager <ul> <li>Make sure to update the JDBC driver class name used in the userstore XML file if the current class is deprecated. </li> </ul>"},{"location":"identity-server/migration-docs/is-6.1.0/migrate-to-610/#webapps","title":"Webapps","text":"<p>If you have customized any existing web apps in the previous WSO2 Identity Server version, those changes should be manually applied to the relevant files in WSO2 IS 6.1.0 with careful inspection.</p> <p>If you have deployed custom web apps in the previous WSO2 Identity Server, update the webapps to be compatible with WSO2 IS 6.1.0 and copy the web apps to the <code>&lt;NEW_IS_HOME&gt;/repository/deployment/server/webapps</code> folder.</p> <p>Info</p> <p>See the document on What has changed in WSO2 IS 6.1.0 to learn about the changes (if any) that need to be made to the webapps.</p>"},{"location":"identity-server/migration-docs/is-6.1.0/migrate-to-610/#configurations","title":"Configurations","text":"<p>Info</p> <p>If you have a WSO2 Subscription, it is highly recommended to reach WSO2 Support before attempting to proceed with the configuration migration.</p> <ol> <li> <p>Make sure that all the properties in the <code>&lt;IS_HOME&gt;/repository/conf/deployment.toml</code> file such as the database configurations are set to the correct values based on the requirement.</p> </li> <li> <p>Replace the <code>&lt;NEW_IS_HOME&gt;/repository/conf/email/email-admin-config.xml</code> file with <code>&lt;OLD_IS_HOME&gt;/repository/conf/email/email-admin-config.xml</code>.</p> </li> <li> <p>If you're migrating from a version prior to WSO2 IS 5.11.0, configure the SymmetricKeyInternalCryptoProvider as the default internal cryptor provider.</p> <ol> <li> <p>Generate your own secret key using a tool like OpenSSL.</p> <p><code>tab=\"Example\" openssl enc -nosalt -aes-128-cbc -k hello-world -P</code></p> </li> <li> <p>Add the configuration to the <code>&lt;NEW_IS_HOME&gt;/repository/conf/deployment.toml</code> file.</p> <pre><code>[encryption]\nkey = \"&lt;provide-your-key-here&gt;\"\n</code></pre> </li> <li> <p>Open the <code>&lt;NEW_IS_HOME&gt;/migration-resources/migration-config.yaml</code> file and note that the following two migrators are configured under migratorConfigs for 5.11.0:</p> <ul> <li><code>EncryptionAdminFlowMigrator</code></li> <li><code>EncryptionUserFlowMigrator</code></li> </ul> </li> <li> <p>If you're migrating from a version prior to WSO2 IS 5.6.0, open the <code>&lt;NEW_IS_HOME&gt;/migration-resources/migration-config.yaml</code> file and change the value of <code>transformToSymmetric</code> to <code>true</code> as shown below.</p> <pre><code>name: \"KeyStorePasswordMigrator\"\norder: 9\nparameters:\nschema: \"identity\"\ncurrentEncryptionAlgorithm: \"RSA\"\nmigratedEncryptionAlgorithm: \"RSA/ECB/OAEPwithSHA1andMGF1Padding\"\ntransformToSymmetric: \"true\"\n</code></pre> </li> <li> <p>Under each migrator's parameters, find the property value of currentEncryptionAlgorithm and ensure that it matches the value of the <code>org.wso2.CipherTransformation</code> property found in the <code>&lt;OLD_IS_HOME&gt;/repository/conf/carbon.properties</code> file.</p> </li> </ol> </li> </ol>"},{"location":"identity-server/migration-docs/is-6.1.0/migrate-to-610/#step-2-run-the-migration-client","title":"Step 2: Run the migration client","text":"<p>Note - If you are migrating from WSO2 IS version 6.0.0 to 6.1.0</p> <p>There is no data migration from WSO2 IS version 6.0.0 to 6.1.0, therefore, it is not required to run the migration client to migrate from WSO2 IS 6.0.0 to 6.1.0.</p> <p>However, if you are migrating to WSO2 IS 6.1.0 from WSO2 IS 5.11.0 or a previous version, run the migration client as explained below.</p> <p>To set up the migration resources:</p> <ol> <li>Get the migration client (<code>wso2is-migration-x.x.x.zip</code>) provided by the WSO2 team.</li> <li> <p>Unzip it to a local folder.</p> <p>Note</p> <ul> <li>x.x.x of <code>wso2is-migration-x.x.x.zip</code> denotes the version number of the most recently-released migration resources.</li> <li>The folder of the <code>wso2is-migration-x.x.x.zip</code> will be referred to as <code>&lt;IS_MIGRATION_TOOL_HOME&gt;</code>.</li> </ul> </li> <li> <p>Copy the <code>org.wso2.carbon.is.migration-x.x.x.jar</code> file in the <code>&lt;IS_MIGRATION_TOOL_HOME&gt;/dropins</code> folder to the <code>&lt;NEW_IS_HOME&gt;/repository/components/dropins</code> folder.</p> </li> <li> <p>Copy the migration-resources\u00a0folder to the <code>&lt;NEW_IS_HOME&gt;</code> root folder.</p> </li> </ol>"},{"location":"identity-server/migration-docs/is-6.1.0/migrate-to-610/#dry-run","title":"Dry run","text":"<p>Before doing the actual migration, it is recommended to do a dry run and analyze the generated report for any recommendations related to the migration. </p> <p>Dry-run capability of the migrator allows you to validate the system for the user store configurations and to generate a report regarding the migration compatibility. If there are any warnings in the migration report, it is recommended to contact WSO2 support to identify the best migration strategy.</p> <p>Follow the steps given below to perform the dry run.</p> <ol> <li> <p>Configure the migration report path using the <code>reportPath</code> value in the <code>&lt;IS_HOME&gt;/migration-resources/migration-config.yaml</code> file. </p> <p>Info</p> <p>Use one of the following methods when configuring the report path:  </p> <ul> <li>Create a text file. Provide the absolute path for that text file for all <code>reportPath</code> parameters. All results from the dry run will be appended to this text file.</li> <li>Create separate directories to store dry run reports of every migrator having the <code>reportPath</code> parameter. Provide the absolute paths of these directories for the <code>reportPath</code> of the relevant migrator. Dry run result of each migrator will be created in their specific report directories according to the timestamp.</li> </ul> <p>Important</p> <p>The <code>reportPath</code> should be added under a <code>parameters</code> attribute in the <code>migration-config.yaml</code> file. The <code>reportPath</code> attribute and, in some cases, the <code>parameters</code> attribute is commented out by default. Both these attributes should be uncommented and the report path value should be added as a string for all migrators which support dry run within the current IS version and the target IS version.</p> </li> <li> <p>Run the migration utility with the <code>dryRun</code> system property:</p> <ul> <li> <p>On Linux/MacOS</p> <pre><code>sh wso2server.sh -Dmigrate -Dcomponent=identity -DdryRun\n</code></pre> </li> <li> <p>On Windows</p> <pre><code>wso2server.bat -Dmigrate -Dcomponent=identity -DdryRun\n</code></pre> </li> </ul> </li> </ol> <p>Once this is executed, you can analyze the generated report that resides in the provided location.</p>"},{"location":"identity-server/migration-docs/is-6.1.0/migrate-to-610/#set-up-the-databases","title":"Set up the databases","text":"<p>Note the following database requirements before running the migration tool.</p> <ul> <li> <p>If you are using PostgreSQL</p> <p>During the migration, the \"uuid-ossp\" extension is created in the database. To create this extension, the database user should have the 'Superuser' permission. If the user is not already a super user, assign the permission before starting the migration.</p> <pre><code>ALTER USER &lt;user&gt; WITH SUPERUSER;\n</code></pre> </li> <li> <p>If you are using DB2</p> <p>Verify that the indexes are in the TS32K tablespace. If not, move indexes to the TS32K tablespace. The index tablespace in the <code>IDN_OAUTH2_ACCESS_TOKEN</code>  and <code>IDN_OAUTH2_AUTHORIZATION_CODE</code> tables need to be\u00a0moved\u00a0to the existing TS32K tablespace in order to support newly added table indexes. </p> <p>The <code>SQLADM</code> or <code>DBADM</code> authority is required in order to invoke the <code>ADMIN_MOVE_TABLE</code> stored procedure. You must also have the appropriate object creation authorities, including authorities to issue the SELECT statement on the source table and to issue the INSERT statement on the target table.</p> <ul> <li> <p>Stored procedure</p> <p>Replace the <code>&lt;TABLE_SCHEMA_OF_IDN_OAUTH2_ACCESS_TOKEN_TABLE&gt;</code> and <code>&lt;TABLE_SCHEMA_OF_IDN_OAUTH2_AUTHORIZATION_CODE_TABLE&gt;</code> tags with the respective schema for the table. </p> <pre><code>CREATE BUFFERPOOL BP32K IMMEDIATE SIZE 250 AUTOMATIC PAGESIZE 32K;\n\nCREATE LARGE TABLESPACE TS32K PAGESIZE 32K MANAGED by AUTOMATIC STORAGE BUFFERPOOL BP32K;\n\nCALL SYSPROC.ADMIN_MOVE_TABLE(\n&lt;TABLE_SCHEMA_OF_IDN_OAUTH2_ACCESS_TOKEN_TABLE&gt;,\n'IDN_OAUTH2_ACCESS_TOKEN',\n(SELECT TBSPACE FROM SYSCAT.TABLES WHERE TABNAME = 'IDN_OAUTH2_ACCESS_TOKEN' AND TABSCHEMA = &lt;TABLE_SCHEMA_OF_IDN_OAUTH2_ACCESS_TOKEN_TABLE&gt;),\n'TS32K',\n(SELECT TBSPACE FROM SYSCAT.TABLES WHERE TABNAME = 'IDN_OAUTH2_ACCESS_TOKEN' AND TABSCHEMA = &lt;TABLE_SCHEMA_OF_IDN_OAUTH2_ACCESS_TOKEN_TABLE&gt;),\n'',\n'',\n'',\n'',\n'',\n'MOVE');\n\nCALL SYSPROC.ADMIN_MOVE_TABLE(\n&lt;TABLE_SCHEMA_OF_IDN_OAUTH2_AUTHORIZATION_CODE_TABLE&gt;,\n'IDN_OAUTH2_AUTHORIZATION_CODE',\n(SELECT TBSPACE FROM SYSCAT.TABLES WHERE TABNAME = 'IDN_OAUTH2_AUTHORIZATION_CODE' AND TABSCHEMA = &lt;TABLE_SCHEMA_OF_IDN_OAUTH2_AUTHORIZATION_CODE_TABLE&gt;),\n'TS32K',\n(SELECT TBSPACE FROM SYSCAT.TABLES WHERE TABNAME = 'IDN_OAUTH2_AUTHORIZATION_CODE' AND TABSCHEMA = &lt;TABLE_SCHEMA_OF_IDN_OAUTH2_AUTHORIZATION_CODE_TABLE&gt;),\n'',\n'',\n'',\n'',\n'',\n'MOVE');\n</code></pre> </li> </ul> <p>If you recieve an error due to missing <code>SYSTOOLSPACE</code> or <code>SYSTOOLSTMPSPACE</code> tablespaces, create those tablespaces manually using the following script prior to executing the stored procedure given above: </p> <pre><code>CREATE TABLESPACE SYSTOOLSPACE IN IBMCATGROUP\nMANAGED BY AUTOMATIC STORAGE USING STOGROUP IBMSTOGROUP\nEXTENTSIZE 4;\n\nCREATE USER TEMPORARY TABLESPACE SYSTOOLSTMPSPACE IN IBMCATGROUP\nMANAGED BY AUTOMATIC STORAGE USING STOGROUP IBMSTOGROUP\nEXTENTSIZE 4;\n</code></pre> <p>For more information, see SYSTOOLSPACE and SYSTOOLSTMPSPACE table spaces in the IBM documentation.</p> </li> </ul>"},{"location":"identity-server/migration-docs/is-6.1.0/migrate-to-610/#set-up-the-client","title":"Set up the client","text":"<p>To set up the migration client for execution, apply the following configurations to the <code>&lt;NEW_IS_HOME&gt;/migration-resources/migration-config.yaml</code> file:</p> <p>Note</p> <p>The <code>currentVersion</code> is the current WSO2 Identity Server version that you are using.</p> <p>The <code>migrateVersion</code> value should be <code>6.0.0</code> even if you migrate to <code>6.1.0</code>. This is because there is no data migration from WSO2 IS 6.0.0 to WSO2 IS 6.1.0.</p> <pre><code>migrationEnable: \"true\"\n\ncurrentVersion: \"5.11.0\"\n\nmigrateVersion: \"6.0.0\"\n</code></pre> <ul> <li> <p>If you have multiple tenants and multiple user stores and you only need to migrate a few of them, use the configurations given below.</p> Property Name Description migrateAll Migrate all the tenants and all the user store domains in it. This is set to <code>true</code> by default. </li> <li> <p>If you are only migrating a few tenants, apply the configurations given below. </p> <p>Info</p> <p>Note that <code>Tenant-param</code> is a place holder to represent a unique tenant, e.g., tenant1.</p> <pre><code>-\nname: \"UserIDMigrator\"\norder: 7\nparameters:\n    &lt;tenant-param&gt;:\n</code></pre> <p>Given below are the parameters you can use in the above configuration:</p> Property Name Description tenantDomain (Mandatory) Domain name of the tenant. increment (Optional) Number of users to be updated in each iteration. startingPoint (Optional) This denotes from where the migration should start (Offset). This is useful if the migration stopped in the middle and needs to restart. scimEnabled (Optional) Specifies whether SCIM is enabled for user stores in this tenant. migratingDomains (Optional) List of comma-separated domain names that should be migrated to this domain. forceUpdateUserId (Optional) Marks whether user IDs should be updated if there is an existing ID. isSeparateRegistryDB (Optional) Used for handling registry DBs that are hosted separately. The default value is false. If you have config and gov dbs (registry dbs) separately hosted, the value has to be changed to true. </li> <li> <p>If the user store is an LDAP and SCIM is enabled for that userstore, migrating that userstore is not required. As SCIM creates a user ID for the users in that user store, the SCIM ID can be used as the unique user ID. To do that, change <code>user_id_attribute</code> to the value of the SCIM ID, in the <code>&lt;IS_HOME&gt;/repository/conf/deployment.toml</code> file.</p> </li> </ul>"},{"location":"identity-server/migration-docs/is-6.1.0/migrate-to-610/#run-the-client","title":"Run the client","text":"<p>Now, let's run the migration client to upgrade the databases.</p> <ol> <li> <p>Start the WSO2 Identity Server 6.1.0 with the following command to execute the migration client.</p> <ul> <li> <p>Linux/Unix:</p> <pre><code>sh wso2server.sh -Dmigrate -Dcomponent=identity\n</code></pre> </li> <li> <p>Windows:</p> <pre><code>wso2server.bat -Dmigrate -Dcomponent=identity\n</code></pre> </li> </ul> </li> <li> <p>Restart the server once the migration client execution is complete.</p> </li> </ol>"},{"location":"identity-server/migration-docs/is-6.1.0/migrate-to-610/#step-3-optional-migrate-secondary-user-stores","title":"Step 3: (Optional) Migrate secondary user stores","text":"<p>These steps should be carried out for the old database before the migration. A backup of the UM database should be taken and database triggers should be set to update the backup database based on the updates of the live database. After performing the following steps, the backup database should be migrated to the next version:</p> <ol> <li> <p>If you have JDBC secondary user stores with SCIM disabled, execute the following queries on the UM database: </p> <p>Info</p> <p>This adds a <code>UM_USER_ID</code> column to the <code>UM_USER</code> table with a random <code>UUID</code> as the default value for <code>UM_USER_ID</code>.</p> <ul> <li>Postgresql</li> </ul> <pre><code>/* User should have the Superuser permission */\nCREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";\n\nALTER TABLE UM_USER\n    ADD COLUMN UM_USER_ID CHAR(36) DEFAULT uuid_generate_v4(),\n    ADD CONSTRAINT UM_USER_UUID_CONSTRAINT UNIQUE(UM_USER_ID);\n</code></pre> <ul> <li>Oracle</li> </ul> <pre><code>ALTER TABLE UM_USER\n    ADD (\n        UM_USER_ID CHAR(36) DEFAULT LOWER(regexp_replace(rawtohex(sys_guid()), '([A-F0-9]{8})([A-F0-9]{4})([A-F0-9]{4})([A-F0-9]{4})([A-F0-9]{12})', '\\1-\\2-\\3-\\4-\\5')))\n/\n\nALTER TABLE UM_USER ADD UNIQUE (UM_USER_ID)\n/\n</code></pre> <ul> <li>Oracle_rac</li> </ul> <pre><code>ALTER TABLE UM_USER\n    ADD (\n        UM_USER_ID CHAR(36) DEFAULT LOWER(regexp_replace(rawtohex(sys_guid()), '([A-F0-9]{8})([A-F0-9]{4})([A-F0-9]{4})([A-F0-9]{4})([A-F0-9]{12})', '\\1-\\2-\\3-\\4-\\5')))\n/\n\nALTER TABLE UM_USER ADD UNIQUE (UM_USER_ID)\n/\n</code></pre> <ul> <li> <p>MySQL   <pre><code>ALTER TABLE UM_USER ADD COLUMN UM_USER_ID CHAR(36) NOT NULL DEFAULT 'NONE';\nUPDATE UM_USER SET UM_USER_ID = UUID();\nALTER TABLE UM_USER ADD UNIQUE(UM_USER_ID, UM_TENANT_ID);\n</code></pre></p> </li> <li> <p>MySQL_cluster</p> </li> </ul> <pre><code>ALTER TABLE UM_USER ADD COLUMN UM_USER_ID CHAR(36) NOT NULL DEFAULT 'NONE';\nUPDATE UM_USER SET UM_USER_ID = UUID();\nALTER TABLE UM_USER ADD UNIQUE(UM_USER_ID, UM_TENANT_ID);\n</code></pre> <ul> <li>MS SQL</li> </ul> <pre><code>ALTER TABLE UM_USER\n    ADD UM_USER_ID CHAR(36) DEFAULT LOWER(NEWID()) NOT NULL,\n    UNIQUE(UM_USER_ID);\n</code></pre> <ul> <li> <p>H2   <pre><code>ALTER TABLE UM_USER ADD COLUMN (UM_USER_ID CHAR(36) DEFAULT RANDOM_UUID());\nALTER TABLE UM_USER ADD UNIQUE (UM_USER_ID);\n</code></pre></p> </li> <li> <p>DB2   <pre><code>CREATE OR REPLACE FUNCTION NEWUUID()\nRETURNS CHAR(36)\nBEGIN\n    DECLARE @UUID CHAR(32);\n    SET @UUID=LOWER(HEX(RAND()*255) || HEX(RAND()*255));\n    RETURN LEFT(@UUID,8)||'-'||\n        SUBSTR(@UUID,9,4)||'-'||\n        SUBSTR(@UUID,13,4)||'-'||\n        SUBSTR(@UUID,17,4)||'-'||\n        RIGHT(@UUID,12);\nEND\n/\n\nALTER TABLE UM_USER ADD COLUMN UM_USER_ID CHAR(36) NOT NULL DEFAULT 'NONE'\n/\nCALL SYSPROC.ADMIN_CMD('REORG TABLE UM_USER')\n/\n\nUPDATE UM_USER SET UM_USER_ID = NEWUUID()\n/\nCALL SYSPROC.ADMIN_CMD('REORG TABLE UM_USER')\n/\n</code></pre></p> </li> </ul> </li> <li> <p>If you have JDBC secondary user stores with SCIM enabled, execute the following queries on the UM database.</p> <ul> <li>PostgreSQL</li> </ul> <pre><code>SELECT DISTINCT t.ATTRIBUTE_NAME\n    FROM IDN_CLAIM_MAPPED_ATTRIBUTE AS t\n    WHERE t.LOCAL_CLAIM_ID IN (SELECT t2.MAPPED_LOCAL_CLAIM_ID\n    FROM IDN_CLAIM_MAPPING AS t2\n    JOIN IDN_CLAIM AS t1\n    ON t1.ID = t2.EXT_CLAIM_ID\n    WHERE t1.CLAIM_URI = 'urn:ietf:params:scim:schemas:core:2.0:id');\n</code></pre> <ul> <li>Oracle</li> </ul> <pre><code>select DISTINCT t.ATTRIBUTE_NAME\n    FROM IDN_CLAIM_MAPPED_ATTRIBUTE t\n      WHERE t.LOCAL_CLAIM_ID IN ( SELECT t2.MAPPED_LOCAL_CLAIM_ID\n      FROM IDN_CLAIM_MAPPING t2\n      JOIN IDN_CLAIM t1\n      ON t1.ID = t2.EXT_CLAIM_ID\n      WHERE t1.CLAIM_URI = 'urn:ietf:params:scim:schemas:core:2.0:id'   \n)\n/\n</code></pre> <ul> <li>MySQL</li> </ul> <pre><code>SELECT DISTINCT t.ATTRIBUTE_NAME \n  FROM IDN_CLAIM_MAPPED_ATTRIBUTE t \n  WHERE t.LOCAL_CLAIM_ID IN(\n  SELECT t2.MAPPED_LOCAL_CLAIM_ID\n  FROM IDN_CLAIM_MAPPING t2 \n  JOIN IDN_CLAIM t1\n  ON t1.ID = t2.EXT_CLAIM_ID \n  WHERE t1.CLAIM_URI ='urn:ietf:params:scim:schemas:core:2.0:id' \n) ;\n</code></pre> <ul> <li>MS SQL</li> </ul> <pre><code>SELECT DISTINCT t.ATTRIBUTE_NAME \n    FROM IDN_CLAIM_MAPPED_ATTRIBUTE AS t\n    WHERE t.LOCAL_CLAIM_ID IN ( SELECT t2.MAPPED_LOCAL_CLAIM_ID\n    FROM IDN_CLAIM_MAPPING AS t2\n    JOIN IDN_CLAIM AS t1\n    ON t1.ID = t2.EXT_CLAIM_ID\n    WHERE t1.CLAIM_URI = 'urn:ietf:params:scim:schemas:core:2.0:id'\n);\n</code></pre> </li> <li> <p>Based on the result of the above query, follow the relevant instructions given below.  </p> <ul> <li> <p>If the result of the above query is <code>scimId</code>, execute the following queries to update <code>UM_USER_ID</code> of <code>UM_USER</code> with a SCIM Id based on the mapped attribute <code>scimId</code>:</p> <p>Info</p> <p>If the result of the above query is <code>scimId</code>, it means that the default mapped attribute (scimId) of <code>http://wso2.org/claims/userid</code> or the default local claim (<code>http://wso2.org/claims/userid</code>) mapped to the <code>urn:ietf:params:scim:schemas:core:2.0:id</code> claim is not updated in your WSO2 IS.  </p> <ul> <li>PostgreSQL</li> </ul> <pre><code>CREATE OR REPLACE FUNCTION update_um_user_id()    returns int \nLANGUAGE plpgsql\nAS $$\nDECLARE \ncount_rows int;\ncur_um_attr cursor for select T2.um_attr_value, T1.um_id\n          from um_user_attribute  T2\n            join um_user T1\n            on T1.um_Id = T2.um_user_id \n            where T2.um_attr_name ='scimId';\n\nrec_um_attr RECORD;       \nBEGIN\n  count_rows = 0; \n  open cur_um_attr;\n    LOOP\n          fetch cur_um_attr into rec_um_attr;\n      exit when not found;\n\n        update um_user\n        set um_user_id=rec_um_attr.um_attr_value\n        where um_id = rec_um_attr.um_id;  \n\n    count_rows = count_rows + 1;\n    END LOOP;         \n  close cur_um_attr;\nreturn count_rows;        \nEND;\n$$;\nselect update_um_user_id();\nCREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";\nupdate um_user set um_user_id=uuid_generate_v4() where um_user_id = 'N';\n</code></pre> <ul> <li>Oracle</li> </ul> <pre><code>DECLARE\nv_um_attr_value varchar2(100);\nv_um_id number;\nCURSOR cur_um_attr IS\n      select T2.um_attr_value, T1.um_id\n        from um_user_attribute  T2\n          join um_user T1\n          on T1.um_Id = T2.um_user_id \n          where T2.um_attr_name ='scimId';    \nBEGIN \n\n  OPEN cur_um_attr;\n  LOOP\n    FETCH cur_um_attr INTO v_um_attr_value, v_um_id;\n      IF cur_um_attr%NOTFOUND THEN\n              EXIT;\n            END If;\n\n          update um_user\n      set um_user_id = v_um_attr_value\n      where um_id =  v_um_id;     \n\n  END LOOP;\n  CLOSE cur_um_attr; \n\nEND;\n/\n</code></pre> <ul> <li>My SQL</li> </ul> <pre><code>ALTER TABLE UM_USER ADD COLUMN UM_USER_ID CHAR(36) NOT NULL DEFAULT 'NONE';\nALTER TABLE UM_USER ADD UNIQUE(UM_USER_ID, UM_TENANT_ID);\nDELIMITER $$\nCREATE FUNCTION update_um_user_id() RETURNS int\nDETERMINISTIC \nBEGIN\n  DECLARE count_rows int;\n  DECLARE um_usr_attr_value varchar(100);\n  DECLARE um_id int;\n  DECLARE done INT DEFAULT FALSE;\n  DECLARE cur_um_attr CURSOR FOR \nSELECT\n  T2.UM_ATTR_VALUE,\n  T1.UM_ID \nFROM\n  UM_USER_ATTRIBUTE T2 \n  JOIN\n      UM_USER T1 \n      ON T1.UM_ID = T2.UM_USER_ID \nWHERE\n  T2.UM_ATTR_NAME = 'scimId';\nDECLARE CONTINUE HANDLER FOR NOT FOUND \nSET\n  done = TRUE;\nSET\n  count_rows = 0;\nOPEN cur_um_attr;\nread_loop: loop FETCH cur_um_attr INTO um_usr_attr_value,\num_id;\nIF done \nTHEN\n  LEAVE read_loop;\nEND\nIF;\nUPDATE\n  UM_USER \nSET\n  UM_USER_ID = um_usr_attr_value \nWHERE\n  UM_ID = um_id;\nSET\n  count_rows = count_rows + 1;\nEND\nloop;\nCLOSE cur_um_attr;\nRETURN count_rows;\nEND\n$$ DELIMITER ;\nSELECT\n  update_um_user_id();\nUPDATE\n  UM_USER \nSET\n  UM_USER_ID = UUID() \nWHERE\n  UM_USER_ID IS NULL;\n</code></pre> <ul> <li>MS SQL</li> </ul> <pre><code>IF NOT EXISTS(SELECT * FROM sys.columns WHERE Name = 'UM_USER_ID' \n          AND object_id = OBJECT_ID('UM_USER'))\nBEGIN\nALTER TABLE UM_USER ADD UM_USER_ID CHAR(36) DEFAULT 'N' \nEND\nBEGIN\n  DECLARE @count_rows int\n  DECLARE @um_attr_value varchar(100)\n  DECLARE @um_id int\n\n    DECLARE cur_um_attr CURSOR LOCAL FOR select T2.UM_ATTR_VALUE, T1.UM_ID\n          from UM_USER_ATTRIBUTE T2\n            join UM_USER T1\n            on T1.UM_ID = T2.UM_USER_ID \n            where T2.um_attr_name ='scimId'       \n\n  SET @count_rows = 0\n\n  OPEN cur_um_attr    \n  -- loop through a cursor\n  FETCH NEXT FROM cur_um_attr INTO @um_attr_value, @um_id\n    WHILE @@FETCH_STATUS = 0\n        BEGIN     \n        update UM_USER \n        set UM_USER_ID = @um_attr_value\n        where UM_ID =  @um_id \n\n      SET @count_rows = @count_rows + 1\n      FETCH NEXT FROM cur_um_attr INTO @um_attr_value, @um_id\n    END   \n\n  CLOSE cur_um_attr\nEND;\n\nupdate UM_USER set UM_USER_ID =LOWER(NEWID())  where UM_USER_ID='N' ;\n</code></pre> </li> <li> <p>If the result of the above query is something different from <code>scimId</code>, execute the following queries to update <code>UM_USER_ID</code> of <code>UM_USER</code> with a SCIM Id based on the updated mapped attribute. </p> <p>Info</p> <p>This means that the local claim mapped to the <code>urn:ietf:params:scim:schemas:core:2.0:id</code> claim is different from <code>http://wso2.org/claims/userid</code> or the mapped attribute for the local claim <code>http://wso2.org/claims/userid</code> is different from <code>scimId</code>.</p> <ul> <li>PostgreSQL</li> </ul> <pre><code>CREATE OR REPLACE FUNCTION update_um_user_id()    returns int \nLANGUAGE plpgsql\nAS $$\nDECLARE \ncount_rows int;\ncur_um_attr CURSOR FOR SELECT T2.um_attr_value, T1.um_id \n  FROM   um_user_attribute T2 \n  JOIN   um_user T1 \n  ON     T1.um_id = T2.um_user_id \n  WHERE  T2.um_attr_name IN \n        ( \n                SELECT T.attribute_name \n                FROM   idn_claim_mapped_attribute AS T \n                WHERE  T.local_claim_id IN \n                      (      SELECT T3.mapped_local_claim_id \n                              FROM   idn_claim_mapping AS T3 \n                              JOIN   idn_claim         AS T4 \n                              ON     T4.id = T3.ext_claim_id \n                              WHERE  T4.claim_uri = 'urn:ietf:params:scim:schemas:core:2.0:id') );\n\nrec_um_attr RECORD;       \nBEGIN\n  count_rows = 0; \n  open cur_um_attr;\n    LOOP\n          fetch cur_um_attr into rec_um_attr;\n      exit when not found;\n\n        update um_user\n        set um_user_id=rec_um_attr.um_attr_value\n        where um_id = rec_um_attr.um_id;  \n\n    count_rows = count_rows + 1;\n    END LOOP;         \n  close cur_um_attr;\nreturn count_rows;        \nEND;\n$$;\nselect update_um_user_id();\nCREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";\nupdate um_user set um_user_id=uuid_generate_v4() where um_user_id = 'N';\n</code></pre> <ul> <li>Oracle</li> </ul> <pre><code>DECLARE\nv_um_attr_value varchar2(100);\nv_um_id number;\nCURSOR cur_um_attr IS\n        select DISTINCT t.ATTRIBUTE_NAME\n        FROM IDN_CLAIM_MAPPED_ATTRIBUTE t\n          WHERE t.LOCAL_CLAIM_ID IN ( SELECT t2.MAPPED_LOCAL_CLAIM_ID\n          FROM IDN_CLAIM_MAPPING t2\n          JOIN IDN_CLAIM t1\n          ON t1.ID = t2.EXT_CLAIM_ID\n          WHERE t1.CLAIM_URI = 'urn:ietf:params:scim:schemas:core:2.0:id'   \n)\n\nBEGIN \n\n  OPEN cur_um_attr;\n  LOOP\n    FETCH cur_um_attr INTO v_um_attr_value, v_um_id;\n      IF cur_um_attr%NOTFOUND THEN\n              EXIT;\n            END If;\n\n          update um_user\n      set um_user_id = v_um_attr_value\n      where um_id =  v_um_id;     \n\n  END LOOP;\n  CLOSE cur_um_attr; \n\nEND;\n/\n</code></pre> <ul> <li>My SQL</li> </ul> <pre><code>ALTER TABLE UM_USER ADD COLUMN UM_USER_ID CHAR(36) NOT NULL DEFAULT 'NONE';\nALTER TABLE UM_USER ADD UNIQUE(UM_USER_ID, UM_TENANT_ID);\nDELIMITER $$ CREATE FUNCTION update_um_user_id() RETURNS int DETERMINISTIC \nBEGIN\n  DECLARE count_rows int;\n  DECLARE um_usr_attr_value varchar(100);\n  DECLARE um_id int;\n  DECLARE done INT DEFAULT FALSE;\n  DECLARE cur_um_attr CURSOR FOR \nSELECT\n  T2.UM_ATTR_VALUE,\n  T1.UM_ID \nFROM\n  UM_USER_ATTRIBUTE T2 \n  join\n      UM_USER T1 \n      on T1.UM_ID = T2.UM_USER_ID \nWHERE\n  T2.UM_ATTR_NAME in \n  (\n      SELECT\n        T.ATTRIBUTE_NAME \n      FROM\n        IDN_CLAIM_MAPPED_ATTRIBUTE as T \n      WHERE\n        T.LOCAL_CLAIM_ID in \n        (\n            SELECT\n              T3.MAPPED_LOCAL_CLAIM_ID \n            FROM\n              IDN_CLAIM_MAPPING as T3 \n              JOIN\n                  IDN_CLAIM as T4 \n                  on T4.ID = T3.EXT_CLAIM_ID \n            WHERE\n              T4.CLAIM_URI = 'urn:ietf:params:scim:schemas:core:2.0:id' \n        )\n  )\n;\nDECLARE CONTINUE HANDLER FOR NOT FOUND \nSET\n  done = TRUE;\nSET\n  count_rows = 0;\nOPEN cur_um_attr;\nread_loop: loop FETCH cur_um_attr INTO um_usr_attr_value,\num_id;\nIF done \nTHEN\n  LEAVE read_loop;\nEND\nIF;\nUPDATE\n  UM_USER \nSET\n  UM_USER_ID = um_usr_attr_value \nWHERE\n  UM_ID = um_id;\nSET\n  count_rows = count_rows + 1;\nEND\nloop;\nCLOSE cur_um_attr;\nRETURN count_rows;\nEND\n$$ DELIMITER ;\nSELECT\n  update_um_user_id();\nUPDATE\n  UM_USER \nSET\n  UM_USER_ID = UUID() \nWHERE\n  UM_USER_ID IS NULL;\n</code></pre> <ul> <li>MS SQL</li> </ul> <pre><code>IF NOT EXISTS(SELECT * FROM sys.columns WHERE Name = 'UM_USER_ID' \n          AND object_id = OBJECT_ID('UM_USER'))\nBEGIN\nALTER TABLE UM_USER ADD UM_USER_ID CHAR(36) DEFAULT 'N' \nEND\nBEGIN\n  DECLARE @count_rows int\n  DECLARE @um_attr_value varchar(100)\n  DECLARE @um_id int\n\n    DECLARE cur_um_attr CURSOR LOCAL FOR SELECT T2.um_attr_value, T1.um_id \n      FROM um_user_attribute T2 \n      JOIN um_user T1 \n      ON T1.um_id = T2.um_user_id \n      WHERE  T2.um_attr_name \n          IN (SELECT T.attribute_name \n                          FROM   idn_claim_mapped_attribute AS T \n                          WHERE  T.local_claim_id IN \n                                  (SELECT T3.mapped_local_claim_id \n                                  FROM   idn_claim_mapping AS T3 \n                                  JOIN idn_claim AS T4 \n                                  ON T4.id = T3.ext_claim_id \n                                  WHERE T4.claim_uri = 'urn:ietf:params:scim:schemas:core:2.0:id'))           \n\n  SET @count_rows = 0\n        OPEN cur_um_attr  \n  -- loop through a cursor\n  FETCH NEXT FROM cur_um_attr INTO @um_attr_value, @um_id\n    WHILE @@FETCH_STATUS = 0\n        BEGIN     \n        UPDATE UM_USER \n    SET UM_USER_ID = @um_attr_value\n    where UM_ID =  @um_id \n\n    SET @count_rows = @count_rows + 1\n    FETCH NEXT FROM cur_um_attr INTO @um_attr_value, @um_id\n      END     \n\n  CLOSE cur_um_attr\nEND;\n\nUPDATE UM_USER SET UM_USER_ID =LOWER(NEWID())  WHERE UM_USER_ID='N' ;\n</code></pre> </li> </ul> </li> </ol>"},{"location":"identity-server/migration-docs/is-6.1.0/migrate-to-610/#step-4-verify-the-migration","title":"Step 4: Verify the migration","text":"<p>After the migration is complete, proceed to the following verification steps:</p> <ul> <li>Monitor the system health (CPU, memory usage etc).</li> <li>Monitor the WSO2 logs to see if there are errors logged in the log files.</li> <li>Run functional tests against the migrated deployment to verify that all the functionalities are working as expected.</li> </ul> <p>Note</p> <ul> <li>If you see any problems in the migrated system, revert the traffic to the previous setup and investigate the problem.</li> <li>If the id token validation for the Console and My Account applications are failing, see the section on Validation of issuer in .well-known endpoint URL in the What Has Changed in IS 6.1.0 document.</li> </ul>"},{"location":"identity-server/migration-docs/is-6.1.0/migrate-to-610/#step-5-after-migration","title":"Step 5: After migration","text":"<p>If you are using the data cleanup scripts to perform data purging, use the latest cleanup scripts or cleanup scripts specific to the migrated version. You can find the latest cleanup scripts from here.</p>"},{"location":"identity-server/migration-docs/is-6.1.0/migrating-to-log4j2/","title":"Migrating to Log4j2","text":"<p>From kernel 4.5.x onwards the carbon.logging jar is not packed and the pax-logging-api is used instead. With this upgrade the log4j version is also updated to log4j2.</p> <p>Warning</p> <p>Note that WSO2 Identity Server 5.9.0, 5.10.0, and 5.11.0 are affected by the Log4j2 zero-day vulnerability, which has been reported to WSO2 on 10th December 2021. You can mitigate this vulnerability in your product by following our instructions and guidelines.</p> <p>Refer to the following steps for log4j2 migration.</p> <ol> <li> <p>Replace carbon logging or commons.logging dependencies with pax-logging dependency.</p> <pre><code>&lt;!-- Pax Logging --&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.ops4j.pax.logging&lt;/groupId&gt;\n    &lt;artifactId&gt;pax-logging-api&lt;/artifactId&gt;\n    &lt;version&gt;${pax.logging.api.version}&lt;/version&gt;\n&lt;/dependency&gt;\n\n&lt;!-- Pax Logging Version --&gt;\n&lt;pax.logging.api.version&gt;1.10.1&lt;/pax.logging.api.version&gt;\n</code></pre> </li> <li> <p>If log4j dependency is directly used:</p> <ul> <li> <p>Option 1</p> <p>Replace log4j dependency with log4j2 dependency and rewrite the loggers accordingly.</p> <pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;org.ops4j.pax.logging&lt;/groupId&gt;\n    &lt;artifactId&gt;pax-logging-log4j2&lt;/artifactId&gt;\n    &lt;version&gt;${pax.logging.log4j2.version}&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre> </li> <li> <p>Option 2</p> <p>Replace log4j dependency with pax-logging dependency and rewrite the loggers using commons.logging accordingly.</p> </li> </ul> </li> <li> <p>If <code>commons.logging</code> is imported using Import-Package add the version range.</p> <pre><code>org.apache.commons.logging; version=\"${commons.logging.version.range}\"\n\n\n&lt;commons.logging.version.range&gt;[1.2.0,2.0.0)&lt;/commons.logging.version.range&gt;\n</code></pre> </li> <li> <p>Change appenders in the log4j2.properties file and add the appender to the appenders list.</p> <pre><code>appender.CARBON_LOGFILE.type = RollingFile\nappender.CARBON_LOGFILE.name = CARBON_LOGFILE\nappender.CARBON_LOGFILE.fileName = ${sys:carbon.home}/repository/logs/wso2carbon.log\nappender.CARBON_LOGFILE.filePattern = ${sys:carbon.home}/repository/logs/wso2carbon-%d{MM-dd-yyyy}.log\nappender.CARBON_LOGFILE.layout.type = PatternLayout\nappender.CARBON_LOGFILE.layout.pattern = TID: [%tenantId] [%appName] [%d] %5p [%c] - %m%ex%n\nappender.CARBON_LOGFILE.policies.type = Policies\nappender.CARBON_LOGFILE.policies.time.type = TimeBasedTriggeringPolicy\nappender.CARBON_LOGFILE.policies.time.interval = 1\nappender.CARBON_LOGFILE.policies.time.modulate = true\nappender.CARBON_LOGFILE.policies.size.type = SizeBasedTriggeringPolicy\nappender.CARBON_LOGFILE.policies.size.size=10MB\nappender.CARBON_LOGFILE.strategy.type = DefaultRolloverStrategy\nappender.CARBON_LOGFILE.strategy.max = 20\nappender.CARBON_LOGFILE.filter.threshold.type = ThresholdFilter\nappender.CARBON_LOGFILE.filter.threshold.level = DEBUG\n\nappenders = CARBON_LOGFILE, CARBON_CONSOLE, AUDIT_LOGFILE, ATOMIKOS_LOGFILE, CARBON_TRACE_LOGFILE, CARBON_MEMORY, \nDELETE_EVENT_LOGFILE, TRANSACTION_LOGFILE\n</code></pre> </li> <li> <p>Add logger in the log4j2.properties file and add the logger to the loggers list.</p> <pre><code>logger.&lt;Logger_Name&gt;.name = &lt;Component_name&gt;\nlogger.&lt;Logger_Name&gt;.type = INFO\n</code></pre> <p>Then add the  to the loggers list by comma-separate. <pre><code>logger.org-wso2-carbon-identity-core.name = org.wso2.carbon.identity.core\nlogger.org-wso2-carbon-identity-core.level = INFO\n\nloggers = org-wso2-carbon-identity-core, trace-messages, org-apache-coyote,com-hazelcast\n</code></pre>"},{"location":"identity-server/migration-docs/is-6.1.0/migration-process/","title":"Migration Process","text":"<p>This section contains the complete migration process related to WSO2 Identity Server. Go through the guidelines given below before attempting to migrate the production environment.</p>"},{"location":"identity-server/migration-docs/is-6.1.0/migration-process/#recommendations","title":"Recommendations","text":"<ol> <li> <p>If you already have a WSO2 subscription, reach out to our support team through  your support account.</p> </li> <li> <p>Always migrate to the latest version      since the latest fixes and new features are available in the newest version. If you have a particular      requirement to migrate to an intermediate version, contact      WSO2 Support.</p> </li> </ol> <p>Note</p> <p>Migrating the production environment requires additional hardware/VM resources since both the old environment and the new environment will be running until all the traffic is routed to the new environment.</p>"},{"location":"identity-server/migration-docs/is-6.1.0/migration-process/#do-you-have-a-custom-requirement","title":"Do you have a custom requirement?","text":"<p>If your customizations are already available in the latest version, you can remove the  customization after migration. You can contact WSO2 Support for assistance. However, if a custom requirement is not available in the latest version, follow the steps given below to migrate the customizations.</p> <ul> <li>First, update the dependency version of the dependent WSO2 components and re-build the customized component.</li> <li>As a practice, WSO2 does not make API changes in minor releases of the dependency jars. However, if there are API changes, update the custom code and rebuild.</li> <li>For more information about migrating customizations, see the document on Migrating to WSO2 IS 6.1.0.</li> </ul>"},{"location":"identity-server/migration-docs/is-6.1.0/migration-process/#step-by-step-instructions","title":"Step-by-step instructions","text":"<p>Follow the steps given below once you have followed the steps above to migrate customizations OR if you do not have any custom requirements.</p> <p>Recommendation</p> <p>When you follow the above steps, you can get a rough estimate of the time for the final production update, and you can allocate time slots as per the above analysis. WSO2 recommends performing the migration while the system is under minimum traffic.</p> <ol> <li> <p>List down the functional and nonfunctional use cases in your deployment and create test cases for them. </p> <p>Important</p> <p>This step is crucial to verify that the migrated environment works as expected.     </p> </li> <li> <p>Make sure that all the properties in the <code>&lt;IS_HOME&gt;/repository/conf/deployment.toml</code> file, such as the database configurations, are set to the correct values based on the requirement.</p> </li> <li> <p>Identify the configuration migrations required for the new setup. For more information, see the document on What Has Changed in IS 6.1.0.</p> </li> <li> <p>Prepare a test setup of the migrating version with customizations and necessary config changes, and  test your functional and non-functional requirements.</p> </li> <li> <p>Before starting the migration, run the token and session  cleanup scripts  in the databases of the environment if you are not doing regular cleanups.</p> <p>Info</p> <p>Clean-up scripts can be found in the relevant db folder in <code>&lt;IS-HOME&gt;/dbscripts/identity/stored-procedures</code></p> </li> <li> <p>Start the migration from the lowest environment, such as dev, and continue up to the highest before the production  such as pre-prod. </p> </li> <li> <p>Run the test cases in the migrated environments to confirm that your functional and nonfunctional  requirements are met in the migrated environment.</p> </li> <li> <p>Prior to the production migration, run a pilot migration on your pre-prod environment. It would be  ideal if the pre-prod environment is similar to the production environment.</p> <ul> <li>If possible, restore a database dump of the production environment to the pre-prod environment and  perform the pilot migration.</li> <li>If the production database dump cannot be used, at least ensure that you have a sufficient amount  of data in the database to mimic the production environment.</li> </ul> </li> <li> <p>Once you are satisfied with the above steps, proceed with production migration.</p> </li> <li> <p>After the migration is complete, verify it using the following steps:</p> <ul> <li>Monitor the system health (CPU, memory usage, etc.).</li> <li>Monitor the WSO2 logs for errors.</li> </ul> </li> </ol> <p>Note</p> <p>If you see any problems in the migrated system, revert the traffic back to the previous setup and investigate the problem.</p>"},{"location":"identity-server/migration-docs/is-6.1.0/prepare-for-migration/","title":"Preparing for migration","text":"<p>Before you start the migration, see the instructions given here.</p> <p>Note</p> <p>In this section, <code>&lt;OLD_IS_HOME&gt;</code> is the directory where the current WSO2 Identity Server resides in, and <code>&lt;NEW_IS_HOME&gt;</code> is the directory where WSO2 Identity Server 6.1.0 resides in.</p>"},{"location":"identity-server/migration-docs/is-6.1.0/prepare-for-migration/#prerequisites","title":"Prerequisites","text":"<ol> <li> <p>Review what has changed in this release. For a detailed list of changes from WSO2 IS version 6.0.0 to 6.1.0, see the document on What Has Changed in WSO2 IS 6.1.0.</p> </li> <li> <p>Before you migrate, refer to the Migration Process document to get an understanding of the migration process.</p> </li> <li> <p>You can use the Update Management Tool (UMT) to get any fixes or latest updates for this release.</p> </li> <li> <p>Take a backup of the existing database used by the current WSO2 Identity Server. This backup is necessary in case the migration causes any issues in the existing database.</p> </li> <li> <p>Before proceeding with the migration, change the following property to <code>false</code> in the <code>&lt;NEW_IS_HOME&gt;/repository/conf/deployment.toml</code> file.</p> <pre><code>[super_admin]\ncreate_admin_account = false </code></pre> </li> </ol> <p>Note</p> <ul> <li>If you are migrating from a version below IS 5.9.0 with a JDBC primary userstore configured, use the following configuration to disable the use of Unique ID Userstore Managers during the migration.</li> </ul> <pre><code>[user_store]\ntype = \"database\"\n</code></pre> <p>As the former (non-unique ID) userstore managers are no longer supported, this configuration must be changed to the Unique ID Userstore Manager after the migration is complete to ensure proper functionality in IS 6.1.0 by using the configuration below.</p> <pre><code>[user_store]\ntype = \"database_unique_id\"\n</code></pre> <ul> <li>If you are migrating from a version below IS 5.10.0, disable the Groups and Roles Separation feature during the migration.</li> </ul> <p><pre><code>[authorization_manager.properties]\nGroupAndRoleSeparationEnabled = false\n</code></pre>   After the migration is complete, change this configuration to enable the feature.</p> <ul> <li>It is recommended to run the token cleanup scripts before migration to clean the expired, inactive, and revoked tokens/codes. This reduces the time taken for migration.</li> </ul>"},{"location":"identity-server/migration-docs/is-6.1.0/prepare-for-migration/#prepare-for-groups-and-roles-separation","title":"Prepare for Groups and Roles separation","text":"<p>With WSO2 Identity Server 5.11.0, groups and roles are separated. For more information, see the document on What Has Changed in 5.11.0.</p> <p>However, you may or may not have opted not to use the new groups and roles feature in your WSO2 IS 5.11.0 deployment. When you migrate from WSO2 IS 5.11.0 to WSO2 IS 6.1.0, you can choose whether to continue with the old functionality or to switch to the new groups and roles functionality.</p> <p>Backward compatibility</p> <p>Groups and role separation improvements bring enhanced clarity, and improved performance to the product. All of these improvements and behavioral changes are introduced in a way that existing deployments can adapt to the new state as easily as possible.</p> <p>However, it\u2019s inevitable to bring all the goodness with zero compromises. Therefore, if you opt to use this, some applications, customizations, and integration flows might need some changes to fully adapt to these improvements. Alternatively, you can choose to disable this functionality in WSO2 IS 6.1.0 and continue to use the old way of working.</p>"},{"location":"identity-server/migration-docs/is-6.1.0/prepare-for-migration/#overview","title":"Overview","text":"<p>Following changes have been made to the product claims.</p> Claim Change Description wso2.role Modified <ul> <li>Removed supported by default.</li> <li>Updated display name to Roles and groups.</li> <li>Updated description to Include both userstore groups and internal roles.</li> </ul> wso2.roles New <ul> <li>Display name: Roles.</li> <li>AttributionID Roles.</li> <li>Description Roles.</li> </ul> wso2.roles New <ul> <li>Display name: Roles.</li> <li>AttributionID Roles.</li> <li>Description Roles.</li> <li>Supported by default configured as <code>true</code>.</li> <li>read-only configured as <code>true</code>.</li> </ul> wso2.groups Modified <ul> <li>Supported by default configured as <code>true</code>.</li> <li>read-only configured as <code>true</code>.</li> </ul> OIDC group Modified              Mapped local claim to the <code>wso2.groups</code> claim.          OIDC roles New              Mapped to the <code>wso2.roles</code> local claim.          SCIM2 roles.default Modified              Mapped to the <code>wso2.roles</code> local claim.          <p>Note that the following abbreviations are used in the sections below.</p> <ul> <li>wso2.role claim = http://wso2.org/claims/role</li> <li>wso2.roles claim = http://wso2.org/claims/roles</li> <li>wso2.groups claim = http://wso2.org/claims/groups</li> </ul>"},{"location":"identity-server/migration-docs/is-6.1.0/prepare-for-migration/#enable-groups-and-roles-separation","title":"Enable Groups and Roles separation","text":"<p>If you want to use the new groups and roles functionality in WSO2 IS 6.1.0, consider the following recommendations.</p> <p>Note</p> <ul> <li>All claim configurations are already configured OOTB in the fresh pack and will be done via the migration client for migrating deployments. No need to configure these manually.</li> <li>Any custom external claim mapped to the wso2.role claim should be mapped to either wso2.roles or wso2.groups claim as per the requirement of the custom use case.</li> <li>Our recommendation is to fix any consuming client to become compatible with these changes. But if somehow the above configs need to be reverted (possibly in a migrated deployment), it can be done via the Identity Server Claim Management REST APIs.</li> </ul> <ul> <li> <p>Utilizing carbon kernel level support</p> <p>The following abstract userstore manager APIs: <code>getUserClaimValues()</code>, <code>getUsersClaimValues()</code>,  <code>getUserClaimValuesWithID()</code>, <code>getUsersClaimValuesWithID()</code> now support both <code>wso2.roles</code> and <code>wso2.groups</code> claims properly. We recommend modifying custom extensions to request wso2.roles or wso2.groups via the above APIs rather depending on wso2.role claim.</p> </li> <li> <p>Service provider role mapping and identity provider role mapping restrictions</p> <p>We recommend removing existing SP and IdP role mappings that use groups, and utilize roles to achieve the same functionality.</p> </li> <li> <p>OIDC group claim return groups</p> <p>OIDC group claim does not return internal roles anymore. We recommend modifying applications and custom extensions to utilize this behavior. If roles are required, use the OIDC roles claim.</p> </li> <li> <p>Obtaining roles via the SAML assertion</p> <p>We recommend applications and custom extensions to switch from wso2.role to the wso2.roles claim in the SAML assertion.</p> </li> <li> <p>SCIM2 roles.default claim returns roles and groups claim return groups</p> <p>Previously, the <code>roles.default</code> claim in SCIM2 returned both groups and roles as it was mapped to the wso2.roles claim. It is now mapped to the <code>wso2.roles</code> claim, where only roles are returned. In order to get groups, <code>urn:ietf:params:scim:schemas:core:2.0:User:groups</code> claim should be used instead since, with this improvement, it is returning groups as intended.</p> </li> <li> <p>Groups and roles in SCIM2 user response</p> <p>Previously users and roles in the SCIM2 user response returned as a single comma-separated entity. However, that has changed, and now they return as separate complex entities. We recommend modifying clients that consume this response.</p> </li> </ul>"},{"location":"identity-server/migration-docs/is-6.1.0/prepare-for-migration/#disable-groups-and-roles-separation","title":"Disable Groups and Roles separation","text":"<p>If it's mandatory to preserve previous behavior and avoid enabling the improvements mentioned above, follow the steps given below.</p> <ol> <li> <p>Add the following configuration (enabled by default) to the <code>&lt;IS-Home&gt;/repository/conf/deployment.toml</code> file.</p> <pre><code>[authorization_manager.properties]\ngroup_and_role_separation_improvements_enabled = false\n</code></pre> <p>Note</p> <p>But this configuration option only ensures that the code-level logic is reverted to the previous behavior. If the improvements are already applied (fresh IS server pack and a migrated pack with group-role migration step completed), these claim configuration changes need to be reverted manually in both tenants and the super-tenant prior to setting the above config to false. To do this, refer to the claim changes introduced with this effort and revert them manually or via a script.</p> </li> <li> <p>To stop claim data migration related to the groups vs roles improvement during the migration, open the <code>claim-config.xml</code> file in the <code>&lt;IS-HOME&gt;/migration-resources/6.0.0/data/6/</code> directory and remove the following claims that are related to groups and roles.</p> <ul> <li> <p>In <code>http://wso2.org/claims</code> dialect:</p> <pre><code>&lt;Claim&gt;\n    &lt;ClaimURI&gt;http://wso2.org/claims/roles&lt;/ClaimURI&gt;\n    &lt;DisplayName&gt;Roles&lt;/DisplayName&gt;\n    &lt;AttributeID&gt;roles&lt;/AttributeID&gt;\n    &lt;Description&gt;Roles&lt;/Description&gt;\n    &lt;SupportedByDefault/&gt;\n    &lt;ReadOnly /&gt;\n&lt;/Claim&gt;\n&lt;Claim&gt;\n    &lt;ClaimURI&gt;http://wso2.org/claims/groups&lt;/ClaimURI&gt;\n    &lt;DisplayName&gt;Groups&lt;/DisplayName&gt;\n    &lt;AttributeID&gt;groups&lt;/AttributeID&gt;\n    &lt;Description&gt;Groups&lt;/Description&gt;\n    &lt;SupportedByDefault /&gt;\n    &lt;ReadOnly /&gt;\n&lt;/Claim&gt;\n&lt;Claim&gt;\n    &lt;ClaimURI&gt;http://wso2.org/claims/role&lt;/ClaimURI&gt;\n    &lt;DisplayName&gt;Roles and groups&lt;/DisplayName&gt;\n    &lt;AttributeID&gt;role&lt;/AttributeID&gt;\n    &lt;Description&gt;Include both userstore groups and internal roles&lt;/Description&gt;\n    &lt;ReadOnly /&gt;\n&lt;/Claim&gt;\n</code></pre> </li> <li> <p>In <code>urn:ietf:params:scim:schemas:core:2.0:User</code> dialect:</p> <pre><code>&lt;Claim&gt;\n    &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:roles.default&lt;/ClaimURI&gt;\n    &lt;DisplayName&gt;Roles&lt;/DisplayName&gt;\n    &lt;AttributeID&gt;roles&lt;/AttributeID&gt;\n    &lt;Description&gt;Roles&lt;/Description&gt;\n    &lt;DisplayOrder&gt;5&lt;/DisplayOrder&gt;\n    &lt;SupportedByDefault /&gt;\n    &lt;MappedLocalClaim&gt;http://wso2.org/claims/roles&lt;/MappedLocalClaim&gt;\n&lt;/Claim&gt;\n</code></pre> </li> <li> <p>In <code>http://wso2.org/oidc/claim</code> dialect:</p> <pre><code>&lt;Claim&gt;\n    &lt;ClaimURI&gt;groups&lt;/ClaimURI&gt;\n    &lt;DisplayName&gt;User Groups&lt;/DisplayName&gt;\n    &lt;AttributeID&gt;role&lt;/AttributeID&gt;\n    &lt;Description&gt;List of group names that have been assigned to the principal. This typically will require a mapping at the application container level to application deployment roles.&lt;/Description&gt;\n    &lt;DisplayOrder&gt;12&lt;/DisplayOrder&gt;\n    &lt;SupportedByDefault /&gt;\n    &lt;MappedLocalClaim&gt;http://wso2.org/claims/groups&lt;/MappedLocalClaim&gt;\n&lt;/Claim&gt;\n&lt;Claim&gt;\n    &lt;ClaimURI&gt;roles&lt;/ClaimURI&gt;\n    &lt;DisplayName&gt;User Roles&lt;/DisplayName&gt;\n    &lt;AttributeID&gt;roles&lt;/AttributeID&gt;\n    &lt;Description&gt;List of role names that have been assigned to the principal. This typically will require a mapping at the application container level to application deployment roles.&lt;/Description&gt;\n    &lt;DisplayOrder&gt;13&lt;/DisplayOrder&gt;\n    &lt;SupportedByDefault /&gt;\n    &lt;MappedLocalClaim&gt;http://wso2.org/claims/roles&lt;/MappedLocalClaim&gt;\n&lt;/Claim&gt;\n</code></pre> </li> </ul> </li> </ol>"},{"location":"identity-server/migration-docs/is-6.1.0/prepare-for-migration/#disabling-versioning-in-the-registry-configuration","title":"Disabling versioning in the registry configuration","text":"<p>If there are frequently updating registry properties, having the versioning enabled for registry resources in the registry can lead to unnecessary growth in the registry-related tables in the database. To avoid this, we have disabled versioning by default from WSO2 Identity Server 6.0.0 onward.</p> <p>Therefore, when migrating to WSO2 IS 6.1.0 from a version prior to IS 6.0.0, it is required to turn off the registry versioning in your current WSO2 IS and run the below scripts against the database that is used by the registry.</p> <p>Turning off registry versioning in your current WSO2 IS and running the scripts</p> <p>Open the <code>registry.xml</code> file in the <code>&lt;OLD_IS_HOME&gt;/repository/conf</code> directory. Set the <code>versioningProperties</code>, <code>versioningComments</code>, <code>versioningTags</code> and <code>versioningRatings</code> false.</p> <pre><code>&lt;staticConfiguration&gt;\n      &lt;versioningProperties&gt;false&lt;/versioningProperties&gt;\n      &lt;versioningComments&gt;false&lt;/versioningComments&gt;\n      &lt;versioningTags&gt;false&lt;/versioningTags&gt;\n      &lt;versioningRatings&gt;false&lt;/versioningRatings&gt;\n&lt;/staticConfiguration&gt;\n</code></pre> <p>Warning</p> <p>If the above configurations are already set as <code>false</code>, you should not run the below scripts.</p> <p>When the above configurations are turned off, we need to remove the versioning details from the database in order for the registry resources to work properly. Select the relevant DB type and run the script against the DB where the registry resides.</p> <p>DB Scripts</p> <p>The following database scripts are provided by the WSO2 team. </p> DB type Script name H2 <code>1_H2.h2.db</code> DB2 <code>2_DB2.db2</code> MSSQL <code>3_MSSQL.sql</code> MySQL <code>4_MySQL.sql</code> Oracle <code>5_Oracle.sql</code> PostgreSQL <code>6_PostgreSQL.sql</code>"},{"location":"identity-server/migration-docs/is-6.1.0/what-has-changed/","title":"What Has Changed","text":"<p>WSO2 Identity Server 6.1.0 brings a range of improvements. The following aspects have changed in WSO2 IS 6.1.0 compared to the previous WSO2 IS versions.</p> <p>This page provides details about the behavioral changes from WSO2 IS version 6.0.0 to 6.1.0.</p> <p>If you are migrating from an older version of Identity Server</p> <p>To find the changes introduced in the previous versions, you can refer to the following documents:  - What Has Changed in IS 6.0.0  - What Has Changed in IS 5.11.0  - What Has Changed in IS 5.10.0  - What Has Changed in IS 5.9.0  - Migrating Configurations to IS 5.8.0 section in the Upgrading From an Older Version of WSO2 IS document</p>"},{"location":"identity-server/migration-docs/is-6.1.0/what-has-changed/#enable-account-locking-for-the-totp-authenticator","title":"Enable account locking for the TOTP authenticator","text":"<p>With WSO2 IS 6.1.0, account locking will be enabled by default for invalid login attempts through the TOTP authenticator. With this change, the user account will be locked if the user tries to log in by entering invalid TOTP codes exceeding the configured maximum failed attempt count.</p> <p>If you need to disable account locking for the TOTP authenticator, add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[authentication.authenticator.totp.parameters]\nEnableAccountLockingForFailedAttempts = false\n</code></pre>"},{"location":"identity-server/migration-docs/is-6.1.0/what-has-changed/#error-headers-of-rest-apis","title":"Error headers of rest APIs","text":"<p>With WSO2 IS 6.1.0, the <code>realm user</code> field will not be available in the <code>www-Authenticate</code> header for rest API error responses.</p> <p>If you need to have the <code>WWW-Authenticate</code> header with the <code>realm user</code> variable, add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[rest_api_authentication]\nadd_realm_user_to_error = true\n</code></pre> <p>Note</p> <p>Even though the above configuration adds the realm user variable, it will not be sent in the 401 error response to adhere to the HTTP specification.</p>"},{"location":"identity-server/migration-docs/is-6.1.0/what-has-changed/#new-email-template-for-account-activation","title":"New email template for account activation","text":"<p>With WSO2 IS 6.1.0, users will receive a confirmation email on successful account activation after a user completes the ask password flow.</p> <p>When you migrate from a previous version, you need to add an email template to be able to use this feature. Be sure to use <code>accountActivationSuccess</code> as the Template Type Display Name for the email template that you add.</p>"},{"location":"identity-server/migration-docs/is-6.1.0/what-has-changed/#adaptive-script-cookie-format-change","title":"Adaptive script cookie format change","text":"<p>With WSO2 IS 6.1.0, the method of encrypting the adaptive script cookie has changed to ensure better security. With this change, the previously created cookies will be invalidated and need to be created again.</p> <p>If you need to revert to the previous behavior where the old cookies remain valid and the older encryption method is used, add the following config to the <code>deployment.toml</code> file.</p> <p>Important</p> <p>In WSO2 IS versions 5.11.0 and 6.0.0, you can use the parameters listed below for the specified methods if you want to use special characters in cookie values. If these parameters are enabled in your WSO2 IS 5.11.0 or WSO2 IS 6.0.0 version, do not use the <code>enableAdaptiveScriptCookieLegacyMode=true</code> configuration in the <code>deployment.toml</code> when you migrate to the latest.</p> Method Parameter <code>setCookie</code> <code>encryptWithoutDecoding : true</code> <code>getCookieValue</code> <code>decryptWithoutEncoding : true</code> <pre><code>[system.parameter]\nenableAdaptiveScriptCookieLegacyMode=true\n</code></pre>"},{"location":"identity-server/migration-docs/is-6.1.0/what-has-changed/#masking-logs","title":"Masking logs","text":"<p>With WSO2 IS 6.1.0, sensitive information on log files are masked at the time of logging.</p> <p>If a user needs to disable the masking, they have to apply the following config into the <code>deployment.toml</code> and restart the server.</p> <pre><code>[masking_logs]\nenabled = false\n</code></pre>"},{"location":"identity-server/migration-docs/is-7.0.0/migrate-to-700/","title":"Migrating to 7.0.0","text":"<p>This document guides you through the migration process from earlier versions of WSO2 Identity Server to Identity Server 7.0.0.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/migrate-to-700/#before-you-begin","title":"Before you begin","text":"<p>See the document on preparing for migration.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/migrate-to-700/#step-1-preparing-the-environment-with-the-new-wso2-is-700-instance","title":"Step 1: Preparing the environment with the new WSO2 IS 7.0.0 instance","text":""},{"location":"identity-server/migration-docs/is-7.0.0/migrate-to-700/#1-download-and-update-the-is-700-pack","title":"1. Download and update the IS 7.0.0 pack.","text":"<p>Note</p> <p>Always migrate to the latest version   to receive the latest fixes and the newest features. If you have a particular   requirement to migrate to an intermediate version, contact   WSO2 Support.</p> <ul> <li>Download the WSO2 IS 7.0.0 pack and unzip it in the  directory. <li>Use the Update Management Tool (UMT) to get the latest updates for this release.</li>"},{"location":"identity-server/migration-docs/is-7.0.0/migrate-to-700/#2-migrating-configurations","title":"2. Migrating configurations.","text":"<p>This is only applicable if you\u2019re migrating from a version prior to 5.9. See the document on  migrating configurations.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/migrate-to-700/#3-migrating-customizations","title":"3. Migrating customizations","text":"<p>Note</p> <p>If your customizations are already available in the latest version, you can remove them after migration. You can contact WSO2 Support for assistance. However, if a custom requirement is not available in the latest version, follow the steps given below to migrate them.</p> <ul> <li>See the document Migrating Customizations to go through the recommendations related to migrating customizations.</li> <li>Update the dependency versions aligning with the new WSO2 IS 7.0.0 versions.</li> <li>Once the custom components are migrated, get the latest JAR files of the custom components.</li> <li>Add the JAR files from the previous WSO2 Identity Server setup to the same path in the new version.</li> </ul> <p>eg: If the particular JAR file was in the <code>&lt;OLD_IS_HOME&gt;/repository/components/dropins</code> directory, add the updated JAR file to the <code>&lt;NEW_IS_HOME&gt;/repository/components/dropins</code> directory.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/migrate-to-700/#4-adding-db-drivers-and-other-jar-files","title":"4. Adding DB drivers and other JAR files","text":"<ul> <li>Add the DB driver inside <code>&lt;NEW_IS_HOME&gt;/repository/components/lib</code> directory.</li> <li>If you have manually added any JAR files to the <code>dropins</code> or <code>lib</code> directories of  OLD IS, you may add those to the <code>&lt;NEW_IS_HOME&gt;/repository/components/dropins</code> or  <code>&lt;NEW_IS_HOME&gt;/repository/components/lib</code> directories accordingly. You may consult the WSO2 team and verify if the particular JAR files are required to be copied.</li> </ul>"},{"location":"identity-server/migration-docs/is-7.0.0/migrate-to-700/#5-copying-other-resources-from-the-old-is-instance","title":"5. Copying other resources from the OLD IS instance","text":"<ul> <li>If you have created secondary user stores in the previous WSO2 Identity Server version, copy the content in the <code>&lt;OLD_IS_HOME&gt;/repository/deployment/server/userstores</code> directory to the <code>&lt;NEW_IS_HOME&gt;/repository/deployment/server/userstores</code> directory.</li> <li>Copy other eventpublishers and eventstreams as required (Only if any of these are used).</li> <li>The <code>&lt;OLD_IS_HOME&gt;/repository/deployment/server/webapps</code> directory should not be copied to the new IS instance.</li> <li>If you have created tenants in the previous WSO2 Identity Server version that contain resources, copy the content from <code>&lt;OLD_IS_HOME&gt;/repository/tenants directory</code>, to the <code>&lt;NEW_IS_HOME&gt;/repository/tenants</code> directory.</li> <li>Copy the <code>.jks</code> files from the <code>&lt;OLD_IS_HOME&gt;/repository/resources/security</code> directory and paste them in the <code>&lt;NEW_IS_HOME&gt;/repository/resources/security</code> directory.</li> <li>From WSO2 Identity Server 5.11.0 onwards, it is required to use a certificate with the RSA key size greater than 2048. If you have used a certificate that has a weak RSA key (key size less than 2048) in the previous IS version, can create a new Keystore having 2048 as the key size. Once created, make sure to point the internal keystore to the keystore that is copied from the previous WSO2 IS. The primary keystore can be pointed to a keystore with a certificate that has a strong RSA key.     <pre><code>[keystore.primary]\nfile_name = \"primary.jks\"\ntype = \"JKS\"\npassword = \"wso2carbon\"\nalias = \"wso2carbon\"\nkey_password = \"wso2carbon\"\n\n[keystore.internal]\nfile_name = \"internal.jks\"\ntype = \"JKS\"\npassword = \"wso2carbon\"\nalias = \"wso2carbon\"\nkey_password = \"wso2carbon\"\n</code></pre></li> <li>Challenge questions feature has been deprecated in WSO2 Identity Server 7.0 and is now available as a connector. If you intend to use this feature, add it as a connector to the product. Additionally, if you are migrating to Identity Server 7.0 from versions prior to 5.3, you are required to complete a migration process by following the provided instructions.</li> </ul> <p>Note</p> <p>Starting with Identity Server 5.3, the challenge questions registry path was updated. If you are migrating from a version prior to IS 5.3, it\u2019s necessary to add the connector before the migration. For IS versions 5.3 and above, the inclusion of the connector is not required as they already utilize the updated registry path.</p> <ol> <li>Download the latest version of the challenge questions connector from the connector store.</li> <li>Configure the connector according to the instructions in the documentation.</li> <li>Add the following configuration to the /migration-resources/migration-config.yaml file under the  migratorConfigs of version 5.3.0. <pre><code>  -\n     name: \"ChallengeQuestionDataMigrator\"\n     order: 8\n     parameters:\n        schema: \"identity\"\n</code></pre>"},{"location":"identity-server/migration-docs/is-7.0.0/migrate-to-700/#6-merging-ui-customizations","title":"6. Merging UI customizations","text":"<p>Note : If the UI customizations are related to branding and themes, we suggest to use branding features in IS 7.0.0 for the UI customizations. Reach out to our support team through your support account for assistance if you have UI customizations and proceed with the best recommendation.</p> <ul> <li>The customizations made in the <code>&lt;OLD_IS_HOME&gt;/repository/deployment/server/webapps</code> directory have to be merged with the default webapps available in the <code>&lt;NEW_IS_HOME&gt;/repository/deployment/server/webapps directory</code>.</li> <li>Do not copy the files from the older instance to the new instance. Instead, merge the custom changes manually to the default files available in the new instance.</li> </ul>"},{"location":"identity-server/migration-docs/is-7.0.0/migrate-to-700/#7-adding-and-updating-server-configurations","title":"7. Adding and updating server configurations","text":"<ul> <li>If you have made any changes to the <code>&lt;OLD_IS_HOME&gt;/repository/conf/deployment.toml</code> file, make sure to add those changes to the <code>&lt;NEW_IS_HOME&gt;/repository/conf/deployment.toml</code> file.</li> <li>Go through the What Has Changed document and add/update configurations to ensure backward compatibility for any behavioral changes in the new IS.</li> </ul>"},{"location":"identity-server/migration-docs/is-7.0.0/migrate-to-700/#step-2-evaluating-the-new-instance","title":"Step 2: Evaluating the new instance","text":"<p>This step intends to check whether the new runtime, using IS 7.0, works properly with the previous customizations and extensions implemented by customers for their use cases.</p> <p>Note As we have not yet completed the migration, your current database schema are not compatible with the new IS runtime. Therefore, use a separate test database which is compatible with IS 7.0 for this evaluation.</p> <ul> <li>Start the new IS instance and verify that the server starts without any issues. Try to resolve any encountered errors or contact WSO2 Support for assistance.</li> <li>Test the basic functionalities, custom components and UI customizations. Try to resolve any encountered issues or contact WSO2 Support for assistance.</li> </ul>"},{"location":"identity-server/migration-docs/is-7.0.0/migrate-to-700/#step-3-configuring-the-migration-resources-and-client","title":"Step 3: Configuring the migration resources and client","text":"<ul> <li>Visit the latest release tag and download the <code>wso2is-migration-x.x.x.zip</code> under Assets. Unzip it to a local directory.</li> <li>Copy the <code>org.wso2.carbon.is.migration-x.x.x.jar</code> file in the <code>&lt;IS_MIGRATION_TOOL_HOME&gt;/dropins</code> directory into the <code>&lt;NEW_IS_HOME&gt;/repository/components/dropins</code> directory.</li> <li>Copy the migration-resources directory to the root directory of <code>&lt;NEW_IS_HOME&gt;</code>.</li> <li>Configure the migration property values accordingly in the <code>&lt;NEW_IS_HOME&gt;/migration-resources/migration-config.yaml</code> file (Enter the current version of WSO2 Identity Server that you are using for <code>currentVersion</code>.)   <pre><code>migrationEnable: \"true\"\ncurrentVersion: \"5.11.0\"\nmigrateVersion: \"7.0.0\"\n</code></pre></li> </ul> <p>Note</p> <p>If you're migrating from a version prior to WSO2 IS 5.11.0, configure SymmetricKeyInternalCryptoProvider as the default internal crypto provider.</p> <ol> <li> <p>Generate your own secret key using a tool like OpenSSL.</p> <p><code>tab=\"Example\"    openssl enc -nosalt -aes-128-cbc -k hello-world -P</code></p> </li> <li> <p>Add the configuration to the <code>&lt;NEW_IS_HOME&gt;/repository/conf/deployment.toml</code> file.</p> <pre><code>[encryption]\nkey = \"&lt;provide-your-key-here&gt;\"\n</code></pre> </li> <li> <p>Open the <code>&lt;NEW_IS_HOME&gt;/migration-resources/migration-config.yaml</code> file and note that the following two migrators are configured under migratorConfigs for 5.11.0:</p> <ul> <li>EncryptionAdminFlowMigrator</li> <li>EncryptionUserFlowMigrator</li> </ul> </li> <li> <p>If you're migrating from a version prior to WSO2 IS 5.6.0, open the <code>&lt;NEW_IS_HOME&gt;/migration-resources/migration-config.yaml</code> file and change the value of <code>transformToSymmetric</code> to <code>true</code> as shown below.</p> <pre><code>name: \"KeyStorePasswordMigrator\"\norder: 9\nparameters:\nschema: \"identity\"\ncurrentEncryptionAlgorithm: \"RSA\"\nmigratedEncryptionAlgorithm: \"RSA/ECB/OAEPwithSHA1andMGF1Padding\"\ntransformToSymmetric: \"true\"\n</code></pre> </li> <li> <p>Under each migrator's parameters, find the property value of currentEncryptionAlgorithm and ensure that it matches the value of the <code>org.wso2.CipherTransformation</code> property found in the <code>&lt;OLD_IS_HOME&gt;/repository/conf/carbon.properties</code> file. </p> </li> </ol>"},{"location":"identity-server/migration-docs/is-7.0.0/migrate-to-700/#step-4-mock-migration","title":"Step 4: Mock migration","text":""},{"location":"identity-server/migration-docs/is-7.0.0/migrate-to-700/#1-preparing-the-database","title":"1. Preparing the database","text":"<ol> <li>Clone the DB used in the current IS instance.</li> <li>Take a backup of the DB (This is required in case any error occurs during the migration).</li> <li>Execute the DB scripts provided at disabling registry versioning section.</li> <li>Update the DB configurations in <code>&lt;NEW_IS_HOME&gt;/repository/conf/deployment.toml</code> file, pointing to the cloned DB.</li> </ol>"},{"location":"identity-server/migration-docs/is-7.0.0/migrate-to-700/#2-performing-dry-run","title":"2. Performing dry run","text":"<p>Before doing the migration, it is recommended to do a dry run and analyze the generated report for any recommendations related to the migration.</p> <p>Dry-run capability of the migrator allows you to validate the system against the user store configurations and to generate a report regarding the migration compatibility. If there are any warnings in the migration report, it is recommended to contact WSO2 support to identify the best migration strategy.</p> <p>Follow the steps given below to perform the dry run.</p> <ol> <li> <p>Configure the migration report path using the <code>reportPath</code> parameter in the <code>&lt;IS_HOME&gt;/migration-resources/migration-config.yaml</code> file.</p> <p>Info</p> <p>Use one of the following methods when configuring the report path:</p> <ul> <li>Create a text file. Provide the absolute path for that text file for all <code>reportPath</code> parameters. All results from the dry run will be appended to this text file.</li> <li>Create separate directories to store dry run reports of each migrator having the <code>reportPath</code> parameter. Provide the absolute paths of these directories for the <code>reportPath</code> of the relevant migrator. Dry run result of each migrator will be created in their specific report directories according to the timestamp.</li> </ul> <p>Important</p> <p>The <code>reportPath</code> should be added under a <code>parameters</code> attribute in the <code>migration-config.yaml</code> file. The <code>reportPath</code> attribute and, in some cases, the <code>parameters</code> attribute is commented out by default. Both these attributes should be uncommented and the report path value should be added as a string for all migrators which support dry run within the current IS version and the target IS version.</p> </li> <li> <p>Run the migration utility with the <code>dryRun</code> system property:</p> </li> <li> <p>On Linux/MacOS</p> <pre><code>sh wso2server.sh -Dmigrate -Dcomponent=identity -DdryRun\n</code></pre> </li> <li> <p>On Windows</p> <pre><code>wso2server.bat -Dmigrate -Dcomponent=identity -DdryRun\n</code></pre> </li> </ol> <p>Once this is executed, you can analyze the generated report that resides in the provided location.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/migrate-to-700/#3-updating-migration-time-configurations","title":"3. Updating migration time configurations","text":"<ul> <li> <p>Add or update the configurations below in the <code>&lt;NEW_IS_HOME&gt;/repository/conf/deployment.toml</code> file.   <pre><code>[super_admin]\n...\ncreate_admin_account = false\n\n[authorization_manager.properties]\nGroupAndRoleSeparationEnabled = false\n</code></pre></p> </li> <li> <p>If you\u2019re using a JDBC primary userstore and the current IS version is IS 5.9 or lower, in order to generate unique IDs for the non-unique ID primary userstore, </p> <ul> <li>If the user count is less than 1000, the user_store type has to be database, during the migration (So that the unique ID will be generated during the migration) </li> <li>If the user count is higher than 1000, you should\u2019ve already generated the unique IDs in the Adding and configuring migration resources section.</li> </ul> </li> </ul> <pre><code>[user_store]\ntype = \"database\"\n</code></pre>"},{"location":"identity-server/migration-docs/is-7.0.0/migrate-to-700/#4-running-the-migration-client","title":"4. Running the migration client","text":"<ol> <li> <p>Start the new WSO2 IS instance with the following command to execute the migration client.</p> </li> <li> <p>On Linux/MacOS</p> <pre><code>sh wso2server.sh -Dmigrate -Dcomponent=identity\n</code></pre> </li> <li> <p>On Windows</p> <pre><code>wso2server.bat -Dmigrate -Dcomponent=identity\n</code></pre> </li> <li> <p>Stop the server once the migration client execution is completed, without accessing any of the WSO2 IS pages/links.</p> </li> <li>If you run into any errors during migration,</li> <li>Stop the server.</li> <li>Share the <code>&lt;IS_HOME&gt;/repository/logs/wso2carbon.log</code> file with the WSO2 team for analysis.</li> <li>Apply the solution provided by the WSO2 team.</li> <li>Restore the DB with the backup obtained when following the Preparing the database section.</li> <li>Execute the DB scripts provided at disabling registry versioning section.</li> <li>Start the migration again.</li> <li>Once the migration is completed without any errors, revert the Migration-time configurations and change the user_store type to database_unique_id.     <pre><code>[super_admin]\n...\ncreate_admin_account = true\n\n[authorization_manager.properties]\nGroupAndRoleSeparationEnabled = false\n\n[user_store]\ntype = \"database_unique_id\"\n</code></pre></li> <li> <p>Start the server without the migration parameters.</p> </li> <li> <p>On Linux/MacOS</p> <pre><code>sh wso2server.sh\n</code></pre> </li> <li> <p>On Windows</p> <pre><code>wso2server.bat\n</code></pre> </li> </ol>"},{"location":"identity-server/migration-docs/is-7.0.0/migrate-to-700/#5-testing-the-migration","title":"5. Testing the migration","text":"<ul> <li>Test the migration, as per Evaluating the migrated instance section.</li> <li>Report any issues to the WSO2 team and apply the resolution. Do not proceed with the actual migration until all the issues are resolved.</li> <li>If all the test cases are successful, you may proceed with migrating the environment.</li> </ul>"},{"location":"identity-server/migration-docs/is-7.0.0/migrate-to-700/#step-5-actual-migration","title":"Step 5: Actual migration","text":""},{"location":"identity-server/migration-docs/is-7.0.0/migrate-to-700/#1-preparing-the-database_1","title":"1. Preparing the database","text":"<ul> <li>Refer to the Preparing the database section in the Mock migration step.</li> <li>You may define the down time of the system by calculating the time taken for the mock migration.</li> <li>Stop the live instance (No changes are made to the live instance since the migration will be performed on the cloned DB instance. However, the live instance has to be stopped in order to prevent generating new data in the DB, for a down-time migration).</li> </ul>"},{"location":"identity-server/migration-docs/is-7.0.0/migrate-to-700/#2-performing-the-dry-run","title":"2. Performing the dry run","text":"<ul> <li>Refer to the Performing dry run section in the Mock migration step.</li> </ul>"},{"location":"identity-server/migration-docs/is-7.0.0/migrate-to-700/#3-updating-migration-time-configurations_1","title":"3. Updating migration time configurations","text":"<ul> <li>Refer to the Updating migration time configurations section in the Mock migration step.</li> </ul>"},{"location":"identity-server/migration-docs/is-7.0.0/migrate-to-700/#4-running-the-migration-client_1","title":"4. Running the migration client","text":"<ul> <li>Refer to the Running the migration client section in the Mock migration step.</li> <li>You can expect to have no errors during the migration since all the errors should have been detected in the mock migration and resolved. If, on a rare occasion, you do encounter an error, get in touch with the WSO2 team for assistance and plan the next step.</li> </ul>"},{"location":"identity-server/migration-docs/is-7.0.0/migrate-to-700/#5-testing-the-migration_1","title":"5. Testing the migration","text":"<ul> <li>Test the migration, as per Evaluating the migrated instance section (We suggest testing this within the internal network prior to serving the live traffic).</li> <li>Report any issues to the WSO2 team and apply the resolution.</li> <li>If all the test cases are succeeded, you may proceed with serving the live traffic with the migrated environment.</li> <li>You may go for the Rollback Plan, if any critical functionalities are not working as expected.</li> </ul>"},{"location":"identity-server/migration-docs/is-7.0.0/migrate-to-700/#evaluating-the-migrated-instance","title":"Evaluating the migrated instance","text":""},{"location":"identity-server/migration-docs/is-7.0.0/migrate-to-700/#1-testing-the-basic-functionalities","title":"1. Testing the basic functionalities","text":"<ul> <li>Check if the Console is accessible.</li> <li>Monitor the system health (CPU, memory usage etc).</li> <li>Monitor the WSO2 logs to see if there are errors logged in the log files.</li> <li>Perform an authentication flow for any of the applications.</li> </ul>"},{"location":"identity-server/migration-docs/is-7.0.0/migrate-to-700/#2-run-the-test-suite","title":"2. Run the test suite","text":"<ul> <li>Run functional tests against the migrated deployment to verify that all the functionalities are working as expected.</li> <li>Test the authentication flows of all the main applications.</li> </ul>"},{"location":"identity-server/migration-docs/is-7.0.0/migrate-to-700/#3-quality-assurance-of-the-migrated-instance","title":"3. Quality Assurance of the migrated instance","text":"<ul> <li>Verify all the granular level functionalities are working as expected with the help of the QA team.</li> <li>Verify if there are any behavioral changes to be addressed.</li> </ul>"},{"location":"identity-server/migration-docs/is-7.0.0/migrate-to-700/#rollback-plan","title":"Rollback Plan","text":"<ol> <li>Stop the migrated WSO2 IS instance.</li> <li>Start the previous WSO2 IS instance (This should be started as usual, since we haven\u2019t used the DB used by this instance - only the clone is used for the migration process).</li> </ol>"},{"location":"identity-server/migration-docs/is-7.0.0/migrating-applications-for-tenanted-qualified-urls/","title":"Migrating applications for tenanted qualified URLs","text":"<p>Note : This section is only applicable for multi-tenant setups.</p> <p>WSO2 Identity Server 7.0.0 enables tenant qualified URLs and tenanted sessions in the applications. This enables clear isolation between tenants; especially with managing non-conflicting tenant bound user sessions and provides the  capability to easily configure routing rules. </p> <p>The applications used in tenants except the super tenant should be migrated to support the tenant qualified URLs by updating the server endpoints with the tenanted path.</p> <p>For example, the <code>/authorize</code> endpoint for the tenant <code>abc.com</code> should be updated as  <code>https://localhost:9443/t/abc.com/oauth2/authorize</code>.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/migrating-authorization-model/","title":"Migrating Authorization Model","text":"<p>In the prior versions of WSO2 Identity Server, including 6.1.0, the model of roles and permissions/scopes is used for authorization. Authorization of customer scopes is handled using OAuth2 scopes and role bindings. Authorization of system scopes is handled using internal permissions (using scopes corresponding to permissions) and role to permission assignments.</p> <p>From IS 7.0.0 onwards, the above authorization capabilities are facilitated using, - API Resources capable of representing both customer APIs and system APIs and the corresponding scopes. - API authorization capability that allows authorizing API resources to applications. - Role to scope assignments.</p> <p>For more information, Refer to the documentation on API Authorization</p> <p>IS 7.0.0 introduces the V2 implementation of roles with audience support enabling you to create both organization audience roles and application audience roles.</p> <p>For more information, Refer to documentation on Roles</p> <p>Additionally, prior versions of IS including 6.1.0 used IdP role to local role mapping capability for federated user authorization. From IS 7.0.0 onwards, IdP groups capability will be used for the authorization of federated users.</p> <p>For more information, Refer to documentation on Managing connections</p> <p>Additionally, SaaS behavior of the Console and Myaccount applications are changed to non SaaS behavior with the new authorization model.</p> <p>With the above changes to the authorization model, following migrations are needed to be done to migrate the existing authorization model to the new authorization model.</p> <ul> <li>Associating tenants to organizations. (This is needed for providing the B2B capabilities and organization audience support of the roles.)</li> <li>Migrating the existing roles to V2 roles for audience support and assigning the migrated roles to all the applications.</li> <li>Creating system API Resources to represent internal scopes.</li> <li>Representing OAuth2 scopes using an API Resource named <code>User-defined-oauth2-resource</code> created in each tenant.</li> <li>Creating Console and Myaccount applications in each tenant for non SaaS behavior and creating Administrator roles for Console access in each tenant.</li> <li>Authorizing the system APIs to management applications considering previous access level.</li> <li>Authorizing the created API Resource named <code>User-defined-oauth2-resource</code> for OAuth2 scopes in all existing applications.</li> <li>Assigning the internal scopes to roles based on the existing permissions of the roles.</li> <li>Assigning the OAuth2 scopes to roles based on the existing role bindings of the scopes.</li> <li>Migrating the IdP roles to IdP groups and IdP role to local role mappings to IdP groups to local role assignments.</li> <li>Migrating the permissions created in applications if there are scope bindings available for those permissions.</li> </ul> <p>Above migrations related to authorization model change will be handled through the migration client.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/migrating-configurations/","title":"Migrating Configurations","text":"<p>Note : This section is only applicable if you\u2019re migrating from a version prior to WSO2 Identity Server 5.9.0.</p> <p>You need to provide the complete <code>conf</code> directory of the current IS version located at <code>&lt;IS_HOME&gt;/repository/conf</code> to the WSO2 team to migrate it to the latest version.</p> <p>WSO2 team will provide two <code>conf</code> directories as follows:</p> <ol> <li> <p>The evaluation conf directory to use for testing the customizations before the actual migration (In step 1 and step 2 of migrate to 7.0.0).</p> <pre><code>[super_admin]\n...\ncreate_admin_account = \"true\"\n\n[database.identity_db]\ntype = \"h2\"\nurl = \"jdbc:h2:./repository/database/WSO2IDENTITY_DB;DB_CLOSE_ON_EXIT=FALSE;LOCK_TIMEOUT=60000\"\nusername = \"wso2carbon\"\npassword = \"wso2carbon\"\n\n[database.shared_db]\ntype = \"h2\"\nurl = \"jdbc:h2:./repository/database/WSO2IDENTITY_DB;DB_CLOSE_ON_EXIT=FALSE;LOCK_TIMEOUT=60000\"\nusername = \"wso2carbon\"\npassword = \"wso2carbon\"\n</code></pre> </li> <li> <p>The finalized conf directory to use during the migration (In step 4 and step 5 of migrate to 7.0.0). </p> <p>``` [super_admin] ... create_admin_account = \"false\"</p> <p>[authorization_manager.properties] GroupAndRoleSeparationEnabled = false</p> </li> </ol> <p>Replace the evaluation conf directory provided by the WSO2 team with the existing conf directory available in the <code>&lt;NEW_IS_HOME&gt;/repository</code> directory.</p> <p>Make any necessary changes to the <code>deployment.toml</code> file such as keystore passwords (Do not update any DB configurations at this stage).</p>"},{"location":"identity-server/migration-docs/is-7.0.0/migrating-customizations/","title":"Migrating customizations","text":"<p>Note : This section is only applicable if you have customizations in extension points of IS. Reach out to our support team through your support account for assistance with other customizations.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/migrating-customizations/#custom-provisioning-handlers","title":"Custom provisioning handlers","text":"<p>If you have written custom provisioning handlers by implementing <code>ProvisioningHandler</code> interface, you need to implement the <code>handleWithV2Roles</code> method in the <code>ProvisioningHandler</code> interface. This method is used to handle provisioning with V2 roles. The <code>handle</code> method is used to handle provisioning with V1 roles. The <code>handle</code> method is deprecated and it  cannot be used to handle provisioning with V2 roles. Therefore, you need to implement the <code>handleWithV2Roles</code> method to handle provisioning with V2 roles.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/migrating-roles-related-adaptive-script-functions/","title":"Migrating roles related adaptive script functions","text":"<p>With the introduction of V2 roles with audience support, new adaptive script functions are introduced to handle the role-related operations which were previously handled with scripts compatible with the V1 implementation. Although using the previous adaptive script functions will not impact migrating applications, this may result in unexpected behavior with the usage of application audience roles and changes to the roles assigned to the applications. Therefore, it is recommended to migrate the role-related adaptive script functions after the migration. The following adaptive script functions are introduced to handle the role related operations in the new authorization model.</p> <ul> <li><code>assignUserRolesV2</code>: This function is used to assign a V2 role to a user during a dynamic authentication. Previous usages of <code>assignUserRoles</code> function should be migrated to the new <code>assignUserRolesV2</code> function.</li> <li><code>hasAnyOfTheRolesV2</code>: This function is used to check whether the user has any of the given V2 roles. Previous usages of <code>hasAnyOfTheRoles</code> function should be migrated to the new <code>hasAnyOfTheRolesV2</code> function.</li> <li><code>removeUserRolesV2</code>: This function is used to remove a V2 role from a user during a dynamic authentication. Previous usages of <code>removeUserRoles</code> function should be migrated to the new <code>removeUserRolesV2</code> function.</li> </ul>"},{"location":"identity-server/migration-docs/is-7.0.0/migrating-saas-applications/","title":"Migrating SaaS Applications","text":"<p>Note : This section is only applicable if you are using SaaS applications in current setup and if you using the SaaS application to retrieve the system scopes to users.</p> <p>In previous IS versions including 6.1.0, it was possible to create SaaS applications accessible to all users in all the tenants. This functionality enabled users from other tenants to obtain tokens via the application. Further, it was possible to obtain tokens with system scopes based on their roles in the respective tenants through the SaaS application.</p> <p>With WSO2 IS 7.0.0, SaaS applications are deprecated with the introduction of productized B2B capabilities. While users from other tenants can still log in via previous SaaS applications and obtain tokens,  the new authorization model in IS 7.0.0, no longer issue system scopes to the users from other tenants.</p> <p>If you are using SssS applications to issue system scopes to users from other tenants, you need to migrate the existing SaaS applications using one of the below options.</p> <ul> <li>Multi tenant mode - Application must be created in all the tenants. This changes the access URL of the application for the other tenants. IS management APIs need to be authorized and roles need to be assigned to the application.</li> <li>B2B mode - This changes the architecture of the current solution. B2B structure needs to be created and applications must be shared with the relevant organizations.</li> </ul> <p>Reach out to our support team through your support account for assistance.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/migrating-to-log4j2/","title":"Migrating to Log4j2","text":"<p>From kernel 4.5.x onwards the carbon.logging jar is not packed and the pax-logging-api is used instead. With this upgrade the log4j version is also updated to log4j2.</p> <p>Warning</p> <p>Note that WSO2 Identity Server 5.9.0, 5.10.0, and 5.11.0 are affected by the Log4j2 zero-day vulnerability, which has been reported to WSO2 on 10th December 2021. You can mitigate this vulnerability in your product by following our instructions and guidelines.</p> <p>Refer to the following steps for log4j2 migration.</p> <ol> <li> <p>Replace carbon logging or commons.logging dependencies with pax-logging dependency.</p> <pre><code>&lt;!-- Pax Logging --&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.ops4j.pax.logging&lt;/groupId&gt;\n    &lt;artifactId&gt;pax-logging-api&lt;/artifactId&gt;\n    &lt;version&gt;${pax.logging.api.version}&lt;/version&gt;\n&lt;/dependency&gt;\n\n&lt;!-- Pax Logging Version --&gt;\n&lt;pax.logging.api.version&gt;1.10.1&lt;/pax.logging.api.version&gt;\n</code></pre> </li> <li> <p>If log4j dependency is directly used:</p> <ul> <li> <p>Option 1</p> <p>Replace log4j dependency with log4j2 dependency and rewrite the loggers accordingly.</p> <pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;org.ops4j.pax.logging&lt;/groupId&gt;\n    &lt;artifactId&gt;pax-logging-log4j2&lt;/artifactId&gt;\n    &lt;version&gt;${pax.logging.log4j2.version}&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre> </li> <li> <p>Option 2</p> <p>Replace log4j dependency with pax-logging dependency and rewrite the loggers using commons.logging accordingly.</p> </li> </ul> </li> <li> <p>If <code>commons.logging</code> is imported using Import-Package add the version range.</p> <pre><code>org.apache.commons.logging; version=\"${commons.logging.version.range}\"\n\n\n&lt;commons.logging.version.range&gt;[1.2.0,2.0.0)&lt;/commons.logging.version.range&gt;\n</code></pre> </li> <li> <p>Change appenders in the log4j2.properties file and add the appender to the appenders list.</p> <pre><code>appender.CARBON_LOGFILE.type = RollingFile\nappender.CARBON_LOGFILE.name = CARBON_LOGFILE\nappender.CARBON_LOGFILE.fileName = ${sys:carbon.home}/repository/logs/wso2carbon.log\nappender.CARBON_LOGFILE.filePattern = ${sys:carbon.home}/repository/logs/wso2carbon-%d{MM-dd-yyyy}.log\nappender.CARBON_LOGFILE.layout.type = PatternLayout\nappender.CARBON_LOGFILE.layout.pattern = TID: [%tenantId] [%appName] [%d] %5p [%c] - %m%ex%n\nappender.CARBON_LOGFILE.policies.type = Policies\nappender.CARBON_LOGFILE.policies.time.type = TimeBasedTriggeringPolicy\nappender.CARBON_LOGFILE.policies.time.interval = 1\nappender.CARBON_LOGFILE.policies.time.modulate = true\nappender.CARBON_LOGFILE.policies.size.type = SizeBasedTriggeringPolicy\nappender.CARBON_LOGFILE.policies.size.size=10MB\nappender.CARBON_LOGFILE.strategy.type = DefaultRolloverStrategy\nappender.CARBON_LOGFILE.strategy.max = 20\nappender.CARBON_LOGFILE.filter.threshold.type = ThresholdFilter\nappender.CARBON_LOGFILE.filter.threshold.level = DEBUG\n\nappenders = CARBON_LOGFILE, CARBON_CONSOLE, AUDIT_LOGFILE, ATOMIKOS_LOGFILE, CARBON_TRACE_LOGFILE, CARBON_MEMORY, \nDELETE_EVENT_LOGFILE, TRANSACTION_LOGFILE\n</code></pre> </li> <li> <p>Add logger in the log4j2.properties file and add the logger to the loggers list.</p> <pre><code>logger.&lt;Logger_Name&gt;.name = &lt;Component_name&gt;\nlogger.&lt;Logger_Name&gt;.type = INFO\n</code></pre> <p>Then add the  to the loggers list by comma-separate. <pre><code>logger.org-wso2-carbon-identity-core.name = org.wso2.carbon.identity.core\nlogger.org-wso2-carbon-identity-core.level = INFO\n\nloggers = org-wso2-carbon-identity-core, trace-messages, org-apache-coyote,com-hazelcast\n</code></pre>"},{"location":"identity-server/migration-docs/is-7.0.0/migration-process/","title":"Migration Process","text":"<p>This section contains the complete migration process related to WSO2 Identity Server. Go through the guidelines given below before attempting to migrate the production environment.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/migration-process/#recommendations","title":"Recommendations","text":"<ol> <li> <p>If you already have a WSO2 subscription, reach out to our support team through  your support account.</p> </li> <li> <p>Always migrate to the latest version      since the latest fixes and new features are available in the newest version. If you have a particular      requirement to migrate to an intermediate version, contact      WSO2 Support.</p> </li> </ol> <p>Note</p> <p>Migrating the production environment requires additional hardware/VM resources since both the old environment and the new environment will be running until all the traffic is routed to the new environment.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/migration-process/#do-you-have-a-custom-requirement","title":"Do you have a custom requirement?","text":"<p>If your customizations are already available in the latest version, you can remove the  customization after migration. You can contact WSO2 Support for assistance. However, if a custom requirement is not available in the latest version, follow the steps given below to migrate the customizations.</p> <ul> <li>First, update the dependency version of the dependent WSO2 components and re-build the customized component.</li> <li>As a practice, WSO2 does not make API changes in minor releases of the dependency jars. However, if there are API changes, update the custom code and rebuild.</li> <li>For more information about migrating customizations, see the document on Migrating to WSO2 IS 7.0.0.</li> </ul>"},{"location":"identity-server/migration-docs/is-7.0.0/migration-process/#step-by-step-instructions","title":"Step-by-step instructions","text":"<p>Follow the steps given below once you have followed the steps above to migrate customizations OR if you do not have any custom requirements.</p> <p>Recommendation</p> <p>When you follow the steps above, you can estimate the time it takes for the final production update and allocate a time slot accordingly. WSO2 recommends performing the migration when the system is experiencing minimum traffic.</p> <ol> <li> <p>List down the functional and nonfunctional use cases in your deployment and create test cases for them. </p> <p>Important</p> <p>This step is crucial to verify that the migrated environment is working as expected.     </p> </li> <li> <p>Make sure that all the properties in the <code>&lt;IS_HOME&gt;/repository/conf/deployment.toml</code> file, such as the database configurations, are set to the required values.</p> </li> <li> <p>Identify the configuration migrations required for the new setup. For more information, see the document on What Has Changed.</p> </li> <li> <p>Prepare a test setup of the migrating version with customizations and necessary config changes, and  test your functional and non-functional requirements.</p> </li> <li> <p>Before starting the migration, run the token and session  cleanup scripts  in the databases of the environment if you are not doing regular cleanups.</p> <p>Info</p> <p>Clean-up scripts can be found in the relevant db folder in <code>&lt;IS-HOME&gt;/dbscripts/identity/stored-procedures</code></p> </li> <li> <p>Start the migration in your lowest environment, such as dev, and continue up to the one just before the production environment, such as pre-prod. </p> </li> <li> <p>Run the test cases in the migrated environments and verify that your functional and nonfunctional  requirements are met in the migrated environment.</p> </li> <li> <p>Prior to the production migration, run a pilot migration on your pre-prod environment. It would be  ideal if the pre-prod environment is similar to the production environment.</p> <ul> <li>If possible, restore a database dump of the production environment to the pre-prod environment and  perform the pilot migration.</li> <li>If the production database dump cannot be used, at least ensure that you have a sufficient amount  of data in the database to mimic the production environment.</li> </ul> </li> <li> <p>Once you are satisfied with the above steps, proceed with the production migration.</p> </li> <li> <p>After the migration is complete, verify it using the following steps:</p> <ul> <li>Monitor the system health (CPU, memory usage, etc.).</li> <li>Monitor the WSO2 logs for errors.</li> </ul> </li> </ol> <p>Note</p> <p>If you see any problems in the migrated system, revert the traffic back to the previous setup and investigate the problem.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/prepare-for-migration/","title":"Preparing for migration","text":"<p>Before you start the migration, see the instructions given here.</p> <p>Note</p> <p>In this section, <code>&lt;OLD_IS_HOME&gt;</code> is the directory where the current WSO2 Identity Server resides in, and <code>&lt;NEW_IS_HOME&gt;</code> is the directory where WSO2 Identity Server 6.1.0 resides in.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/prepare-for-migration/#prerequisites","title":"Prerequisites","text":"<ol> <li> <p>Review what has changed in this release. For a detailed list of changes from WSO2 IS version 6.1.0 to 7.0.0, see the document on What Has Changed.</p> </li> <li> <p>Before you migrate, refer to the Migration Process document to get an understanding of the migration process.</p> </li> </ol>"},{"location":"identity-server/migration-docs/is-7.0.0/prepare-for-migration/#prepare-for-tenant-qualified-urls-and-tenanted-sessions","title":"Prepare for tenant qualified URLs and tenanted Sessions","text":"<p>Note : This preparation is only applicable if you are migrating from a multi-tenant setup.</p> <p>WSO2 Identity Server now supports tenant-qualified URLs for all the endpoints exposed from the product. This enables clear isolation between tenants; especially with managing non conflicting tenant bound user sessions and provides the capability to easily configure routing rules.</p> <p>Application in tenants except the super tenant should be prepared to support the tenanted qualified URLs.</p> <p>Migration details are included in the Migrating applications for tenanted qualified URLs document. This should be done before the migration process.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/prepare-for-migration/#prepare-for-groups-and-roles-separation","title":"Prepare for Groups and Roles separation","text":"<p>Note : This preparation is only applicable if you are migrating from a prior version before WSO2 Identity Server 5.11.0 or from a new version without enabling group role separation migration.</p> <p>With WSO2 Identity Server 5.11.0, groups and roles are separated. For more information, see the document on What Has Changed in 5.11.0. Also, you may or may not have opted not to use the new groups and roles feature in your WSO2 IS 5.11.0, WSO2 IS 6.0.0 or WSO2 IS 6.1.0 migrations.</p> <p>Note : The group role separation is now mandatory from WSO2 IS 7.0.0 onwards.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/prepare-for-migration/#overview","title":"Overview","text":"<p>Following changes have been made to the product claims.</p> Claim Change Description wso2.role Modified <ul> <li>Removed supported by default.</li> <li>Updated display name to Roles and groups.</li> <li>Updated description to Include both userstore groups and internal roles.</li> </ul> wso2.roles New <ul> <li>Display name: Roles.</li> <li>AttributionID Roles.</li> <li>Description Roles.</li> </ul> wso2.roles New <ul> <li>Display name: Roles.</li> <li>AttributionID Roles.</li> <li>Description Roles.</li> <li>Supported by default configured as <code>true</code>.</li> <li>read-only configured as <code>true</code>.</li> </ul> wso2.groups Modified <ul> <li>Supported by default configured as <code>true</code>.</li> <li>read-only configured as <code>true</code>.</li> </ul> OIDC group Modified              Mapped local claim to the <code>wso2.groups</code> claim.          OIDC roles New              Mapped to the <code>wso2.roles</code> local claim.          SCIM2 roles.default Modified              Mapped to the <code>wso2.roles</code> local claim.          <p>Note that the following abbreviations are used in the sections below.</p> <ul> <li>wso2.role claim = http://wso2.org/claims/role</li> <li>wso2.roles claim = http://wso2.org/claims/roles</li> <li>wso2.groups claim = http://wso2.org/claims/groups</li> </ul>"},{"location":"identity-server/migration-docs/is-7.0.0/prepare-for-migration/#enable-groups-and-roles-separation","title":"Enable Groups and Roles separation","text":"<p>Consider the following with the enablement of the groups and roles separation.</p> <p>Note</p> <ul> <li>All claim configurations are already configured OOTB in the fresh pack and will be done via the migration client for migrating deployments. No need to configure these manually.</li> <li>Any custom external claim mapped to the wso2.role claim should be mapped to either wso2.roles or wso2.groups claim as per the requirement of the custom use case.</li> <li>Our recommendation is to fix any consuming client to become compatible with these changes. But if somehow the above configs need to be reverted (possibly in a migrated deployment), it can be done via the Identity Server Claim Management REST APIs.</li> </ul> <ul> <li> <p>Utilizing carbon kernel level support</p> <p>The following abstract userstore manager APIs: <code>getUserClaimValues()</code>, <code>getUsersClaimValues()</code>, <code>getUserClaimValuesWithID()</code>, <code>getUsersClaimValuesWithID()</code> now support both <code>wso2.roles</code> and <code>wso2.groups</code> claims properly. We recommend modifying custom extensions to request wso2.roles or wso2.groups via the above APIs rather depending on wso2.role claim.</p> </li> <li> <p>Service provider role mapping and identity provider role mapping restrictions</p> <p>We recommend removing existing SP and IdP role mappings that use groups, and utilize roles to achieve the same functionality.</p> </li> <li> <p>OIDC group claim return groups</p> <p>OIDC group claim does not return internal roles anymore. We recommend modifying applications and custom extensions to utilize this behavior. If roles are required, use the OIDC roles claim.</p> </li> <li> <p>Obtaining roles via the SAML assertion</p> <p>We recommend applications and custom extensions to switch from wso2.role to the wso2.roles claim in the SAML assertion.</p> </li> <li> <p>SCIM2 roles.default claim returns roles and groups claim return groups</p> <p>Previously, the <code>roles.default</code> claim in SCIM2 returned both groups and roles as it was mapped to the wso2.roles claim. It is now mapped to the <code>wso2.roles</code> claim, where only roles are returned. In order to get groups, <code>urn:ietf:params:scim:schemas:core:2.0:User:groups</code> claim should be used instead since, with this improvement, it is returning groups as intended.</p> </li> <li> <p>Groups and roles in SCIM2 user response</p> <p>Previously users and roles in the SCIM2 user response returned as a single comma-separated entity. However, that has changed, and now they return as separate complex entities. We recommend modifying clients that consume this response.</p> </li> </ul>"},{"location":"identity-server/migration-docs/is-7.0.0/prepare-for-migration/#disabling-versioning-in-the-registry-configuration","title":"Disabling versioning in the registry configuration","text":"<p>If there are frequently updating registry properties, having the versioning enabled for registry resources in the registry can lead to unnecessary growth in the registry-related tables in the database. To avoid this, we have disabled versioning by default from WSO2 Identity Server 6.0.0 onward.</p> <p>Therefore, when migrating to WSO2 IS 7.0.0 from a version prior to IS 6.0.0, it is required to turn off the registry versioning in your current WSO2 IS and run the below scripts against the database that is used by the registry.</p> <p>Turning off registry versioning in your current WSO2 IS and running the scripts</p> <p>Open the <code>registry.xml</code> file in the <code>&lt;OLD_IS_HOME&gt;/repository/conf</code> directory. Set the <code>versioningProperties</code>, <code>versioningComments</code>, <code>versioningTags</code> and <code>versioningRatings</code> false.</p> <pre><code>&lt;staticConfiguration&gt;\n      &lt;versioningProperties&gt;false&lt;/versioningProperties&gt;\n      &lt;versioningComments&gt;false&lt;/versioningComments&gt;\n      &lt;versioningTags&gt;false&lt;/versioningTags&gt;\n      &lt;versioningRatings&gt;false&lt;/versioningRatings&gt;\n&lt;/staticConfiguration&gt;\n</code></pre> <p>Warning</p> <p>If the above configurations are already set as <code>false</code>, you should not run the below scripts.</p> <p>When the above configurations are turned off, we need to remove the versioning details from the database in order for the registry resources to work properly. Select the relevant DB type and run the script against the DB where the registry resides.</p> <p>DB Scripts</p> <p>The following database scripts are provided by the WSO2 team.</p> DB type Script name H2 <code>1_H2.h2.db</code> DB2 <code>2_DB2.db2</code> MSSQL <code>3_MSSQL.sql</code> MySQL <code>4_MySQL.sql</code> Oracle <code>5_Oracle.sql</code> PostgreSQL <code>6_PostgreSQL.sql</code>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/","title":"What Has Changed","text":"<p>WSO2 Identity Server 7.0.0 brings a range of new features and major improvements. This page provides details about the behavioral changes from WSO2 Identity Server 6.1.0 to 7.0.0.</p> <p>If you are migrating from an older version of Identity Server</p> <p>To find the changes introduced in the previous versions, you can refer to the following documents  - What Has Changed in IS 6.1.0  - What Has Changed in IS 6.0.0  - What Has Changed in IS 5.11.0  - What Has Changed in IS 5.10.0  - What Has Changed in IS 5.9.0  - Migrating the Configurations section in the Upgrading From an Older Version of WSO2 IS document</p>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#significant-changes","title":"Significant Changes","text":""},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#tenant-qualified-urls-and-tenanted-sessions","title":"Tenant qualified URLs and tenanted sessions","text":"<p>WSO2 Identity Server now supports tenant-qualified URLs for all the endpoints exposed from the product. This enables clear isolation between tenants, especially with managing non-conflicting tenant bound user sessions, and provides the capability to easily configure routing rules.</p> <p>This change only impacts deployments with multi tenant setups. Application in other tenants except the super  tenant should be migrated to support the tenant-qualified URLs. Migration impact related details are included in the  Migrating applications for tenanted qualified URLs document.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#authorization-model","title":"Authorization Model","text":"<p>With IS 7.0.0, the authorization model has undergone significant changes. The following are the key changes in the authorization model.</p> Scopes/Permissions representation <p>In prior versions, customer scopes were represented using OAuth2 scopes and system permissions and scopes were represented using internal permissions/scopes as defined in the <code>oauth-scope-binding.xml</code> file. From IS 7.0.0 onwards, both customer scopes and system scopes are represented as API Resources.</p> <p>Migration of the scopes from previous model to the new model is handled through the migration client as explained in the Migrating Authorization Model document.</p> API Authorization <p>In prior versions, scopes are issued for the applications if the user roles are permitted access for the requested scopes. From IS 7.0.0 onwards, scopes should be authorized through the API authorization capability in order to be issued for the applications.</p> <p>Migration of the scopes from previous model to the new model is handled through the migration client as explained in the Migrating Authorization Model document.</p> Roles implementation <p>IS 7.0.0 introduces roles V2 implementation with audience support giving you capability to create both organization audience roles and application audience roles.</p> <p>Migration of the roles from previous model to the new model is handled through the migration client as explained in the Migrating Authorization Model document.</p> <p>Along with the new role V2 implementation, new adaptive script functions are introduced to handle the role-related operations which were previously handled by functions specific to the V1 implementation.</p> <p>Migration of the roles related adaptive script functions needs to be handled as explained in the Migrating Roles Related Adaptive Script Functions document.</p> IdP role to local role mappings <p>In the prior versions, IdP role to local role mappings were used for federated user authorization. In IS 7.0.0, IdP groups capability will be used for the authorization of federated users.</p> <p>Migration of IdP roles to local role mappings to IdP groups to local role assignments is handled through the migration client as explained in the Migrating Authorization Model document.</p> <p>With the IdP Group capability, attribute mapped to local group claim is used as the IdP group attribute. You need to configure the IdP group attribute in the connection configurations using attribute mappings. If you need to use the previous attribute used with the IdP role to local role mappings, you can add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[federated.idp]\nuse_idp_role_claim_as_idp_group_claim=true\n</code></pre> <p>Additionally, IdP role to local role mappings support had the capability to send unmapped roles. Since IdP groups feature uses IdP groups to local role assignments to resolve roles, there is no concept of sending unmapped roles and only local roles with IdP group assignments should be returned. Since IdP role to local role mappings are migrated to IdP group to role assignments, support of sending unmapped roles behaviour incorporating IdP groups is introduced with a backward compatible configuration. When this configuration is enabled, the IdP groups derived using the group attribute during authentication which do not have an IdP group created under the connection will be treated as unmapped roles. To enable this behaviour, add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[idp_role_management]\nreturn_only_mapped_local_roles=false\n</code></pre> <p>Note : We highly recommend not to enable this configuration unless you have a specific requirement to send unmapped roles. If you have already sending unmapped roles using IdP role to local role mappings, we recommend to configure them with IdP groups and local role assignments.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#system-applications","title":"System applications","text":"Console <p>From IS 7.0.0 onwards, the Console application is changed to a non-SaaS behavior model along with the new authorization model. With this change, the Console application will be created for each tenant. Console access urls will be changed to tenant qualified urls.</p> <p>Migration of the Console application is handled through the migration client as explained in the Migrating Authorization Model document.</p> My Account <p>From IS 7.0.0 onwards, the My Account application is changed to a non-SaaS behavior model along with the new authorization model. With this change, the My Account application will be created for each tenant. My Account access urls will be changed to tenant qualified urls.</p> <p>Migration of the My Account application is handled through the migration client as explained in the Migrating Authorization Model document.</p> Management Console <p>From IS 7.0.0 onwards, management console is deprecated in favor of the new console UI with a refreshing look and feel. And it is now only available for a subset of features which are still not available in the new console. This includes XACML policy administration and editor, workflow configurations, key store management, registry configurations, tenant management, consent purpose management, and function libraries.</p> <p>Removed sections include <code>Users and Roles</code> (now replaced by a new <code>Roles</code> section for managing management console permissions), <code>User Stores</code>, <code>Claims</code>, <code>Service Providers</code>, <code>Identity Verification Providers</code>, <code>Identity Providers</code>, <code>Email Templates</code>, <code>OIDC Scopes</code>, <code>Admin Advisory</code>, <code>Remote Logging</code>, and <code>Server Roles</code>. Given these changes, our suggestion is to transition to using the new console, which offers a more streamlined interface and improved functionality.</p> <p>In order to configure the OTP related configurations, resident identity provider UI can be enabled by adding following configuration to <code>deployment.toml</code> file. <pre><code>[resident_idp]\nenable = \"true\"\n</code></pre></p> <p>Note: It is not recommended to update any other resident identity provider configurations from here as the legacy management console will soon be removed. Use the latest console to access up-to-date features and for a safer and a more stable experience.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#other-minor-changes","title":"Other Minor Changes","text":""},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#oauthoidc","title":"OAuth/OIDC","text":"<p>This section contains the updates done to the OAuth/OIDC related features of IS 7.0.0.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#allow-same-oauth-client-id-to-be-used-in-multiple-organizations","title":"Allow same OAuth Client ID to be used in multiple organizations","text":"<p>With IS 7.0.0, OAuth consumer application client IDs are now tenant unique allowing the same client ID to exist in multiple organizations.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#unique-scopes-to-access-the-system-apis","title":"Unique scopes to access the system APIs","text":"<p>With the IS 7.0.0, we have introduced new internal scopes for existing system APIs which shared the same scope in prior versions to maintain the uniqueness.</p> <p>For example: <code>internal_application_mgt_create</code> scope was used for Application Management, OIDC Scope Management, OAuth2 Scope Management, and Dynamic Client Registration API POST calls. From IS 7.0.0, <code>internal_application_mgt_create</code> is only used for Application Management POST calls and new internal scopes are introduced for the other APIs which shared the same scope.</p> <p>With the above mentioned change, clients which used to invoke the system APIs might be impacted due to not getting the scopes to invoke some APIs which were previously invoked using previous scopes. Scopes of the user roles and requested scopes of the clients should be updated accordingly with this change.</p> <p>Since there are changes needed from the clients regarding the requested scopes, we have also provided a backward compatibility configuration for migrating purposes to issue the new scopes which are corresponding to the previous scopes when requesting the previous scopes. You can enable the configuration by adding the following configuration to <code>deployment.toml</code> file. <pre><code>[oauth]\nuse_legacy_scopes_as_alias_for_new_scopes=true\n</code></pre></p> <p>Note: This backward compatible behaviour will be only enforced on the migrating applications. We highly recommend configuring the scope assignments of the roles and the requested scopes of the clients and remove the above configuration since this backward compatible support will be removed in future releases.</p> <p>In addition to the above configuration, we have introduced another backward compatibility configuration to give the same access level for invoking system APIs using authentication handlers like Basic Authentication which previously relied on user permissions. You can enable the configuration by adding the following configuration to <code>deployment.toml</code> file. <pre><code>[oauth]\nuse_legacy_permission_access_for_user_based_auth=true\n</code></pre></p> <p>Note: We highly recommend enabling this configuration only if you have used authentication handlers which previously used user permissions for access control of the system APIs. If you have a requirement to enable the configuration initially with the migration, we also recommend configuring the scope assignments of the roles properly with the new scopes and removing the configuration.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#prevent-issuing-self-service-related-scopes-for-client-credential-grant","title":"Prevent issuing self-service-related scopes for client credential grant","text":"<p>In IS 7.0.0, the <code>internal_login</code> scope, which is used to access the self-service APIs, is no longer issued for the client credential grant. There is no reason for the scope to be issued for the client credential grant as an app is not used to perform any self-service capabilities. Further, issuing the <code>internal_login</code> scope for the client credential grant leads to security issues as well.</p> <p>Users should be aware that this change may affect existing applications, as the omission of the <code>internal_login</code> scope could alter application behavior. It is recommended to review and test affected processes thoroughly to ensure smooth operation and to minimize any potential disruptions this update may bring.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#avoid-sending-redundant-query-parameters-in-the-logout-redirect-url","title":"Avoid sending redundant query parameters in the Logout Redirect URL","text":"<p>In prior IS versions, a successful OIDC logout results in the <code>crId</code> and <code>sp</code> query parameters in the redirect url. With IS 7.0.0, these query parameters are removed from the logout redirect url as they are redundant to be shared with the application.</p> <p>If you have implemented customizations based on these query parameters, or if maintaining the previous behavior is necessary, you can retain the earlier functionality by adding the following configuration to the <code>&lt;IS_HOME&gt;/repository/conf/deployment.toml</code> file.</p> <pre><code>[oauth.oidc] \nallow_additional_params_from_post_logout_redirect_uri=true\n</code></pre>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#avoid-sending-redundant-query-params-in-the-default-consent-page-url","title":"Avoid sending redundant query params in the default consent page URL","text":"<p>In prior versions of IS, the default consent page URL included several query parameters: <code>spQueryParams, application, loggedInUser, tenantDomain, scope, requestedClaims, and userClaimsConsentOnly</code>. However, to mitigate security risks, IS 7.0.0 will no longer include these query parameters.</p> <p>If you have implemented customizations based on these query parameters, or if maintaining the previous behavior is necessary, you can retain the earlier functionality by adding the following configuration to the <code>&lt;IS_HOME&gt;/repository/conf/deployment.toml</code> file.</p> <pre><code>[authentication.endpoint.consent_page_redirect_params] \nallow = true\n</code></pre>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#adjustments-to-access-token-behavior-for-authenticated-clients","title":"Adjustments to Access Token Behavior for Authenticated Clients","text":"<p>In IS 7.0.0, the behavior related to token issuance for authenticated clients has been changed, especially when using grant types such as client credential.</p> <p>Here are the key alterations: 1) Subject Claim Modification: The sub claim of the JWT tokens, when issued for an authenticated client, is now set as the client id of the authenticated application. Previously, the sub claim was set as the user ID of the application owner. 2) Username Field Removal: The username field has been removed from the introspection response for access tokens issued for authenticated clients.</p> <p>These changes might affect existing workflows and systems that rely on the previous token behavior.</p> <p>To facilitate users who wish to retain the previous behavior for backward compatibility, two configurations have been introduced. Set the following configurations to false in the <code>&lt;IS_HOME&gt;/repository/conf/deployment.toml</code> file if you wish to revert to the former behavior.</p> <pre><code>[oauth] \nuse_client_id_as_sub_claim_for_app_tokens=false \nremove_username_from_introspection_response_for_app_tokens=false\n</code></pre>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#avoid-returning-oidc-claims-for-the-client-credential-grant-type","title":"Avoid returning OIDC claims for the client credential grant type","text":"<p>In WSO2 IS 7.0.0, there is a behavioral change regarding the retrieval of OIDC claims for the client credential grant type: OIDC claims are no longer included by default in the JWT token issued for this grant type.</p> <p>To revert to the previous behavior and include OIDC claims, the following configuration can be added to the <code>&lt;IS_HOME&gt;/repository/conf/deployment.toml</code> file.</p> <pre><code>[oauth.grant_type.client_credentials]\nskip_oidc_claims = false\n</code></pre>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#restrict-public-client-support-for-client-credentials-grant-type","title":"Restrict public client support for client credentials grant type","text":"<p>Starting from IS version 7.0.0, the retrieval of an access token using the client credentials grant type for an application defined as a public client will be disabled due to security concerns. This security enhancement is implemented, by default, by setting the <code>PublicClientAllowed</code> property value to false for the client credentials grant type.</p> <p>If the previous behavior is desired, it can be preserved by adding the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[oauth.grant_type.client_credentials] \nallow_public_client=\"true\"\n</code></pre>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#simplified-configuration-for-public-client-support-a-seamless-transition-to-granular-grant-type-settings","title":"Simplified Configuration for Public Client Support: A Seamless Transition to Granular Grant Type Settings","text":"<p>In the latest version of WSO2 Identity Server 7.0.0, we've made improvements to the way you configure support for public clients. Specifically, the process of indicating which grant types should support public client authentication has been refined for better precision and flexibility.</p> <p>In the earlier version, an array configuration was used to specify grant types supporting public client authentication. An example looked like this:</p> <pre><code>[oauth.public_client_support]\ngrant_type_names = [\"customGrant1\"]\n</code></pre> <p>Now, we've introduced a more granular way to configure public client support using a property called <code>PublicClientAllowed</code>. This property accepts a boolean value (true or false) and is applied to each grant type individually. Here's how you can set it up in the new configuration:</p> <pre><code>[[oauth.custom_grant_type]]\nname=\"customGrant1\"\ngrant_handler=\"org.wso2.carbon.identity.oauth2.customGrantHandler\"\ngrant_validator=\"org.wso2.carbon.identity.oauth2.customGrantValidator\"\n[oauth.custom_grant_type.properties]\nPublicClientAllowed=true\n</code></pre> <p>Changes and Migration:</p> <ul> <li>The array configuration for public client support has been removed. If you were using this method, you now need to declare grant types with the new PublicClientAllowed property.</li> <li>Default grant types within Identity Server have been updated with this new property and default values. You can customize these defaults in the <code>deployment.toml</code> file.</li> <li>Public client support for the client credentials grant type is now disabled by default. If needed, you can enable it explicitly in the configuration.</li> </ul> <p>For those who had not specified any grant types using the array and relied on the default behavior where all grant types supported public clients, they will now need to configure each required custom grant type with PublicClientAllowed=true to maintain the same functionality.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#deprecate-revoked-token-headers-from-oauth2revoke-endpoint-response","title":"Deprecate revoked token headers from <code>oauth2/revoke</code> endpoint response","text":"<p>We are updating the response behavior for the <code>oauth2/revoke</code> endpoint. This update involves the deprecation of including revoked token headers in the response. This change is in alignment with the OAuth 2.0 Token Revocation specification (RFC 7009), which specifies that a successful token revocation should result in a 200 status code response and does not mandate the inclusion of revoked tokens in the response headers.</p> <p>Going forward, the <code>oauth2/revoke</code> endpoint will no longer include headers containing revoked tokens in its response. This update simplifies the response structure and adheres to the OAuth 2.0 specification more closely.</p> <p>If the original functionality with revoked token headers in the response is needed, the following configuration can be added to the <code>deployment.toml</code> file:</p> <pre><code>[oauth.revoked_token_headers_in_response] \nenable=true\n</code></pre>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#token-will-not-issues-unregistered-scopes","title":"Token will not issues unregistered scopes","text":"<p>With the IS 7.0.0 release,  all the unregistered scopes will be ignored from the token. if you want to add an unregistered scope, then you have to send a scope that matches the <code>^device_.*</code> regex pattern (like <code>device_1</code>, <code>device_2</code>, etc.). Unregistered scopes that match this pattern are automatically included in the token. However, it's key to understand that these unregistered scopes do not show up on the consent page. This means when a user requests both standard system-registered scopes and a scope that follows the <code>^device_.*</code> pattern, the consent page will only display the system-registered scopes. Despite this, the final token issued will contain both the system-registered scopes and any scopes that align with the <code>^device_.*</code> regex pattern.</p> Disabling the Default Scope Inclusion <p>If the user wants to disable this behavior, they can do it by adding the following configurations into deployment.toml</p> <pre><code>[oauth]\ndrop_unregistered_scopes = \"false\"\nallowed_scopes = []\n</code></pre> <p>Note : If you already have scopes mentioned in allowed_scopes, you do not need to set allowed_scopes = []</p> <p>This change will disable the above-mentioned behavior and issue a token with any random scope.</p> Introducing Custom Scope Patterns <p>If needed, you can also define your own custom scope patterns. To do this, you need to modify the <code>deployment.toml</code> file as shown below</p> <pre><code>[oauth]\nallowed_scopes = [\"^device_.*\", \"&lt;any_custom_regex_pattern&gt;\"]\n</code></pre> <p>With this configuration, the system will recognize both the default regex pattern (<code>^device_.*</code>) and any user-defined custom regex patterns as valid for inclusion in tokens. If you prefer to use only your custom patterns, excluding the default, you can simply remove the <code>^device_.*</code> pattern from the allowed_scopes configuration and include only your specified patterns and scopes. This setup allows for the inclusion of both regex patterns and plain string text in the allowed_scopes configuration.</p> <p>In summary, these configurations offer you flexibility in managing which scopes are included in tokens, be it through the system's default settings or through customized configurations defined in the <code>deployment.toml</code> file.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#saml","title":"SAML","text":"<p>This section contains the updates done to the SAML features of IS 7.0.0.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#adjustments-to-saml-logout-response-signing","title":"Adjustments to SAML Logout Response Signing","text":"<p>In previous versions of WSO2 Identity Server, there was a noticeable difference in handling SAML logout responses between Service Provider (SP) initiated and Identity Provider (IdP) initiated Single Sign-On (SSO) flows. Specifically, while logout responses were signed for SP initiated SSO flows when response signing was enabled, this was not the case for IdP initiated SSO flows.</p> <p>Change in IS 7.0.0: - Standardized Signing Behavior: IS 7.0.0 addresses this inconsistency. Now, if response signing is enabled for a Service Provider, logout responses will be signed for both SP and IdP initiated SSO flows. - Consistent Security Posture: This enhancement ensures a uniform security approach, providing consistent behavior regardless of the SSO flow initiation.</p> <p>Configuration for Previous Behavior: - While this update represents a move towards a more standardized and secure approach, some users may prefer to retain the previous behavior for specific use cases. - Optional Configuration: To opt-out of signing the SAML logout response during IdP initiated SSO flow, users can modify their <code>deployment.toml</code> file with the following setting:</p> <pre><code>[saml] \nenable_saml_idp_init_logout_response_signing = false\n</code></pre>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#passive-sts","title":"Passive STS","text":"<p>This section contains the updates done to the Passive STS features of IS 7.0.0.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#enhanced-security-with-reply-logout-url-validation-in-passivests","title":"Enhanced Security with reply Logout URL Validation in PassiveSTS","text":"<p>In WSO2 Identity Server 7.0.0, we have introduced validation for the logout url for applications configured with WS-Federation (Passive) authentication.</p> <p>We have introduced this to improve security, previously there was no validation for the logout url.</p> <p>A new field is introduced in the WS-Federation (Passive) Configuration to configure the logout reply url and the url in the logout request will be validated against this.</p> <p>Furthermore, in order to perform the validation, the realm parameter must be sent with the logout request. The realm of the passive sts application should be sent as the query parameter <code>wtrealm</code> in the logout request.</p> <p>To revert to the previous behavior and skip the validation, the following configuration can be added to the <code>deployment.toml</code> file:</p> <pre><code>[passive_sts] \nenable_logout_wreply_validation = false\n</code></pre>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#authentication","title":"Authentication","text":"<p>This section contains the updates done to the Authentication features of IS 7.0.0.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#use-a-different-browser-to-open-the-email-magic-link-and-log-in-to-the-app","title":"Use a different browser to open the email magic link and log in to the app","text":"<p>In prior IS versions, the email magic link authenticator was limited to support login to the app by clicking on the link received to email only within the same browser. With IS 7.0.0, email magic link authenticator is enhanced to support login to the app by clicking the link received to the email opened in a different browser.</p> <p>If it is required to keep the earlier behavior without allowing cross-browser support, add the following config to the deployment.toml.</p> <pre><code>[session.nonce.cookie] \ndefault_whitelist_authenticators=[]\n</code></pre>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#avoid-sending-ske-query-parameter-in-the-totp-enroll-flow","title":"Avoid Sending <code>ske</code> Query Parameter in the TOTP Enroll Flow","text":"<p>In IS 7.0.0, the <code>ske</code> query parameter has been removed from the TOTP enrollment flow due to security concerns. This change might impact existing customizations that rely on this query parameter.</p> <p>It's important to note that if there is an existing filter policy configured in the <code>deployment.toml</code> file to exclude parameters from the URL during the authentication flow, this new change will be overridden by the filter policy configuration. In such instances, it is advisable to take steps to include the <code>ske</code> parameter in the exclusion list.</p> <p>For those looking to maintain backward compatibility, adjustments can be made by adding the following configuration:</p> <pre><code>[authentication.endpoint.redirect_params] \nfilter_policy = \"exclude\" \nremove_on_consume_from_api = \"true\" \nparameters = [\"loggedInUser\"]\n</code></pre>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#executing-the-mutual-tls-client-authenticator-as-the-final-client-authenticator","title":"Executing the Mutual TLS Client Authenticator as the final client authenticator","text":"<p>In prior versions of IS, the Mutual TLS client authenticator was being executed before the PrivateKey JWT client authenticator.</p> <p>With onboarding FAPI compliance from IS 7.0.0, the priority of the Mutual TLS client authenticator was changed accordingly so that it will be executed at last once all the other client authenticators have been executed in order to improve the authenticating process.</p> <p>If maintaining the previous client authenticator execution order is necessary, you can retain the earlier functionality by adding the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[event.default_listener.mutual_tls_authenticator] \npriority=158\n</code></pre>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#user-management","title":"User Management","text":"<p>This section contains the updates done to the User Management features of IS 7.0.0.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#allowing-only-case-insensitive-username-filtering-in-ldap-via-scim2-api","title":"Allowing only Case-Insensitive Username Filtering in LDAP via SCIM2 API","text":"<p>In WSO2 Identity Server 7.0.0, modifications have been implemented regarding the handling of username filtering in LDAP searches through the SCIM2 APIs. These alterations specifically involve supporting only case-insensitive username filtering in LDAP searches via the SCIM APIs. The purpose of these adjustments is to align LDAP searches in the Identity Server with the default LDAP searching behavior, which inherently operates in a case-insensitive manner.</p> <p>In earlier versions (6.0 and 6.1) of the Identity Server, the LDAP userstore configuration featured an option named <code>CaseInsensitiveUsernameFiltering</code>. This option was initially introduced to maintain backward compatibility. Upon careful review, it has been determined that the <code>CaseInsensitiveUsernameFiltering</code> configuration deviates from the default LDAP searching behavior. Consequently, in IS 7.0.0, this configuration has been removed.</p> <p>This change implies that any integrations or user practices relying on case-sensitive username filtering in LDAP via SCIM2 API need to be reassessed. Adjustments may be necessary to align with the new case-insensitive filtering approach. Administrators and users should be aware of this change to prevent unexpected behaviors in user search and authentication processes.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#update-api-response-http-status-code-for-locked-user-account-scenarios","title":"Update API Response HTTP Status Code for Locked User Account Scenarios","text":"<p>With the release of version 7.0.0, the Rest API endpoints  now return a <code>401</code> Unauthorized status code for responses related to user account lock scenarios, transitioning from the previously used <code>503</code> Service Unavailable code.</p> <p>This modification is made to ensure that the HTTP response accurately represents the error as related to authentication, in compliance with standard practices for HTTP responses to unauthorized access</p> <p>Users utilizing REST API endpoints requiring authentication should adjust to this change. The shift from a <code>503</code> to a <code>401</code> response necessitates revised handling strategies, emphasizing the need for users to adapt their integration and migration practices accordingly.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#support-for-tenant-level-password-input-validation","title":"Support for Tenant Level Password Input Validation","text":"<p>IS 7.0.0 now provides first-class support for tenant level password input validation to enhance the security of user accounts in WSO2 Identity Server. Administrators can elevate password security effortlessly with this, by configuring intuitive validators for minimum and maximum characters, uppercase, lowercase, and special characters \u2013 providing a seamless and user-friendly experience for robust password protection.</p> <p>With enablement of this feature, password policy validation and user store level password pattern validation will be disabled. You can revert this behavior with following configurations.</p> <pre><code>[identity_mgt.password_policy.password_policy_validation_handler]\nenable=true \n\n[event.default_listener.validation]\nenable=false\n</code></pre>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#improved-secondary-userstore-data-validation","title":"Improved secondary userstore data validation","text":"<p>With the IS 7.0.0 release, the userstore rest api are improved further to validate the input fields with the appropriate regex to avoid incorporating user-controllable data into dynamically evaluated code. Hence it will sanitize the input field based on the regex validation and will reject the input value.</p> <p>This change has been implemented inorder to avoid security vulnerability that occurs when an application allows user input to be evaluated as an expression within a template or within a specific context that supports expression evaluation.</p> <p>Hence with the above improvement, if the value for the userstore property starts with ${ or #{ then it will be sanitized and the input value will be rejected. Hence if the users already have the secondary JDBC userstore with the name, connection name, description and display name with the above pattern, then the user has to be aware of this change and need to do the proper data migration.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#disabling-user-account-recovery-v1-api","title":"Disabling User Account Recovery V1 API","text":"<p>With IS 7.0.0, the User Account Recovery v1 API will be disabled by default. It is recommended to migrate to the User Account Recovery v2 API. For users who still wish to use the v1 API, adjustments to the <code>deployment.toml</code> file are necessary. Add the following configuration to enable the v1 API:</p> <pre><code>[identity_mgt.recovery] \nenable_v1_api = true\n</code></pre>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#retention-of-manually-added-roles-in-jit-provisioned-users","title":"Retention of Manually Added Roles in JIT Provisioned Users","text":"<p>In earlier versions of WSO2 Identity Server, roles manually added to JIT provisioned users were invalidated and removed during subsequent user provisioning processes. This behavior often led to administrative overhead and inconsistency in role management.</p> <p>Update in IS 7.0.0: - Default Configuration Change: To streamline role management and enhance user experience, the default behavior has been modified. Now, the return_manually_added_local_roles configuration is set to true by default. - Effect of the Change: With this update, manually added roles to JIT provisioned users will be retained and not invalidated during subsequent provisioning. This ensures persistence of role assignments, reducing the need for reassigning roles after every provisioning cycle.</p> <p>If you wish to revert to the previous behavior, where the role assignment is removed from the user, set the mentioned configuration to false. To implement this change, add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[idp_role_management] \nreturn_manually_added_local_roles=false\n</code></pre>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#adjustments-to-user-emailmobile-number-update-verification-feature","title":"Adjustments to user email/mobile number update verification feature","text":"<p>In the prior versions of Identity Server, even the user email verification for an updated email address feature was enabled, triggering an email account verification is skipped if the <code>verifyEmail</code> claim is not set to true in the user update request. Similarly sending the SMS OTP verification for an updated mobile number is also skipped if the <code>verifyMobile</code> claim is not set to true in the user update request.</p> <p>With the IS 7.0.0 release, this behavior has been changed. With the new behavior user email/mobile number update verification feature is not depending on the <code>verifyEmail/verifyMobile</code> claim. So it is not needed to send <code>verifyEmail/verifyMobile</code> claim with the user update request for triggering verification mail/sms and it is only needed to enable user email/mobile number update verification feature.</p> <p>To disable this and revert to the previous behavior, add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[identity_mgt.user_claim_update]\nuse_verify_claim = true\n</code></pre>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#reintroducing-allowassociatingtoexistinguser-configuration-for-jit-provisioning","title":"Reintroducing AllowAssociatingToExistingUser configuration for JIT provisioning","text":"<p>In the Identity Server versions prior to wso2-is-6.0.0,  <code>AllowAssociatingToExistingUser</code> configuration was available to configure whether to allow silent JIT provisioning users to associate with existing local users or not.  However, with wso2-is-6.0.0 and wso2-is-6.1.0 product versions this configuration was not included and account linking was enabled by default.</p> <p>With the IS 7.0.0 release this behavior has been changed as we reintroduce the <code>AllowAssociatingToExistingUser</code> configuration which will be disabled by default, not allowing JIT provisioning users to associate with existing local users. To enable the previous behavior of associating to an existing user account, the following configuration has to be added to the <code>deployment.toml</code> file.</p> <pre><code>[authentication.jit_provisioning]\nassociating_to_existing_user=true\n</code></pre>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#disabling-application-level-outbound-provisioning-support","title":"Disabling application level outbound provisioning support.","text":"<p>In IS 7.0.0, the configuration of application-based outbound provisioning has been removed. Only the configuration of organization-level outbound provisioning support is provided, as users are provisioned to the organization. Therefore, outbound provisioning should ideally be triggered at the organization level.</p> <p>If the previous behavior is desired, it can be preserved by adding the following configuration to the <code>deployment.toml</code> file</p> <pre><code>[outbound_provisioning_management]\nenable_application_based_outbound_provisioning=true\n</code></pre>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#providing-group-unique-id-support","title":"Providing Group Unique ID Support","text":"<p>In the prior versions of Identity Server, according to the SCIM2 implementation, the group attributes (group uuid, created date, modified date) are managed by the Identity Server (in IDN_SCIM_GROUP table). Therefore, when an existing userstore with groups is plugged to IS, SCIM2 will not work because the group attributes are not there in IS.</p> <p>With the IS 7.0 release, now the group attributes (group uuid, created date, modified date) are stored and managed in the userstore. So when an existing userstore with groups is plugged to IS, SCIM2 is working properly.</p> <p>To facilitate users who wish to retain the previous behavior for backward compatibility, a userstore property has been introduced. If the property is enabled, then corresponding group meta attributes (group uuid) will be derived from the userstore. If the property is disabled, then the group meta attributed will be derived from the Identity database.</p> <p>To disable group unique id support in the Primary userstore add below configuration to <code>deployment.toml</code> file.</p> <pre><code>[user_store]\nproperties.GroupIDEnabled = false\n</code></pre> <p>To disable group unique id support in the Secondary user stores add below userstore property to the <code>userstore.xml</code>.</p> <pre><code>&lt;Property name=\"GroupIDEnabled\"&gt;false&lt;/Property&gt;\n</code></pre> <p>Note: This backward compatible behavior will be only enforced on the migrating user stores. We highly recommend configuring groupId enabled user stores since this backward compatible support will be removed in future releases.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#claim-mappings","title":"Claim Mappings","text":"<p>This section contains the updates done related to the Claim Mappings in IS 7.0.0.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#changing-custom-claim-mapping-behavior-of-connections-using-authenticators-with-standard-dialect","title":"Changing custom claim mapping behavior of connections using authenticators with standard dialect","text":"<p>In prior versions of Identity Server, when the authenticator of a connection has a standard dialect (Eg: OIDC authenticator which has a standard OIDC dialect), standard dialect is used for the claim mappings and custom claim mappings were ignored. With IS 7.0.0, this behavior was changed to use the custom claim mappings when custom claim mappings configured in the connection. Additionally, standard dialect will be used for the claims which do not have custom claim mappings configured.</p> <p>To enable the previous behavior of using only standard dialect for claim mappings, the following configuration has to be added to the <code>deployment.toml</code> file.</p> <pre><code>[authentication.endpoint]\nenable_custom_claim_mappings=false\n</code></pre> <p>Additionally, if you have already used the following configuration previously to use custom claim mappings instead of standard dialect, additional behavior change of using standard dialect for the claims which do not have custom claim mappings will be introduced as mentioned in the initial description.</p> <pre><code>[authentication.endpoint]\nenable_custom_claim_mappings=true\n</code></pre> <p>To disable only the behavior of using standard dialect for the claims which do not have custom claim mappings configured, the following configuration has to be added to the <code>deployment.toml</code> file.</p> <pre><code>[authentication.endpoint]\nenable_merging_custom_claim_mappings_with_default=false\n</code></pre>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#system-configs","title":"System Configs","text":"<p>This section contains System Configuration related changes of IS 7.0.0.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#changing-the-recovery-callback-url-regex-pattern","title":"Changing the Recovery Callback URL Regex Pattern","text":"<p>In the IS 7.0.0 release, there have been modifications to the default regex patterns for recovery callback URLs. These alterations might impact existing callback URLs that adhere to previous patterns, potentially causing them to break. Previously, the defaultly provided regex pattern for the callback URL of the recovery endpoint would have posed some security vulnerabilities in certain instances, serving more as a sample regex pattern.</p> <p>Old regex pattern: <code>[[&lt;http://localhost:9443&gt;](&lt;http://localhost:9443/&gt;)].**[/authenticationendpoint/login.do]**</code></p> <p>The new regex pattern has been adjusted to: <code>http:\\\\/\\\\/localhost:9443\\\\/.*</code> For users who prefer to maintain the old behavior and utilize the previous regex pattern, the following configuration can be added to the <code>deployment.toml</code> file.</p> <pre><code>[identity_mgt] \ncallback_url = \"[http://localhost:9443].*[/authenticationendpoint/login.do]*\"\n</code></pre>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#transitioning-from-sha1-to-sha256","title":"Transitioning from SHA1 to SHA256","text":"<p>In line with enhancing security, WSO2 Identity Server has replaced default SHA1-based algorithms with more secure SHA256-based algorithms. This change, crucial for maintaining robust security standards, affects various components and flows within the system.</p> <p>Key Changes and Impacts:</p> <ul> <li>SAML IdPs and SPs: Newly created SAML Identity Providers (IdPs) and Service Providers (SPs) will default to SHA256-based signing and digest algorithms.</li> <li>SAML SP Creation via Metadata: New SAML SPs created using a metadata file will automatically use SHA-256 algorithms. To retain SHA1, modify the following configuration in deployment.toml. <pre><code>[saml]\nmetadata.sp_enable_sha256= false\n</code></pre></li> <li>SAML IdP Metadata Signature: The downloaded SAML IdP metadata file will now be signed with the SHA-256 algorithm. This can be reverted with the following configuration. <pre><code>[saml]\nmetadata.idp_enable_sha256= false\n</code></pre></li> <li>Public Methods in IdentityUtil: Methods like getPPIDDisplayValue(), getHMAC(), and generateUUID() will use SHA256 by default. To revert, adjust the [identity_util] settings. <pre><code>[identity_util]\nenable_sha256= false\n</code></pre></li> <li>Certificate Thumbprints: These will now be generated using SHA256. This behavior can be changed in the [cert_thumbprint] configuration. <pre><code>[cert_thumbprint]\nenable_sha256=false\n</code></pre></li> <li>Passive STS Response: The default signing and digest algorithms have shifted to SHA256. To revert to SHA1, use the following configuration. <pre><code>[sts]\nsignature_algorithm = \"&lt;http://www.w3.org/2000/09/xmldsig#rsa-sha1&gt;\"\ndigest_algorithm = \"&lt;http://www.w3.org/2000/09/xmldsig#sha1&gt;\"\n</code></pre></li> <li>OIDC SP Client Secrets: For newly created OIDC SPs, client secrets will be generated using HMACSHA256, resulting in longer lengths. This can be reverted in the [oauth] configuration. <pre><code>[oauth]\nenable_sha256= false\n</code></pre></li> <li>JWK Thumbprints in JWT Tokens: Now generated using SHA256. To revert, adjust the [oauth] settings. <pre><code>[oauth]\njwk_thumbprint_enable_sha256= false\n</code></pre></li> <li>Auto-Login Cookie Operations: Signing, validation, and thumbprint generation will employ SHA256-based algorithms. This can be changed in the [signature_util] configuration. <pre><code>[signature_util]\nenable_sha256_algo= false\n</code></pre></li> <li>User Account Association Key: In the Associated Accounts API, the key will be generated using HMAC SHA256, leading to a longer key length. To revert, use the [user_account_association] configuration. <pre><code>[user_account_association]\nenable_sha256= false\n</code></pre> In addition to the above mentioned content, a usage of SHA1 was identified in mutual ssl authenticator. SHA1 was being used to generate thumbprints for the client certificates in mutual ssl authenticator. Now, it has been changed to SHA256 by default. The below mentioned configuration can be used to revert the new behaviour to use SHA1 as before. <pre><code>[admin_console.authenticator.mutual_ssl_authenticator.config]\nenableSHA256 = false\n</code></pre></li> </ul> <p>Reverting to SHA1: While the shift to SHA256 significantly enhances security, users needing to revert to SHA1 can do so through specific configurations in the <code>deployment.toml</code> file. However, it's important to note that reverting to less secure algorithms like SHA1 may expose systems to heightened security risks.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#transitioning-to-the-improved-identitydatastoreservice-updating-configuration-for-custom-data-store-classes","title":"Transitioning to the Improved IdentityDataStoreService: Updating Configuration for Custom Data Store Classes","text":"<p>In the Identity Server 7.0.0, we've made some improvements to how identity data stores are accessed. Previously, you might have configured the identity data store through the <code>IdentityStoreEventListener</code>, where the class name of the data store was specified in the event listener's settings.</p> <p>Now, we've introduced a more streamlined approach called the <code>IdentityDataStoreService</code>. This service, functioning as an OSGi service, is dedicated to accessing IdentityDataStores.</p> <p>The class name configuration for the identity data store has been separated from the listener configurations. If you're using a custom data store class, it's crucial to update your <code>deployment.toml</code> file to reflect this choice. This update ensures that your custom class will override the default configuration.</p> <p>To either maintain the previous behavior or use your custom data store, simply follow these steps and update your deployment.toml:</p> <p><pre><code>[identity_datastore]\ndatastore_type = \"&lt;Name of the identityDataStore class&gt;\"\n</code></pre> By making this configuration adjustment, you can ensure that your system aligns with your preferred data store class, whether it's the previous default or a custom class you've implemented. This helps you tailor the system to your specific needs.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#user-configured-alphanumeric-email-otp-type-has-been-reset-to-the-default-numeric-type","title":"User configured alphanumeric Email OTP type has been reset to the default numeric type","text":"<p>In WSO2 IS 7.0.0, the OnlyNumericCharactersForOtp property for the Email OTP authenticator, first introduced in WSO2 IS 5.10.0, has been renamed to useAlphanumericCharactersForOtp.</p> <p>Despite this, the default behavior is preserved to use numeric values for OTP. Users who have previously configured Email OTP with the alphanumeric OTP property set to true are required to adjust the field again to receive alphanumeric OTPs.</p> <p>To reconfigure for alphanumeric OTP, follow these steps:</p> <ul> <li>Navigate to the Email OTP federated IdP you have set up.</li> <li>Go to the <code>Federated Authenticators</code> section.</li> <li>Click to expand the <code>Email OTP Configuration</code>.</li> <li>Locate the <code>Use alphanumeric characters for OTP</code> setting.</li> <li>If alphanumeric OTPs are desired, ensure this field is checked.</li> </ul>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#default-usages-of-md5-replaced-with-sha256","title":"Default usages of MD5 replaced with SHA256","text":"<p>The public certificate for keystores for newly created tenants now will use SHA256 for the signing and digest algorithm by default. Already existing tenant keystores will not be affected by this. To revert this behavior, use the following config in the deployment.toml.</p> <pre><code>[tenant_mgt] \nsigning_alg = \"MD5withRSA\"\n</code></pre>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#enhancements-in-otp-configurations","title":"Enhancements in OTP Configurations","text":"<p>In IS 7.0.0, we have introduced updates to the OTP (One-Time Password) configurations to enhance user experience and security. These changes affect various user flows, including password reset, user registration, and user claim update.</p> <p>In versions up to 6.1, the OTP pattern was defined under <code>[identity_mgt.password_reset_sms]</code> with a sms_otp_regex configuration. This approach is no longer supported in IS 7.0.0.</p> <p>The new OTP pattern configuration is more versatile and user-friendly. It includes options for sending OTP instead of UUIDs in email verification links, and customizing the OTP format in terms of length, and the inclusion of uppercase, lowercase, and numeric characters. The configuration is as follows:</p> <pre><code>[identity_mgt.*.otp]\nsend_otp_in_email = false\nuse_uppercase_in_otp = true\nuse_lowercase_in_otp = true\nuse_numeric_in_otp = true\notp_length = 6\n</code></pre> <p>This pattern is applied across various flows, including password reset, user self-registration, lite user registration, user claim updates, email verification upon creation. These changes reflect a shift from link-based to OTP-based email confirmations in various scenarios. The customizable OTP format addresses the need for more user-friendly, type-able codes, moving away from the less user-friendly UUID format. This enhancement caters to a broader range of use cases and improves the overall user experience. For users who wish to retain the previous SMS OTP regex pattern, similar configurations can still be applied in governance connectors for versions below IS 7.0.0. However, for IS 7.0.0 and onwards, the new OTP configuration pattern is recommended for a more streamlined and secure user experience.</p> <p>Covered Flows: The new OTP configurations cover a wide range of user interactions, including self-registration with email confirmation, email verification in user addition, lite user registration, password recovery, email update verification, and the ability to resend codes for all these scenarios.</p> <p>Forced password reset flow</p> <pre><code>[identity_mgt.password_reset_email.otp]\nsend_otp_in_email = false\nuse_uppercase_in_otp = true\nuse_lowercase_in_otp = true\nuse_numeric_in_otp = true\notp_length = 6\n</code></pre> <p>Ask Password flow</p> <pre><code>[identity_mgt.user_onboarding.otp]\nsend_otp_in_email = false\nuse_uppercase_in_otp = true\nuse_lowercase_in_otp = true\nuse_numeric_in_otp = true\notp_length = 6\n</code></pre> <p>User Self-Registration Flow</p> <pre><code>[identity_mgt.user_self_registration.otp]\nsend_otp_in_email = false\nuse_uppercase_in_otp = true\nuse_lowercase_in_otp = true\nuse_numeric_in_otp = true\notp_length = 6\n</code></pre> <p>Lite user Registration Flow <pre><code>[identity_mgt.lite_user_registration.otp]\nsend_otp_in_email = false\nuse_uppercase_in_otp = true\nuse_lowercase_in_otp = true\nuse_numeric_in_otp = true\notp_length = 6\n</code></pre></p> <p>User Claim Update Flow</p> <pre><code>[identity_mgt.user_claim_update.otp] \nsend_otp_in_email = false \nuse_uppercase_in_otp = true \nuse_lowercase_in_otp = true \nuse_numeric_in_otp = true otp_length = 6\n</code></pre>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#other","title":"Other","text":"<p>This section contains other changes of IS 7.0.0.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#disabling-scope-validation-for-resource-access-control-is-no-longer-recommended","title":"Disabling Scope Validation for Resource Access Control is No Longer Recommended","text":"<p>With the IS 7.0.0 release, we are no longer recommending to disable the scope validation for the resource access control with the following configuration. From 5.10.0 onwards scope validation has been enabled for the resource access control. When the scope validation is disabled, permissions of the authenticated user were considered for the authorization. With the new version, we are not recommending to disable the scope validation due to security concerns.</p> <pre><code>[resource_access_control]\ndisable_scope_validation = true\n</code></pre>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#addition-of-the-j2-file-for-charon-configxml","title":"Addition of the .j2 file for charon-config.xml","text":"<p>IS 7.0.0 introduces charon-config.xml.j2 to the product. If any alterations have been made to the default charon-config.xml, those configurations must be moved to deployment.toml. Replace the following config with the corresponding values in your charon-config.xml.</p> <pre><code>[scim2]\nenable_schema_extension=&lt;user-schema-extension-enabled&gt;\nenable_custom_schema_extension=&lt;custom-user-schema-enabled&gt;\ncustom_user_schema_uri=&lt;custom-user-schema-uri&gt;\nmax_bulk_operations=&lt;bulk-maxOperations&gt;\nmax_bulk_payload=&lt;bulk-maxPayloadSize&gt;\ndocumentation_uri=&lt;documentationUri&gt;\noauth_bearer.primary=&lt;OAuth Bearer Token - primary&gt;\nhttp_basic.primary=&lt;HTTP Basic - primary&gt;\nbasic_auth_documentation_uri=&lt;OAuth Bearer Token - documentationUri&gt;\noauth_bearer_auth_documentation_uri=&lt;documentationUri - documentationUri&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#disabling-internal-session-data-cleanup-task","title":"Disabling Internal Session Data Cleanup Task","text":"<p>With IS 7.0.0, the internal session data cleanup task will be disabled by default. This change is implemented as a precautionary measure to enhance system stability and prevent disruptions in production environments.</p> <p>Reason for the Change:</p> <ul> <li>Preventing Outages: Previous versions experienced outages and disruptions in production environments due to table locking issues caused by the session data cleanup process. Disabling this task by default aims to address and prevent such incidents.</li> </ul> <p>Impact of the Update: - Enhanced Stability: With this update, users will benefit from increased system stability, as the likelihood of outages related to session data cleanup is significantly reduced.</p> <p>Enabling the Cleanup Task (for Users who Prefer the Previous Behavior): - Configuration Adjustment Required: Users who wish to maintain the session data cleanup functionality, as observed in earlier versions of IS, can re-enable this feature. This requires a modification to the <code>deployment.toml</code> file. - Required Configuration: To activate the internal session data cleanup task, add the following lines to your <code>deployment.toml</code> file:</p> <pre><code>[session_data.cleanup]\nenable_expired_data_cleanup = true\nclean_logged_out_sessions_at_immediate_cycle = true\nenable_pre_session_data_cleanup = true\n</code></pre> <p>By incorporating this configuration, the system will continue to perform routine session data cleanup, aligning with behaviors observed in earlier versions.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#login-and-logout-consent-are-skipped-by-default-for-newly-created-applications","title":"Login and logout consent are skipped by default for newly created applications","text":"<p>In IS 7.0.0, the default configuration for new applications will now enable 'skip login and logout consent'. Users will not be routinely prompted for consent during regular login and logout sessions. Previously, applications required users to give explicit consent at each login and logout, which, while secure, was often seen as repetitive and inconvenient.</p> <p>Previous Default Setting:</p> <p>Until this update, the default behavior for all new applications mandated users to provide consent at each login and logout event.</p> <p>New Default Behavior:</p> <ul> <li>Skip Consent by Default: The default configuration for new applications will now enable 'skip login and logout consent'.</li> <li>The behavior will not change for existing apps.</li> </ul> <p>Customising Consent Settings</p> <p>If needed, the consent flow can be reinstated by changing the application's advanced settings.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#changing-the-x5ts256-attribute-value-calculation-process-of-the-jwks-response","title":"Changing the x5t#S256 attribute value calculation process of the JWKS response","text":"<p>With the IS 7.0.0 release, when calculating the x5t#S256 attribute value of the JWKS endpoint it will get the sha256 hash/digest (DER encoding) of the certificate which is a 32 byte array and then base64 url encoded. This change has been implemented in order to be aligned with the specification (https://datatracker.ietf.org/doc/html/rfc7515#section-4.1.8)</p> <p>The x5t#S256 attribute value of JWKS response will be changed. Hence the user needs to make the necessary changes from their end if they are using this attribute value for any validation.</p> <p>If the user wants to disable this behavior, they can do it by adding the following configuration into <code>deployment.toml</code>. </p> <pre><code>[oauth.jwks_endpoint]\nis_thumbprint_hexify_required = true\n</code></pre> <p>After disabling this behavior the x5t#S256 attribute value will be calculated by, getting the sha256 hash/digest (DER encoding) of the certificate which is a 32 byte array, convert the array to a hexadecimal string and then base64 url encoded.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#notable-jar-removals","title":"Notable JAR Removals","text":"<p>The transition to the workflow connector resulted in the removal of the following JAR files.</p> <ul> <li>org.objectweb.asm.commons</li> <li>org.objectweb.asm.tree</li> <li>geronimo-spec-jms</li> </ul> <p>If any customizations have been made which use these dependencies, it is essential to include them with your web app.</p>"},{"location":"identity-server/migration-docs/is-7.0.0/what-has-changed/#the-audit-tables-used-in-token-clean-up-script-should-be-altered-to-have-the-newly-introduced-column","title":"The audit tables used in token clean up script should be altered to have the newly introduced column","text":"<p>IS 7.0.0 introduces a new column, <code>authorized_organization</code>, to the access token table which may be named differently depending on your configuration but is commonly referred to as <code>idn_oauth2_access_token</code>, enhancing organizational authorization control. Existing audit tables, previously used for token cleanup, need to be altered to include this new column.</p> <pre><code>ALTER TABLE IDN_OAUTH2_ACCESS_TOKEN ADD COLUMN AUTHORIZED_ORGANIZATION varchar(36) NOT NULL DEFAULT 'NONE'\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.0.0-5.1.0/","title":"Configuration Changes - WSO2 IS 5.0.0 to 5.1.0","text":"<p>Listed below are the configuration and behavioral changes from WSO2 IS version 5.0.0 to 5.1.0.</p> <ul> <li>Configuration changes</li> <li>API changes</li> <li>Recommendations</li> </ul>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.0.0-5.1.0/#configuration-changes","title":"Configuration changes","text":"<p>Listed below are the configuration changes from WSO2 IS version 5.0.0 to 5.1.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.0.0-5.1.0/#axis2xml-file","title":"<code>axis2.xml</code> file","text":"<p>Stored in the /repository/conf/axis2/ directory. <ul> <li> <p>The following new parameter was added: </p> <pre><code>&lt;parameter name=\"httpContentNegotiation\"&gt;true&lt;/parameter&gt;. \n</code></pre> <p>When this is set to 'true' , the server will determine the contentType of responses to requests, by using the 'Accept header' of the request. </p> </li> </ul>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.0.0-5.1.0/#identityxml-file","title":"<code>identity.xml</code> file","text":"<p>Stored in the /repository/conf/identity directory. <ol> <li>The <code>&lt;TimeConfig&gt;</code> element was added. This element contains a global session timeout configuration. To configure session timeouts and remember me periods tenant wise, see Configuring Session Timeout.</li> <li>The <code>&lt;SessionTimeout&gt;</code> parameter under the <code>&lt;OpenID&gt;</code> element and the <code>&lt;SSOService&gt;</code> element was removed. This configuration is no longer a constant across all service providers. With Identity Server 5.1.0, you can define the session timeout and remember me period tenant wise using the management console. For more information on how to do this, see Configuring Session Timeout.</li> </ol>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.0.0-5.1.0/#tenant-axis2xml-file","title":"<code>tenant-axis2.xml</code> file","text":"<p>Stored in the /repository/conf/tomcat/ directory. <p>The default value for the \"httpContentNegotiation\" parameter is set to 'true': <code>&lt;parameter name=\"httpContentNegotiation\"&gt;true&lt;/parameter&gt;</code>.</p>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.0.0-5.1.0/#catalina-serverxml-file","title":"<code>catalina-server.xml</code> file","text":"<p>Stored in the /repository/conf/tomcat/ directory. <ol> <li> <p>Keystore parameters were added under the <code>&lt;Connector&gt;</code> element as shown below. This setting allows you to use separate keystore and security certificates to certify SSL connections. Note that the location and password of the default \"wso2carbon.jks\" keystore is given for these parameters by default.</p> <pre><code>keystoreFile=location of the keystore file\nkeystorePass=password for the keystore\n</code></pre> </li> <li> <p>The ciphers parameter under the <code>&lt;Connector&gt;</code> element was removed. Depending on the java version you are using, you can define ciphers using the Configuring Transport Level Security page as a guide.</p> </li> <li> <p>The clientAuth parameter setting under the <code>&lt;Connector&gt;</code> element was changed from clientAuth=\"false\" to clientAuth=\"want\". Setting this parameter to false makes the two-way SSL authentication optional and uses it in instances when it is possible i.e., if you need to disable the certification authentication in certain occasions (e.g., mobile applications). This is recommended since setting it to 'false' will simply disable certificate authentication completely and not use it even when it is possible. The <code>&lt;Host&gt;</code> element was removed. It was added to fix XSS and CSRF vulnarabilities in WSO2-CARBON-PATCH-4.2.0-1256. For information on how to fix these vulnerabilities in IS 5.1.0, see the following pages:</p> <ul> <li>Mitigating Cross Site Request Forgery (CSRF) Attacks </li> <li>Mitigating Carriage Return Line Feed (CRLF)</li> <li>Mitigating Cross Site Scripting (XSS) Attacks</li> </ul> </li> </ol>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.0.0-5.1.0/#master-datasourcesxml-file","title":"<code>master-datasources.xml</code> file","text":"<p>Stored in the /repository/conf/datasources/ directory. <p>Default auto-commit setting for a data source is set to false: </p> <pre><code>&lt;defaultAutoCommit&gt;false&lt;/defaultAutoCommit&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.0.0-5.1.0/#carbonxml-file","title":"<code>carbon.xml</code> file","text":"<p>Stored in the /repository/conf/ directory.  <ul> <li> <p>New parameters to define proxy context path as shown below;</p> <pre><code>&lt;MgtProxyContextPath&gt;&lt;/MgtProxyContextPath&gt;\n&lt;ProxyContextPath&gt;&lt;/ProxyContextPath&gt;\n</code></pre> <p>Proxy context path is a useful parameter to add a proxy path when a Carbon server is fronted by a reverse proxy. In addition to the proxy host and proxy port this parameter allows you to add a path component to external URLs. See Adding a Custom Proxy Path for details.</p> </li> <li> <p>The following port configurations was removed:</p> <pre><code>&lt;!-- Embedded Qpid broker ports \u2192\n&lt;EmbeddedQpid&gt;\n&lt;!-- Broker TCP Port \u2192\n&lt;BrokerPort&gt;5672&lt;/BrokerPort&gt;\n&lt;!-- SSL Port \u2192\n&lt;BrokerSSLPort&gt;8672&lt;/BrokerSSLPort&gt;\n&lt;/EmbeddedQpid&gt;\n</code></pre> </li> <li> <p>In Carbon 4.2.0, the following registry keystore configuration was required for configuring the keystore keys that certify encrypting/decrypting meta data to the registry. From Carbon 4.3.0 onwards the primary keystore configuration shown below will be used for this purpose as well. Therefore, it is not necessary to use a separate registry keystore configuration for encrypting/decrypting meta data to the registry. Read more about keystore configurations in Carbon 4.3.0.</p> <pre><code>&lt;RegistryKeyStore&gt;\n            &lt;!-- Keystore file location--&gt;\n            &lt;Location&gt;${carbon.home}/repository/resources/security/wso2carbon.jks&lt;/Location&gt;\n            &lt;!-- Keystore type (JKS/PKCS12 etc.)--&gt;\n            &lt;Type&gt;JKS&lt;/Type&gt;\n            &lt;!-- Keystore password--&gt;\n            &lt;Password&gt;wso2carbon&lt;/Password&gt;\n            &lt;!-- Private Key alias--&gt;\n            &lt;KeyAlias&gt;wso2carbon&lt;/KeyAlias&gt;\n            &lt;!-- Private Key password--&gt;\n            &lt;KeyPassword&gt;wso2carbon&lt;/KeyPassword&gt;\n&lt;/RegistryKeyStore&gt;\n</code></pre> </li> </ul>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.0.0-5.1.0/#user-mgtxml-file","title":"<code>user-mgt.xml</code> file","text":"<p>Stored in the/repository/conf/ directory. <p>The following property was added under the <code>&lt;Configuration&gt;</code> tag. If you are connecting the database from a previous version of IS, set this property to false. </p> <pre><code>&lt;Property name=\"isCascadeDeleteEnabled\"&gt;true&lt;/Property&gt;\n</code></pre> <p>The following properties under the <code>&lt;UserStoreManager&gt;</code> tag were changed as follows:</p> <ul> <li>The <code>&lt;BackLinksEnabled&gt;</code> property was added. If this property is set to 'true', it enables an object that has a reference to another object to inherit the attributes of the referenced object.</li> <li> <p>The following property was added. It provides flexibility to customize the error message.</p> <pre><code>&lt;Property name=\"UsernameJavaRegExViolationErrorMsg\"&gt;Username pattern policy violated&lt;/Property&gt;\n            &lt;Property name=\"PasswordJavaRegEx\"&gt;^[\\S]{5,30}$&lt;/Property&gt;\n</code></pre> </li> <li> <p>The <code>&lt;IsBulkImportSupported&gt;</code> property was added. It specifies whether to enable or disable bulk user import.</p> </li> <li> <p>The following properties were added. They provide flexibility to customize the connection pooling parameters.</p> <pre><code>&lt;Property name=\"ConnectionPoolingEnabled\"&gt;false&lt;/Property&gt;\n            &lt;Property name=\"LDAPConnectionTimeout\"&gt;5000&lt;/Property&gt;\n            &lt;Property name=\"ReadTimeout\"/&gt;\n            &lt;Property name=\"RetryAttempts\"/&gt;\n</code></pre> </li> </ul>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.0.0-5.1.0/#registryxml-file","title":"<code>registry.xml</code> file","text":"<p>Stored in the /repository/conf/ directory. <p>The default value was changed to 'false' for the following setting: <code>&lt;versionResourcesOnChange&gt;false&lt;/versionResourcesOnChange&gt;</code>.</p>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.0.0-5.1.0/#authenticatorsxml-file","title":"<code>authenticators.xml</code> file","text":"<p>Stored in the /repository/conf/security directory. <p>The following parameter was added under the <code>&lt;Authenticator&gt;</code> element to specify the AssertionConsumerServiceURL. This is an optional parameter and is used by the requesting party to build the request. For more information, see Authenticators Configuration.</p> <pre><code>&lt;Parameter name=\"AssertionConsumerServiceURL\"&gt;https://localhost:9443/acs&lt;/Parameter&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.0.0-5.1.0/#api-changes","title":"API changes","text":"<p>The following section describes changes made to admin services in IS 5.1.0 which may affect your migration depending on your client's usage of the admin service.</p> <p>Removed authorization and changed input parameters of the changePasswordByUser operation exposed through the userAdmin service. </p> <p>Changes to the changePasswordByUser operation</p> <p>Make the following change to the client side:</p> <p>Remove the username and password as authentication headers in the request and send the username, old password and new password inside the SOAP body instead. A sample of the request is shown below.</p> <pre><code>&lt;soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsd=\"http://org.apache.axis2/xsd\"&gt;\n   &lt;soapenv:Header/&gt;\n   &lt;soapenv:Body&gt;\n      &lt;xsd:changePasswordByUser&gt;\n         &lt;!--Optional:--&gt;\n         &lt;xsd:userName&gt;admin&lt;/xsd:userName&gt;\n         &lt;!--Optional:--&gt;\n         &lt;xsd:oldPassword&gt;adminpassword&lt;/xsd:oldPassword&gt;\n         &lt;!--Optional:--&gt;\n         &lt;xsd:newPassword&gt;adminnewpassword&lt;/xsd:newPassword&gt;\n      &lt;/xsd:changePasswordByUser&gt;\n   &lt;/soapenv:Body&gt;\n&lt;/soapenv:Envelope&gt;\n</code></pre> <ul> <li> <p>How it used to be</p> <p>This operation was previously an admin service where the user had to be authenticated before running the operation (i.e, only a user with login permissions could perform a password change). In that case, the user had to use an authentication mechanism (his/her username and current password) to execute the operation and the input parameters were as follows:</p> <ul> <li>old password</li> <li>new password</li> </ul> </li> <li> <p>How it is now</p> <p>Authentication is no longer required for this operation, which means all users (including those without login permissions) can perform this operation. Therefore, the input parameters are now as follows:</p> <ul> <li>username (username of the user whose password needs to be changed)</li> <li>old password</li> <li>new password</li> </ul> </li> </ul>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.0.0-5.1.0/#recommended","title":"Recommended","text":"<p>Note that the following files located in the /repository/conf/ folder in 5.0.0 have been moved to the /repository/conf/identity/ folder in 5.1.0 onwards: <ul> <li>provisioning-config.xml</li> <li>identity.xml</li> <li>/security/identity-mgt.properties</li> </ul>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.1.0-5.2.0/","title":"Configuration Changes - WSO2 IS 5.1.0 to 5.2.0","text":"<p>Listed below are the configuration and behavioral changes from WSO2 IS version 5.1.0 to 5.2.0.</p> <ul> <li>Behavioral changes</li> <li>Configuration changes</li> <li>Recommendations</li> </ul>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.1.0-5.2.0/#bahavioral-changes","title":"Bahavioral changes","text":"<p>Due to a fix done in this release, the effective default value of the system property org.apache.xml.security.ignoreLineBreaks has been changed from \u201ctrue\u201d to \u201cfalse\u201d. Due to this change, you will observe line breaks in SAML responses.</p> <p>However, if the SAML response consuming client applications have used a standard library such as OpenSAML and use canonicalization when processing the response, this should not cause any problems. Therefore, our recommendation is to use a standard library to process SAML responses on consuming applications.</p> <p>If you have any concerns about this behavioral change or if the SAML response consuming client applications does not use canonicalization when processing the response and the client cannot be updated to do so, add the following jvm parameter to the server startup script located in the <code>&lt;IS_HOME&gt;/bin/</code> folder to revert back to the previous behavior.</p> <pre><code>-Dorg.apache.xml.security.ignoreLineBreaks=true\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.1.0-5.2.0/#configuration-changes","title":"Configuration changes","text":"<p>Listed below are the configuration changes from WSO2 IS version 5.1.0 to 5.2.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.1.0-5.2.0/#oidc-scope-configxml-file","title":"<code>oidc-scope-config.xml</code> file","text":"<p>Stored in the /repository/conf/identity/ directory. <p>The following configuration file was added to enable grouping claims that are bound to a scope value in OpenID Connect (OIDC). When requesting for an OIDC token, you can specify a scope value that is bound to a set of claims in the oidc-scope-config.xml file. When sending that OIDC token to the userinfo endpoint, only the claims that are common to both the oidc-scope-config and the service provider claim configuration, will be returned.</p>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.1.0-5.2.0/#identity-mgtproperties-file","title":"<code>identity-mgt.properties</code> file","text":"<p>Stored in the /repository/conf/identity/ directory. <ul> <li> <p>The following parameters were added:</p> <pre><code># Whether to use hash of username when storing codes.\n# Enable this if Registry is used to store the codes and if username may contain non alphanumeric characters.\n\nUserInfoRecovery.UseHashedUserNames=false\nUserInfoRecovery.UsernameHashAlg=SHA-1\n</code></pre> <p>If you have enabled the using email address as the username option, the confirmation codes are retained after they are used, due to the special character '@' contained in the email address. To resolve this, you can set the UserInfoRecovery.UseHashedUserNames parameter to true so that the registry resources will be saved by hash of username instead of the email address username which contains the '@' sign.</p> </li> <li> <p>The following properties were added to support notification sending for account enabling and disabling:</p> <pre><code>Notification.Sending.Enable.Account.Disable=false\nNotification.Sending.Enable.Account.Enable=false\n</code></pre> <p>For more information, see User Account Locking and Account Disabling.</p> <p>The following property was added to check if the account has been locked, at the point of authentication.</p> <pre><code>Authentication.Policy.Check.Account.Disable=false\n</code></pre> </li> </ul>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.1.0-5.2.0/#endpointconfigproperties-file","title":"<code>EndpointConfig.properties</code> file","text":"<p>Stored in the /repository/conf/identity/ directory. <p>The following properties were replaced:</p> <p>Old configuration</p> <pre><code>identity.server.host=localhost\nidentity.server.port=9443\nidentity.server.serviceURL=/services/\n</code></pre> <p>The properties above were replaced with the following:</p> <p>New configuration</p> <pre><code>#identity.server.serviceURL=https://localhost:9443/services/ \n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.1.0-5.2.0/#entitlementproperties-file","title":"<code>entitlement.properties</code> file","text":"<p>Stored in the /repository/conf/identity/ directory. <p>When policy sets are used with entitlements, the default policy set cache size is 100. This may cause frequent cache eviction if there are more than 100 policies in the set. To avoid this, configure the following property. It will cause the cache size to increase depending on the policy set size for better performance.</p> <pre><code>PDP.References.MaxPolicyEntries=3000\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.1.0-5.2.0/#identityxml-file","title":"<code>identity.xml</code> file","text":"<p>Stored in the /repository/conf/identity/ directory. <ul> <li> <p>Session data persistence is enabled by default from IS 5.2.0 onwards.</p> <pre><code>&lt;SessionDataPersist&gt;\n    &lt;Enable&gt;true&lt;/Enable&gt;\n    &lt;Temporary&gt;true&lt;/Temporary&gt;\n    &lt;PoolSize&gt;0&lt;/PoolSize&gt;\n    &lt;SessionDataCleanUp&gt;\n        &lt;Enable&gt;true&lt;/Enable&gt;\n        &lt;CleanUpTimeout&gt;20160&lt;/CleanUpTimeout&gt;\n        &lt;CleanUpPeriod&gt;1140&lt;/CleanUpPeriod&gt;\n    &lt;/SessionDataCleanUp&gt;\n    &lt;OperationDataCleanUp&gt;\n        &lt;Enable&gt;true&lt;/Enable&gt;\n        &lt;CleanUpPeriod&gt;720&lt;/CleanUpPeriod&gt;\n    &lt;/OperationDataCleanUp&gt;\n&lt;/SessionDataPersist&gt;\n</code></pre> <p>The following properties were removed:</p> <pre><code>&lt;!--SessionContextCache&gt;\n    &lt;Enable&gt;true&lt;/Enable&gt;\n    &lt;Capacity&gt;100000&lt;/Capacity&gt;\n&lt;/SessionContextCache--&gt;\n</code></pre> </li> <li> <p>The following property was added to the <code>&lt;SSOService&gt;</code> and <code>&lt;PassiveSTS&gt;</code> elements:</p> <pre><code>&lt;SLOHostNameVerificationEnabled&gt;true&lt;/SLOHostNameVerificationEnabled&gt;\n</code></pre> <p>For more information on configuring hostname verification, see the info note at the bottom of the Configuring WS-Federation page.</p> </li> <li> <p>Listeners and properties related to analytics in WSO2 Identity Server were added. For more information, see Prerequisites to Publish Statistics.</p> <p>Listeners</p> <pre><code>&lt;EventListener type=\"org.wso2.carbon.identity.core.handler.AbstractIdentityMessageHandler\" name=\"org.wso2.carbon.identity.data.publisher.application.authentication.impl.DASLoginDataPublisherImpl\" orderId=\"10\" enable=\"false\" /&gt;\n&lt;EventListener type=\"org.wso2.carbon.identity.core.handler.AbstractIdentityMessageHandler\" name=\"org.wso2.carbon.identity.data.publisher.application.authentication.impl.DASSessionDataPublisherImpl\" orderId=\"11\" enable=\"false\" /&gt;\n&lt;EventListener type=\"org.wso2.carbon.identity.core.handler.AbstractIdentityMessageHandler\" name=\"org.wso2.carbon.identity.data.publisher.application.authentication.AuthnDataPublisherProxy\" orderId=\"11\" enable=\"true\" /&gt;\n</code></pre> <p>Properties</p> <pre><code>&lt;ISAnalytics&gt;\n        &lt;DefaultValues&gt;\n            &lt;userName&gt;NOT_AVAILABLE&lt;/userName&gt;\n            &lt;userStoreDomain&gt;NOT_AVAILABLE&lt;/userStoreDomain&gt;\n            &lt;rolesCommaSeperated&gt;NOT_AVAILABLE&lt;/rolesCommaSeperated&gt;\n            &lt;serviceprovider&gt;NOT_AVAILABLE&lt;/serviceprovider&gt;\n            &lt;identityProvider&gt;NOT_AVAILABLE&lt;/identityProvider&gt;\n        &lt;/DefaultValues&gt;\n    &lt;/ISAnalytics&gt;\n</code></pre> </li> <li> <p>The security element was updated:</p> <pre><code>&lt;!-- Security configurations--&gt;\n&lt;Security&gt;\n    &lt;!-- The directory under which all other KeyStore files will be stored--&gt;\n    &lt;KeyStoresDir&gt;${carbon.home}/conf/keystores&lt;/KeyStoresDir&gt;\n    &lt;KeyManagerType&gt;SunX509&lt;/KeyManagerType&gt;\n    &lt;TrustManagerType&gt;SunX509&lt;/TrustManagerType&gt;\n&lt;/Security&gt;\n</code></pre> </li> <li> <p>The following elements were added under the <code>&lt;OAuth&gt;</code> element:</p> <pre><code>&lt;OIDCCheckSessionEPUrl&gt;${carbon.protocol}://${carbon.host}:${carbon.management.port}/oidc/checksession&lt;/OIDCCheckSessionEPUrl&gt;\n&lt;OIDCLogoutEPUrl&gt;${carbon.protocol}://${carbon.host}:${carbon.management.port}/oidc/logout&lt;/OIDCLogoutEPUrl&gt;\n&lt;OIDCConsentPage&gt;${carbon.protocol}://${carbon.host}:${carbon.management.port}/authenticationendpoint/oauth2_consent.do&lt;/OIDCConsentPage&gt;\n&lt;OIDCLogoutConsentPage&gt;${carbon.protocol}://${carbon.host}:${carbon.management.port}/authenticationendpoint/oauth2_logout_consent.do&lt;/OIDCLogoutConsentPage&gt;\n&lt;OIDCLogoutPage&gt;${carbon.protocol}://${carbon.host}:${carbon.management.port}/authenticationendpoint/oauth2_logout.do&lt;/OIDCLogoutPage&gt;\n\n&lt;EnableOAuthCache&gt;false&lt;/EnableOAuthCache&gt;\n</code></pre> <p>Caching Recommendation</p> <p>It is recommended to keep the OAuth2 local cache and the distributed cache disabled as it may cause out-of-memory issues. However, if you want to enable the OAuth2 local cache, you have to enable the distributed cache as well.</p> <p>To enable the OAuth2 local cache and distributed cache, set the <code>&lt;EnableOAuthCache&gt;</code> property and isDistributed to true. <pre><code>&lt;EnableOAuthCache&gt;true&lt;/EnableOAuthCache&gt;\n&lt;Cache name=\"OAuthCache\" enable=\"true\" timeout=\"1\" capacity=\"5000\" isDistributed=\"true\"/&gt;\n</code></pre></p> </li> <li> <p>The following elements were removed from the <code>&lt;OAuth&gt;&lt;OpenIDConnect&gt;</code> element:</p> <pre><code>&lt;IDTokenSubjectClaim&gt;http://wso2.org/claims/givenname&lt;/IDTokenSubjectClaim&gt;\n&lt;UserInfoEndpointClaimDialect&gt;http://wso2.org/claims&lt;/UserInfoEndpointClaimDialect&gt;\n</code></pre> </li> <li> <p>The following code was updated. To add audiences to the JWT token, use the code block below. For more information, see JWT Token Generation.</p> <pre><code>&lt;OpenIDConnect&gt;\n    &lt;IDTokenBuilder&gt;org.wso2.carbon.identity.openidconnect.DefaultIDTokenBuilder&lt;/IDTokenBuilder&gt;\n    &lt;!-- Comment out to add Audience values to the JWT token (id_token)--&gt;\n    &lt;!--Audiences&gt;\n        &lt;Audience&gt;${carbon.protocol}://${carbon.host}:${carbon.management.port}/oauth2/token&lt;/Audience&gt;\n    &lt;/Audiences--&gt;\n    &lt;!--Default value for IDTokenIssuerID, is OAuth2TokenEPUrl.If that doesn't satisfy uncomment the following config and explicitly configure the value--&gt;\n    &lt;IDTokenIssuerID&gt;${carbon.protocol}://${carbon.host}:${carbon.management.port}/oauth2/token&lt;/IDTokenIssuerID&gt;\n\n...\n\n&lt;/OpenIDConnect&gt;\n</code></pre> </li> <li> <p>The <code>&lt;CacheConfig&gt;</code> was replaced:</p> <pre><code>&lt;CacheConfig&gt;\n    &lt;CacheManager name=\"IdentityApplicationManagementCacheManager\"&gt;\n        &lt;Cache name=\"AppAuthFrameworkSessionContextCache\" enable=\"false\" timeout=\"1\" capacity=\"5000\" isDistributed=\"false\" /&gt;\n        &lt;Cache name=\"AuthenticationContextCache\" enable=\"false\" timeout=\"1\" capacity=\"5000\" isDistributed=\"false\" /&gt;\n        &lt;Cache name=\"AuthenticationRequestCache\" enable=\"false\" timeout=\"1\" capacity=\"5000\" isDistributed=\"false\" /&gt;\n        &lt;Cache name=\"AuthenticationResultCache\" enable=\"false\" timeout=\"1\" capacity=\"5000\" isDistributed=\"false\" /&gt;\n        &lt;Cache name=\"AppInfoCache\" enable=\"true\" timeout=\"1\" capacity=\"5000\" isDistributed=\"false\" /&gt;\n        &lt;Cache name=\"AuthorizationGrantCache\" enable=\"false\" timeout=\"1\" capacity=\"5000\" isDistributed=\"false\" /&gt;\n        &lt;Cache name=\"OAuthCache\" enable=\"false\" timeout=\"1\" capacity=\"5000\" isDistributed=\"false\" /&gt;\n        &lt;Cache name=\"OAuthSessionDataCache\" enable=\"false\" timeout=\"1\" capacity=\"5000\" isDistributed=\"false\" /&gt;\n        &lt;Cache name=\"SAMLSSOParticipantCache\" enable=\"false\" timeout=\"1\" capacity=\"5000\" isDistributed=\"false\" /&gt;\n        &lt;Cache name=\"SAMLSSOSessionIndexCache\" enable=\"false\" timeout=\"1\" capacity=\"5000\" isDistributed=\"false\" /&gt;\n        &lt;Cache name=\"SAMLSSOSessionDataCache\" enable=\"false\" timeout=\"1\" capacity=\"5000\" isDistributed=\"false\" /&gt;\n        &lt;Cache name=\"ServiceProviderCache\" enable=\"true\" timeout=\"1\" capacity=\"5000\" isDistributed=\"false\" /&gt;\n        &lt;Cache name=\"ProvisioningConnectorCache\" enable=\"true\" timeout=\"1\" capacity=\"5000\" isDistributed=\"false\" /&gt;\n        &lt;Cache name=\"ProvisioningEntityCache\" enable=\"false\" timeout=\"1\" capacity=\"5000\" isDistributed=\"false\" /&gt;\n        &lt;Cache name=\"ServiceProviderProvisioningConnectorCache\" enable=\"true\" timeout=\"1\" capacity=\"5000\" isDistributed=\"false\" /&gt;\n        &lt;Cache name=\"IdPCacheByAuthProperty\" enable=\"true\" timeout=\"1\" capacity=\"5000\" isDistributed=\"false\" /&gt;\n        &lt;Cache name=\"IdPCacheByHRI\" enable=\"true\" timeout=\"1\" capacity=\"5000\" isDistributed=\"false\" /&gt;\n        &lt;Cache name=\"IdPCacheByName\" enable=\"true\" timeout=\"1\" capacity=\"5000\" isDistributed=\"false\" /&gt;\n    &lt;/CacheManager&gt;\n&lt;/CacheConfig&gt;\n</code></pre> </li> </ul>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.1.0-5.2.0/#contextxml-file","title":"<code>context.xml</code> file","text":"<p>Stored in the /repository/conf/tomcat/carbon/META-INF/ directory. <p>The entire file was replaced.</p>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.1.0-5.2.0/#contextxml-file_1","title":"<code>context.xml</code> file","text":"<p>Stored in the /repository/conf/tomcat/ directory. <p>The entire file was replaced.</p>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.1.0-5.2.0/#webxml-file","title":"<code>web.xml</code> file","text":"<p>Stored in the /repository/conf/tomcat/carbon/WEB-INF/ directory. <p>The entire file was replaced.</p>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.1.0-5.2.0/#carbonxml-file","title":"<code>carbon.xml</code> file","text":"<p>Stored in the /repository/conf/ directory. <p>The following elements were added under the <code>&lt;Security&gt;</code> tag:</p> <pre><code>&lt;STSCallBackHandlerName&gt;org.wso2.carbon.identity.provider.AttributeCallbackHandler&lt;/STSCallBackHandlerName&gt;\n\n&lt;XSSPreventionConfig&gt;\n    &lt;Enabled&gt;true&lt;/Enabled&gt;\n    &lt;Rule&gt;allow&lt;/Rule&gt;\n    &lt;Patterns&gt;\n        &lt;!--Pattern&gt;&lt;/Pattern--&gt;\n    &lt;/Patterns&gt;\n&lt;/XSSPreventionConfig&gt;\n</code></pre> <p>The following elements were removed:</p> <pre><code>&lt;!--Configurations to avoid Cross Site Request Forgery vulnerabilities--&gt;\n&lt;CSRFPreventionConfig&gt;\n    &lt;!--CSRFPreventionFilter configurations that adopts Synchronizer Token Pattern--&gt;\n    &lt;CSRFPreventionFilter&gt;\n    &lt;!-- Set below to true to enable the CSRFPreventionFilter--&gt;\n    &lt;Enabled&gt;false&lt;/Enabled&gt;\n    &lt;!--Url Pattern to skip application of CSRF protection--&gt;\n    &lt;SkipUrlPattern &gt; (.*)(/images|/css | /js|/docs)(.*) &lt;/SkipUrlPattern&gt;\n    &lt;/CSRFPreventionFilter&gt;\n&lt;/CSRFPreventionConfig&gt;\n\n&lt;!-- Configuration to enable or disable CR and LF sanitization filter--&gt;\n&lt;CRLFPreventionConfig&gt;\n    &lt;!--Set below to true to enable the CRLFPreventionFilter--&gt;\n    &lt;Enabled&gt;true&lt;/Enabled&gt;\n&lt;/CRLFPreventionConfig&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.1.0-5.2.0/#claim-configxml-file","title":"<code>claim-config.xml</code> file","text":"<p>Stored in the /repository/conf/ directory. <p>The following claims were added. For more information on configuring these, see Configuring Users or User Account Locking and Account Disabling depending on the claim you want to configure.</p> <pre><code>&lt;Claim&gt;\n    &lt;ClaimURI&gt;http://wso2.org/claims/identity/lastLoginTime&lt;/ClaimURI&gt;\n    &lt;DisplayName&gt;Last Login&lt;/DisplayName&gt;\n    &lt;!-- Proper attribute Id in your user store must be configured for this --&gt;\n    &lt;AttributeID&gt;carLicense&lt;/AttributeID&gt;\n    &lt;Description&gt;Last Login Time&lt;/Description&gt;\n&lt;/Claim&gt;\n&lt;Claim&gt;\n    &lt;ClaimURI&gt;http://wso2.org/claims/identity/lastPasswordUpdateTime&lt;/ClaimURI&gt;\n    &lt;DisplayName&gt;Last Password Update&lt;/DisplayName&gt;\n    &lt;!-- Proper attribute Id in your user store must be configured for this --&gt;\n    &lt;AttributeID&gt;businessCategory&lt;/AttributeID&gt;\n    &lt;Description&gt;Last Password Update Time&lt;/Description&gt;\n&lt;/Claim&gt;\n&lt;Claim&gt;\n    &lt;ClaimURI&gt;http://wso2.org/claims/identity/accountDisabled&lt;/ClaimURI&gt;\n    &lt;DisplayName&gt;Account Disabled&lt;/DisplayName&gt;\n    &lt;!-- Proper attribute Id in your user store must be configured for this --&gt;\n    &lt;AttributeID&gt;ref&lt;/AttributeID&gt;\n    &lt;Description&gt;Account Disabled&lt;/Description&gt;\n&lt;/Claim&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.1.0-5.2.0/#data-agent-configxml-file","title":"<code>data-agent-config.xml</code> file","text":"<p>Stored in the  /repository/conf/data-bridge/ directory. <p>The file was newly added.</p>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.1.0-5.2.0/#event-processorxml-file","title":"<code>event-processor.xml</code> file","text":"<p>Stored in the  /repository/conf/ directory. <p>The file was newly added.</p>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.1.0-5.2.0/#metrics-datasourcesxml-file","title":"<code>metrics-datasources.xml</code> file","text":"<p>Stored in the  /repository/conf/datasources/ directory. <p>Set the <code>&lt;defaultAutocommit&gt;</code> property to true.</p> <pre><code>&lt;datasource&gt;\n    &lt;name&gt;WSO2_METRICS_DB&lt;/name&gt;\n    &lt;description&gt;The default datasource used for WSO2 Carbon Metrics&lt;/description&gt;\n    &lt;jndiConfig&gt;\n        &lt;name&gt;jdbc/WSO2MetricsDB&lt;/name&gt;\n    &lt;/jndiConfig&gt;\n    &lt;definition type=\"RDBMS\"&gt;\n        &lt;configuration&gt;        &lt;url&gt;jdbc:h2:repository/database/WSO2METRICS_DB;DB_CLOSE_ON_EXIT=FALSE;AUTO_SERVER=TRUE&lt;/url&gt;\n            &lt;username&gt;wso2carbon&lt;/username&gt;\n            &lt;password&gt;wso2carbon&lt;/password&gt;\n            &lt;driverClassName&gt;org.h2.Driver&lt;/driverClassName&gt;\n            &lt;maxActive&gt;50&lt;/maxActive&gt;\n            &lt;maxWait&gt;60000&lt;/maxWait&gt;\n            &lt;testOnBorrow&gt;true&lt;/testOnBorrow&gt;\n            &lt;validationQuery&gt;SELECT 1&lt;/validationQuery&gt;\n            &lt;validationInterval&gt;30000&lt;/validationInterval&gt;\n            &lt;defaultAutoCommit&gt;true&lt;/defaultAutoCommit&gt;\n        &lt;/configuration&gt;\n    &lt;/definition&gt;\n&lt;/datasource&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.1.0-5.2.0/#application-authenticationxml-file","title":"<code>application-authentication.xml</code> file","text":"<p>Stored in the /repository/conf/identity/ directory. <pre><code>&lt;AuthenticatorConfig name=\"EmailOTP\" enabled=\"true\"&gt;\n    &lt;Parameter name=\"GmailClientId\"&gt;gmailClientIdValue&lt;/Parameter&gt;\n    &lt;Parameter name=\"GmailClientSecret\"&gt;gmailClientSecretValue&lt;/Parameter&gt;\n    &lt;Parameter name=\"SendgridAPIKey\"&gt;sendgridAPIKeyValue&lt;/Parameter&gt;\n    &lt;Parameter name=\"GmailRefreshToken\"&gt;gmailRefreshTokenValue&lt;/Parameter&gt;\n    &lt;Parameter name=\"GmailEmailEndpoint\"&gt;https://www.googleapis.com/gmail/v1/users/[userId]/messages/send&lt;/Parameter&gt;\n    &lt;Parameter name=\"SendgridEmailEndpoint\"&gt;https://api.sendgrid.com/api/mail.send.json&lt;/Parameter&gt;\n    &lt;Parameter name=\"accessTokenRequiredAPIs\"&gt;Gmail&lt;/Parameter&gt;\n    &lt;Parameter name=\"apiKeyHeaderRequiredAPIs\"&gt;Sendgrid&lt;/Parameter&gt;\n    &lt;Parameter name=\"SendgridFormData\"&gt;sendgridFormDataValue&lt;/Parameter&gt;\n    &lt;Parameter name=\"SendgridURLParams\"&gt;sendgridURLParamsValue&lt;/Parameter&gt;\n    &lt;Parameter name=\"GmailAuthTokenType\"&gt;Bearer&lt;/Parameter&gt;\n    &lt;Parameter name=\"GmailTokenEndpoint\"&gt;https://www.googleapis.com/oauth2/v3/token&lt;/Parameter&gt;\n    &lt;Parameter name=\"SendgridAuthTokenType\"&gt;Bearer&lt;/Parameter&gt;\n&lt;/AuthenticatorConfig&gt;\n\n&lt;AuthenticatorConfig name=\"x509CertificateAuthenticator\" enabled=\"true\"&gt;\n    &lt;Parameter name=\"AuthenticationEndpoint\"&gt;https://localhost:8443/x509-certificate-servlet&lt;/Parameter&gt;\n&lt;/AuthenticatorConfig&gt;\n\n&lt;AuthenticatorConfig name=\"totp\" enabled=\"true\"&gt;\n    &lt;Parameter name=\"encodingMethod\"&gt;Base32&lt;/Parameter&gt;\n    &lt;Parameter name=\"timeStepSize\"&gt;30&lt;/Parameter&gt;\n    &lt;Parameter name=\"windowSize\"&gt;3&lt;/Parameter&gt;\n    &lt;Parameter name=\"enableTOTP\"&gt;false&lt;/Parameter&gt;\n&lt;/AuthenticatorConfig&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.1.0-5.2.0/#metricsxml-file","title":"<code>metrics.xml</code> file","text":"<p>Stored in the /repository/conf/ directory. <p>The following elements were added:</p> <pre><code>&lt;Metrics xmlns=\"http://wso2.org/projects/carbon/metrics.xml\"&gt;\n    &lt;Reporting&gt;\n        &lt;Console&gt;\n            &lt;Enabled&gt;false&lt;/Enabled&gt;\n            &lt;!-- Polling Period in seconds.\n                This is the period for polling metrics from the metric registry and\n                printing in the console --&gt;\n            &lt;PollingPeriod&gt;60&lt;/PollingPeriod&gt;\n        &lt;/Console&gt;\n\n        &lt;DAS&gt;\n            &lt;Enabled&gt;false&lt;/Enabled&gt;\n            &lt;!-- Source of Metrics, which will be used to\n                identify each metric sent in the streams --&gt;\n            &lt;!-- Commented to use the hostname\n                &lt;Source&gt;Carbon&lt;/Source&gt;\n            --&gt;\n            &lt;!-- Polling Period in seconds.\n                This is the period for polling metrics from the metric registry and\n                sending events via the Data Publisher --&gt;\n            &lt;PollingPeriod&gt;60&lt;/PollingPeriod&gt;\n            &lt;!-- The type used with Data Publisher --&gt;\n            &lt;Type&gt;thrift&lt;/Type&gt;\n            &lt;!-- Data Receiver URL used by the Data Publisher --&gt;\n            &lt;ReceiverURL&gt;tcp://localhost:7611&lt;/ReceiverURL&gt;\n            &lt;!-- Authentication URL for the Data Publisher --&gt;\n            &lt;!-- &lt;AuthURL&gt;ssl://localhost:7711&lt;/AuthURL&gt; --&gt;\n            &lt;Username&gt;admin&lt;/Username&gt;\n            &lt;Password&gt;admin&lt;/Password&gt;\n            &lt;!-- Path for Data Agent Configuration --&gt;\n            &lt;DataAgentConfigPath&gt;repository/conf/data-bridge/data-agent-config.xml&lt;/DataAgentConfigPath&gt;\n        &lt;/DAS&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.1.0-5.2.0/#output-event-adaptersxml-file","title":"<code>output-event-adapters.xml</code> file","text":"<p>Stored in the /repository/conf/ directory. <p>The following adapter configurations were added:</p> <pre><code>&lt;adapterConfig type=\"http\"&gt;\n    &lt;!-- Thread Pool Related Properties --&gt;\n    &lt;property key=\"minThread\"&gt;8&lt;/property&gt;\n    &lt;property key=\"maxThread\"&gt;100&lt;/property&gt;\n    &lt;property key=\"keepAliveTimeInMillis\"&gt;20000&lt;/property&gt;\n    &lt;property key=\"jobQueueSize\"&gt;10000&lt;/property&gt;\n    &lt;!-- HTTP Client Pool Related Properties --&gt;\n    &lt;property key=\"defaultMaxConnectionsPerHost\"&gt;50&lt;/property&gt;\n    &lt;property key=\"maxTotalConnections\"&gt;1000&lt;/property&gt;\n&lt;/adapterConfig&gt;\n\n&lt;adapterConfig type=\"jms\"&gt;\n    &lt;!-- Thread Pool Related Properties --&gt;\n    &lt;property key=\"minThread\"&gt;8&lt;/property&gt;\n    &lt;property key=\"maxThread\"&gt;100&lt;/property&gt;\n    &lt;property key=\"keepAliveTimeInMillis\"&gt;20000&lt;/property&gt;\n    &lt;property key=\"jobQueueSize\"&gt;10000&lt;/property&gt;\n&lt;/adapterConfig&gt;\n\n&lt;adapterConfig type=\"mqtt\"&gt;\n    &lt;!-- Thread Pool Related Properties --&gt;\n    &lt;property key=\"minThread\"&gt;8&lt;/property&gt;\n    &lt;property key=\"maxThread\"&gt;100&lt;/property&gt;\n    &lt;property key=\"keepAliveTimeInMillis\"&gt;20000&lt;/property&gt;\n    &lt;property key=\"jobQueueSize\"&gt;10000&lt;/property&gt;\n    &lt;property key=\"connectionKeepAliveInterval\"&gt;60&lt;/property&gt;\n&lt;/adapterConfig&gt;\n\n&lt;adapterConfig type=\"kafka\"&gt;\n    &lt;!-- Thread Pool Related Properties --&gt;\n    &lt;property key=\"minThread\"&gt;8&lt;/property&gt;\n    &lt;property key=\"maxThread\"&gt;100&lt;/property&gt;\n    &lt;property key=\"keepAliveTimeInMillis\"&gt;20000&lt;/property&gt;\n    &lt;property key=\"jobQueueSize\"&gt;10000&lt;/property&gt;\n&lt;/adapterConfig&gt;\n\n&lt;adapterConfig type=\"email\"&gt;\n    &lt;!-- Comment mail.smtp.user and mail.smtp.password properties to support connecting SMTP servers which use trust\n        based authentication rather username/password authentication --&gt;\n    &lt;property key=\"mail.smtp.from\"&gt;abcd@gmail.com&lt;/property&gt;\n    &lt;property key=\"mail.smtp.user\"&gt;abcd&lt;/property&gt;\n    &lt;property key=\"mail.smtp.password\"&gt;xxxx&lt;/property&gt;\n    &lt;property key=\"mail.smtp.host\"&gt;smtp.gmail.com&lt;/property&gt;\n    &lt;property key=\"mail.smtp.port\"&gt;587&lt;/property&gt;\n    &lt;property key=\"mail.smtp.starttls.enable\"&gt;true&lt;/property&gt;\n    &lt;property key=\"mail.smtp.auth\"&gt;true&lt;/property&gt;\n    &lt;!-- Thread Pool Related Properties --&gt;\n    &lt;property key=\"minThread\"&gt;8&lt;/property&gt;\n    &lt;property key=\"maxThread\"&gt;100&lt;/property&gt;\n    &lt;property key=\"keepAliveTimeInMillis\"&gt;20000&lt;/property&gt;\n    &lt;property key=\"jobQueueSize\"&gt;10000&lt;/property&gt;\n&lt;/adapterConfig&gt;\n\n&lt;adapterConfig type=\"ui\"&gt;\n    &lt;property key=\"eventQueueSize\"&gt;30&lt;/property&gt;\n    &lt;!-- Thread Pool Related Properties --&gt;\n    &lt;property key=\"minThread\"&gt;8&lt;/property&gt;\n    &lt;property key=\"maxThread\"&gt;100&lt;/property&gt;\n    &lt;property key=\"keepAliveTimeInMillis\"&gt;20000&lt;/property&gt;\n    &lt;property key=\"jobQueueSize\"&gt;10000&lt;/property&gt;\n&lt;/adapterConfig&gt;\n\n&lt;adapterConfig type=\"websocket-local\"&gt;\n    &lt;!-- Thread Pool Related Properties --&gt;\n    &lt;property key=\"minThread\"&gt;8&lt;/property&gt;\n    &lt;property key=\"maxThread\"&gt;100&lt;/property&gt;\n    &lt;property key=\"keepAliveTimeInMillis\"&gt;20000&lt;/property&gt;\n    &lt;property key=\"jobQueueSize\"&gt;10000&lt;/property&gt;\n&lt;/adapterConfig&gt;\n\n&lt;adapterConfig type=\"websocket\"&gt;\n    &lt;!-- Thread Pool Related Properties --&gt;\n    &lt;property key=\"minThread\"&gt;8&lt;/property&gt;\n    &lt;property key=\"maxThread\"&gt;100&lt;/property&gt;\n    &lt;property key=\"keepAliveTimeInMillis\"&gt;20000&lt;/property&gt;\n    &lt;property key=\"jobQueueSize\"&gt;10000&lt;/property&gt;\n&lt;/adapterConfig&gt;\n\n&lt;adapterConfig type=\"soap\"&gt;\n    &lt;!-- Thread Pool Related Properties --&gt;\n    &lt;property key=\"minThread\"&gt;8&lt;/property&gt;\n    &lt;property key=\"maxThread\"&gt;100&lt;/property&gt;\n    &lt;property key=\"keepAliveTimeInMillis\"&gt;20000&lt;/property&gt;\n    &lt;property key=\"jobQueueSize\"&gt;10000&lt;/property&gt;\n    &lt;!-- Axis2 Client Connection Related Properties --&gt;\n    &lt;property key=\"axis2ClientConnectionTimeout\"&gt;10000&lt;/property&gt;\n    &lt;property key=\"reuseHTTPClient\"&gt;true&lt;/property&gt;\n    &lt;property key=\"autoReleaseConnection\"&gt;true&lt;/property&gt;\n    &lt;property key=\"maxConnectionsPerHost\"&gt;50&lt;/property&gt;\n&lt;/adapterConfig&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.1.0-5.2.0/#registryxml-file","title":"<code>registry.xml</code> file","text":"<p>Stored in the /repository/conf/ directory. <p>The following elements were added:</p> <pre><code>&lt;indexingConfiguration&gt;\n    &lt;startIndexing&gt;false&lt;/startIndexing&gt;\n    &lt;startingDelayInSeconds&gt;35&lt;/startingDelayInSeconds&gt;\n    &lt;indexingFrequencyInSeconds&gt;5&lt;/indexingFrequencyInSeconds&gt;\n    &lt;!--number of resources submit for given indexing thread --&gt;\n    &lt;batchSize&gt;40&lt;/batchSize&gt;\n    &lt;!--number of worker threads for indexing --&gt;\n    &lt;indexerPoolSize&gt;40&lt;/indexerPoolSize&gt;\n    &lt;!-- location storing the time the indexing took place--&gt;\n    &lt;lastAccessTimeLocation&gt;/_system/local/repository/components/org.wso2.carbon.registry/indexing/lastaccesstime&lt;/lastAccessTimeLocation&gt;\n    &lt;!-- the indexers that implement the indexer interface for a relevant media type/(s) --&gt;\n    &lt;indexers&gt;\n        &lt;indexer class=\"org.wso2.carbon.registry.indexing.indexer.MSExcelIndexer\" mediaTypeRegEx=\"application/vnd.ms-excel\" /&gt;\n        &lt;indexer class=\"org.wso2.carbon.registry.indexing.indexer.MSPowerpointIndexer\" mediaTypeRegEx=\"application/vnd.ms-powerpoint\" /&gt;\n        &lt;indexer class=\"org.wso2.carbon.registry.indexing.indexer.MSWordIndexer\" mediaTypeRegEx=\"application/msword\" /&gt;\n        &lt;indexer class=\"org.wso2.carbon.registry.indexing.indexer.PDFIndexer\" mediaTypeRegEx=\"application/pdf\" /&gt;\n        &lt;indexer class=\"org.wso2.carbon.registry.indexing.indexer.XMLIndexer\" mediaTypeRegEx=\"application/xml\" /&gt;\n        &lt;indexer class=\"org.wso2.carbon.registry.indexing.indexer.XMLIndexer\" mediaTypeRegEx=\"application/(.)+\\+xml\" /&gt;\n        &lt;indexer class=\"org.wso2.carbon.registry.indexing.indexer.PlainTextIndexer\" mediaTypeRegEx=\"application/swagger\\+json\" /&gt;\n        &lt;indexer class=\"org.wso2.carbon.registry.indexing.indexer.PlainTextIndexer\" mediaTypeRegEx=\"application/(.)+\\+json\" /&gt;\n        &lt;indexer class=\"org.wso2.carbon.registry.indexing.indexer.PlainTextIndexer\" mediaTypeRegEx=\"text/(.)+\" /&gt;\n        &lt;indexer class=\"org.wso2.carbon.registry.indexing.indexer.PlainTextIndexer\" mediaTypeRegEx=\"application/x-javascript\" /&gt;\n    &lt;/indexers&gt;\n    &lt;exclusions&gt;\n        &lt;exclusion pathRegEx=\"/_system/config/repository/dashboards/gadgets/swfobject1-5/.*[.]html\" /&gt;\n        &lt;exclusion pathRegEx=\"/_system/local/repository/components/org[.]wso2[.]carbon[.]registry/mount/.*\" /&gt;\n    &lt;/exclusions&gt;\n&lt;/indexingConfiguration&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.1.0-5.2.0/#user-mgtxml-file","title":"<code>user-mgt.xml</code> file","text":"<p>Stored in the /repository/conf/ directory. <p>The following LDAP/AD property was added:</p> <pre><code>&lt;Property name=\"AnonymousBind\"&gt;false&lt;/Property&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.1.0-5.2.0/#recommended","title":"Recommended","text":"<p>Note that the following new configuration files have been added from 5.2.0 onwards.</p> <ul> <li>repository/conf/event-processor.xml</li> <li>repository/conf/security/Owasp.CsrfGuard.Carbon.properties</li> <li>repository/conf/tomcat/carbon/WEB-INF/web.xml</li> <li>repository/conf/identity/oidc-scope-config.xml</li> </ul>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.2.0-5.3.0/","title":"Configuration Changes - WSO2 IS 5.2.0 to 5.3.0","text":"<p>Listed below are the configuration and behavioral changes from WSO2 IS version 5.2.0 to 5.3.0.</p> <ul> <li>Behavioral changes</li> <li>Configuration changes</li> </ul>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.2.0-5.3.0/#behavioral-changes","title":"Behavioral changes","text":"<p>Due to a fix done in this release, the effective default value of the system property  org.apache.xml.security.ignoreLineBreaks has been changed from \u201ctrue\u201d to \u201cfalse\u201d.  Due to this change, you will observe line breaks in SAML responses.</p> <p>However, if the SAML response consuming client applications have used a standard  library such as OpenSAML and use canonicalization when processing the response,  this should not cause any problems. Therefore, our recommendation is to use a  standard library to process SAML responses on consuming applications.</p> <p>If you have any concerns about this behavioral change or if the SAML response  consuming client applications does not use canonicalization when processing the  response and the client cannot be updated to do so, add the following jvm parameter  to the server startup script located in the /bin/ folder to revert back to  the previous behavior. <pre><code>-Dorg.apache.xml.security.ignoreLineBreaks=true\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.2.0-5.3.0/#configuration-changes","title":"Configuration changes","text":"<p>Listed below are the configuration changes from WSO2 IS version 5.2.0 to 5.3.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.2.0-5.3.0/#carbonxml-file","title":"<code>carbon.xml</code> file","text":"<p>Mandatory</p> <p>Stored in the /repository/conf/ directory. <p>Add the following property to the config file.</p> <pre><code>&lt;HideMenuItemIds&gt;\n&lt;HideMenuItemId&gt;claim_mgt_menu&lt;/HideMenuItemId&gt;\n&lt;HideMenuItemId&gt;identity_mgt_emailtemplate_menu&lt;/HideMenuItemId&gt;\n&lt;HideMenuItemId&gt;identity_security_questions_menu&lt;/HideMenuItemId&gt;\n&lt;/HideMenuItemIds&gt;\n</code></pre> <p>Update the following property value to 5.3.0.</p> <pre><code>&lt;Version&gt;5.3.0&lt;/Version&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.2.0-5.3.0/#entitlementproperties-file","title":"<code>entitlement.properties</code> file","text":"<p>Optional</p> <p>Stored in the /repository/conf/identity/ directory. <p>If you are using the service provider authorization feature, add the following property to the config file.</p> <p>If you have any other AttributeDesignators configured with the number 2, use the smallest unused number instead of 2 when adding the property below.</p> <pre><code>PIP.AttributeDesignators.Designator.2=org.wso2.carbon.identity.application.authz.xacml.pip.AuthenticationContextAttributePIP\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.2.0-5.3.0/#application-authenticationxml-file","title":"<code>application-authentication.xml</code> file","text":"<p>Mandatory</p> <p>Stored in the /repository/conf/identity/ directory. <p>Add the following property under the <code>&lt;Extensions&gt;</code> tag.</p> <pre><code>&lt;AuthorizationHandler&gt;org.wso2.carbon.identity.application.authz.xacml.handler.impl.XACMLBasedAuthorizationHandler&lt;/AuthorizationHandler&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.2.0-5.3.0/#application-authenticationxml-file_1","title":"<code>application-authentication.xml</code> file","text":"<p>Optional</p> <p>Stored in the /repository/conf/identity/ directory. <p>If you are using the mobile connect authenticator feature, add the following element under the <code>&lt;AuthenticatorConfigs&gt;</code> tag.</p> <pre><code>&lt;AuthenticatorConfig name=\"MobileConnectAuthenticator\" enabled=\"true\"&gt;\n    &lt;Parameter name=\"MobileConnectKey\"&gt;mobileConnectClientId&lt;/Parameter&gt;\n    &lt;Parameter name=\"MobileConnectSecret\"&gt;mobileConnectClientSecret&lt;/Parameter&gt;\n&lt;/AuthenticatorConfig&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.2.0-5.3.0/#owaspcsrfguardcarbonproperties","title":"<code>Owasp.CsrfGuard.Carbon.properties</code>","text":"<p>Mandatory</p> <p>Stored in the /repository/conf/security/ directory. <p>Find the following line.</p> <p>Old configuration</p> <pre><code>org.owasp.csrfguard.unprotected.authiwa=%servletContext%/commonauth/iwa/*\n</code></pre> <p>Update the line as follows.</p> <p>New Configuration</p> <pre><code>org.owasp.csrfguard.unprotected.oauthiwa=%servletContext%/commonauth/iwa/*\n</code></pre> <p>Add the following property.</p> <pre><code>org.owasp.csrfguard.unprotected.mex=%servletContext%/mexut/*\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.2.0-5.3.0/#user-mgtxml-file","title":"<code>user-mgt.xml</code> file","text":"<p>Mandatory</p> <p>Stored in the /repository/conf/ directory. <p>Add the following element under the <code>&lt;Realm&gt; &lt;Configuration&gt;</code> tag.</p> <pre><code>&lt;Property name=\"initializeNewClaimManager\"&gt;true&lt;/Property&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.2.0-5.3.0/#email-admin-configxml-file","title":"<code>email-admin-config.xml</code> file","text":"<p>Mandatory</p> <p>Stored in the /repository/conf/ directory. <p>If you have not made any custom changes to this file in your previous version of WSO2 IS:</p> <ul> <li>Copy the /repository/conf/email/email-admin-config.xml file and replace the existing one. <p>If you have made custom changes to this file in your previous version:</p> <ol> <li> <p>Locate the templates you have updated that differ from the default config file. You can use a diff tool to compare your /repository/conf/email/email-admin-config.xml file with the default file to identify the custom changes you have made. Note these changes/updates. <li> <p>Copy the file from /repository/conf/email/email-admin-config.xml to /repository/conf/email/ directory and rename it to email-\"admin-config-new.xml\". <li> <p>For each template you have modified, do the following:</p> <p>Note</p> <p>If you opt to migrate to the new identity management implementation, follow all the steps below. If you wish to continue with the old identity management implementation, skip steps iii and iv.</p> <ol> <li> <p>Locate the relevant template configuration in the old email-admin-config-new.xml file by searching for <code>&lt;configuration type=\"xxxxx\" where \u201cxxxxx\u201d&gt;</code> is the type at email-admin-config.xml.</p> </li> <li> <p>Update the subject, body, and footer in the new config file with the values from the existing configuration.</p> </li> <li> <p>[OPTIONAL] Update the placeholders so that they are enclosed with double braces (E.g., {user-name} -&gt; {user-name} )</p> </li> <li> <p>[OPTIONAL] Update the user\u2019s attribute related placeholders to follow the {user.claim.yyyy} format where yyyy is the attribute name (E.g., {first-name} -&gt; {user.claim.givenname})</p> </li> </ol> </li> <li> <p>Delete the /repository/conf/email/email-admin-config.xml file and rename the email-admin-config-new.xml file to \"email-admin-config.xml\u201d to finish the update. <p>For more information about this feature, see Email Templates.</p>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.2.0-5.3.0/#output-event-adaptersxml-file","title":"<code>output-event-adapters.xml</code> file","text":"<p>Optional</p> <p>Stored in the /repository/conf/ directory. <p>Add the following properties under the <code>&lt;outputEventAdaptersConfig&gt;</code> tag.</p> <pre><code>&lt;adapterConfig type=\"wso2event\"&gt;\n    &lt;property key=\"default.thrift.tcp.url\"&gt;tcp://localhost:7612&lt;/property \n    &lt;property key=\"default.thrift.ssl.url\"&gt;ssl://localhost:7712&lt;/property&gt;\n    &lt;property key=\"default.binary.tcp.url\"&gt;tcp://localhost:9612&lt;/property&gt;\n    &lt;property key=\"default.binary.ssl.url\"&gt;ssl://localhost:9712&lt;/property&gt;\n&lt;/adapterConfig&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.2.0-5.3.0/#identityxml-file","title":"<code>identity.xml</code> file","text":"<p>Mandatory</p> <p>Stored in the /repository/conf/identitydirectory. <p>Add the following event listeners as child elements under the <code>&lt;EventListeners&gt;</code> tag.</p> <pre><code>&lt;EventListeners&gt;\n    ....\n    ....\n    &lt;EventListener\n    type=\"org.wso2.carbon.user.core.listener.UserOperationEventListener\"\n    name=\"org.wso2.carbon.identity.governance.listener.IdentityStoreEventListener\"\n    orderId=\"97\" enable=\"true\"&gt;\n    &lt;Property name=\"Data.Store\"&gt;org.wso2.carbon.identity.governance.store.JDBCIdentityDataStore&lt;/Property&gt;\n    &lt;/EventListener&gt;\n\n    &lt;EventListener\n    type=\"org.wso2.carbon.user.core.listener.UserOperationEventListener\"\n    name=\"org.wso2.carbon.identity.governance.listener.IdentityMgtEventListener\"\n    orderId=\"95\"\n    enable=\"true\"/&gt;\n    ....\n&lt;/EventListeners&gt;\n</code></pre> <p>Add the following properties under the <code>&lt;OAuth&gt;</code> tag.</p> <pre><code>&lt;OIDCWebFingerEPUrl&gt;${carbon.protocol}://${carbon.host}:${carbon.management.port}/.well-known/webfinger&lt;/OIDCWebFingerEPUrl&gt;\n\n&lt;!-- For tenants below urls will be modified as https://&lt;hostname&gt;:&lt;port&gt;/t/&lt;tenant domain&gt;/&lt;path&gt;--&gt;\n&lt;OAuth2DCREPUrl&gt;${carbon.protocol}://${carbon.host}:${carbon.management.port}/identity/connect/register&lt;/OAuth2DCREPUrl&gt;\n&lt;OAuth2JWKSPage&gt;${carbon.protocol}://${carbon.host}:${carbon.management.port}/oauth2/jwks&lt;/OAuth2JWKSPage&gt;\n&lt;OIDCDiscoveryEPUrl&gt;${carbon.protocol}://${carbon.host}:${carbon.management.port}/oauth2/oidcdiscovery&lt;/OIDCDiscoveryEPUrl&gt;\n</code></pre> <p>Add the following property under the <code>&lt;SSOService&gt;</code> tag.</p> <pre><code>&lt;!--&lt;SAMLSSOAssertionBuilder&gt;org.wso2.carbon.identity.sso.saml.builders.assertion.ExtendedDefaultAssertionBuilder&lt;/SAMLSSOAssertionBuilder&gt;--&gt;\n</code></pre> <p>Add the following properties at the top level.</p> <p><pre><code>&lt;!--Recovery&gt;\n        &lt;Notification&gt;\n            &lt;Password&gt;\n                &lt;Enable&gt;false&lt;/Enable&gt;\n            &lt;/Password&gt;\n            &lt;Username&gt;\n                &lt;Enable&gt;false&lt;/Enable&gt;\n            &lt;/Username&gt;\n            &lt;InternallyManage&gt;true&lt;/InternallyManage&gt;\n        &lt;/Notification&gt;\n        &lt;Question&gt;\n            &lt;Password&gt;\n                &lt;Enable&gt;false&lt;/Enable&gt;\n                &lt;NotifyStart&gt;true&lt;/NotifyStart&gt;\n                &lt;Separator&gt;!&lt;/Separator&gt;\n                &lt;MinAnswers&gt;2&lt;/MinAnswers&gt;\n                &lt;ReCaptcha&gt;\n                    &lt;Enable&gt;true&lt;/Enable&gt;\n                    &lt;MaxFailedAttempts&gt;3&lt;/MaxFailedAttempts&gt;\n                &lt;/ReCaptcha&gt;\n            &lt;/Password&gt;\n        &lt;/Question&gt;\n        &lt;ExpiryTime&gt;3&lt;/ExpiryTime&gt;\n        &lt;NotifySuccess&gt;true&lt;/NotifySuccess&gt;\n        &lt;AdminPasswordReset&gt;\n            &lt;Offline&gt;false&lt;/Offline&gt;\n            &lt;OTP&gt;false&lt;/OTP&gt;\n            &lt;RecoveryLink&gt;false&lt;/RecoveryLink&gt;\n        &lt;/AdminPasswordReset&gt;\n    &lt;/Recovery&gt;\n\n    &lt;EmailVerification&gt;\n        &lt;Enable&gt;false&lt;/Enable&gt;\n        &lt;LockOnCreation&gt;false&lt;/LockOnCreation&gt;\n        &lt;Notification&gt;\n            &lt;InternallyManage&gt;true&lt;/InternallyManage&gt;\n        &lt;/Notification&gt;\n    &lt;/EmailVerification&gt;\n\n    &lt;SelfRegistration&gt;\n    &lt;Enable&gt;false&lt;/Enable&gt;\n    &lt;LockOnCreation&gt;false&lt;/LockOnCreation&gt;\n    &lt;Notification&gt;\n        &lt;InternallyManage&gt;true&lt;/InternallyManage&gt;\n    &lt;/Notification&gt;\n    &lt;ReCaptcha&gt;false&lt;/ReCaptcha&gt;\n    &lt;/SelfRegistration--&gt;\n    ```\n\nRemove the following section:\n</code></pre> NOT_AVAILABLE NOT_AVAILABLE NOT_AVAILABLE NOT_AVAILABLE NOT_AVAILABLE <pre><code>Add the following properties to the top level.\n</code></pre> /permission/admin/manage/identity/applicationmgt/delete /permission/admin/manage/identity/applicationmgt/create /permission/admin/manage/identity/applicationmgt/view /permission/admin/manage/identity/pep </p> <pre><code>&lt;ClientAppAuthentication&gt;\n    &lt;Application name=\"dashboard\" hash=\"66cd9688a2ae068244ea01e70f0e230f5623b7fa4cdecb65070a09ec06452262\"/&gt;\n&lt;/ClientAppAuthentication&gt;\n\n&lt;TenantContextsToRewrite&gt;\n    &lt;WebApp&gt;\n        &lt;Context&gt;/api/identity/user/v0.9&lt;/Context&gt;\n        &lt;Context&gt;/api/identity/recovery/v0.9&lt;/Context&gt;\n        &lt;Context&gt;/oauth2&lt;/Context&gt;\n        &lt;Context&gt;/api/identity/entitlement&lt;/Context&gt;\n    &lt;/WebApp&gt;\n    &lt;Servlet&gt;\n        &lt;Context&gt;/identity/(.*)&lt;/Context&gt;\n    &lt;/Servlet&gt;\n&lt;/TenantContextsToRewrite&gt;\n</code></pre> <p>``` </p>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.2.0-5.3.0/#webxml-file","title":"<code>web.xml</code> file","text":"<p>Optional</p> <p>Stored in the <code>&lt;PRODUCT_HOME&gt;/repository/conf/tomcat/carbon/WEB_INF</code> directory.</p> <p>Add the following properties after the CsrfGuardHttpSessionListener.</p> <p>```  CaptchaFilter org.wso2.carbon.identity.captcha.filter.CaptchaFilter </p> <pre><code>&lt;filter-mapping&gt;\n  &lt;filter-name&gt;CaptchaFilter&lt;/filter-name&gt;\n  &lt;url-pattern&gt;/samlsso&lt;/url-pattern&gt;\n  &lt;url-pattern&gt;/oauth2&lt;/url-pattern&gt;\n  &lt;url-pattern&gt;/commonauth&lt;/url-pattern&gt;\n  &lt;dispatcher&gt;FORWARD&lt;/dispatcher&gt;\n  &lt;dispatcher&gt;REQUEST&lt;/dispatcher&gt;\n&lt;/filter-mapping&gt;\n</code></pre> <p>``` </p>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.2.0-5.3.0/#catalina-serverxml-file","title":"<code>catalina-server.xml</code> file","text":"<p>Mandatory</p> <p>Stored in the /repository/conf/tomcat/ directory. <p>Add the following valves under the <code>&lt;Host&gt;</code> tag.</p> <p><code>&lt;!-- Authentication and Authorization valve for the rest apis and we can configure context for this in identity.xml  --&gt;                 &lt;Valve className=\"org.wso2.carbon.identity.auth.valve.AuthenticationValve\"/&gt;                 &lt;Valve className=\"org.wso2.carbon.identity.authz.valve.AuthorizationValve\"/&gt;                 &lt;Valve className=\"org.wso2.carbon.identity.context.rewrite.valve.TenantContextRewriteValve\"/&gt;</code> </p>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.2.0-5.3.0/#carbonxml-file_1","title":"<code>carbon.xml</code> file","text":"<p>Optinal</p> <p>Stored in the /repository/conf/ directory. <p>Add the following properties after the <code>&lt;/Security&gt;</code> tag.</p> <p><code>&lt;HideMenuItemIds&gt; &lt;HideMenuItemId&gt;identity_mgt_emailtemplate_menu&lt;/HideMenuItemId&gt; &lt;HideMenuItemId&gt;identity_security_questions_menu&lt;/HideMenuItemId&gt; &lt;/HideMenuItemIds&gt;</code> </p>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.2.0-5.3.0/#log4jproperties-file","title":"<code>log4j.properties</code> file","text":"<p>Optional</p> <p>Stored in the /repository/conf/ directory. <p>Add the following property.</p> <p><code>log4j.logger.org.springframework=WARN</code> </p>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.2.0-5.3.0/#data-agent-configxml-file","title":"<code>data-agent-config.xml</code> file","text":"<p>Mandatory</p> <p>Stored in the /repository/conf/data-bridge directory. <p>Add the following properties under the <code>&lt;Agent&gt;</code> ThriftDataEndpoint and under the <code>&lt;Agent&gt;</code> BinaryDataEndpoint tags.</p> <p><code>&lt;!--&lt;sslEnabledProtocols&gt;TLSv1,TLSv1.1,TLSv1.2&lt;/sslEnabledProtocols&gt;--&gt; &lt;!--&lt;ciphers&gt;SSL_RSA_WITH_RC4_128_MD5,SSL_RSA_WITH_RC4_128_SHA,TLS_RSA_WITH_AES _128_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_DSS_WITH_AES_128_CBC_SHA,SSL _RSA_WITH_3DES_EDE_CBC_SHA,SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA,SSL_DHE_DSS_WITH_ 3DES_EDE_CBC_SHA&lt;/ciphers&gt;--&gt;</code> </p>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.2.0-5.3.0/#claim-configxml-file","title":"<code>claim-config.xml</code> file","text":"<p>Mandatory</p> <p>Stored in the /repository/conf/ directory <p>Replace the following attribute found under the <code>&lt;Claim&gt; &lt;ClaimURI&gt;http://wso2.org/claims/locality&gt;</code> tag.</p> <p>Replace this attribute:</p> <p><code>&lt;AttributeID&gt;localityName&lt;/AttributeID&gt;</code></p> <p>with this:</p> <p><code>&lt;AttributeID&gt;local&lt;/AttributeID&gt;</code></p> <p>Modify the following claims as follows.</p> <p><code>&lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/userid&lt;/ClaimURI&gt;   &lt;DisplayName&gt;User ID&lt;/DisplayName&gt;   &lt;AttributeID&gt;scimId&lt;/AttributeID&gt;   &lt;Description&gt;Unique ID of the user&lt;/Description&gt;   &lt;ReadOnly/&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/externalid&lt;/ClaimURI&gt;   &lt;DisplayName&gt;External User ID&lt;/DisplayName&gt;   &lt;AttributeID&gt;externalId&lt;/AttributeID&gt;   &lt;Description&gt;Unique ID of the user used in external systems&lt;/Description&gt;   &lt;ReadOnly/&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/created&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Created Time&lt;/DisplayName&gt;   &lt;AttributeID&gt;createdDate&lt;/AttributeID&gt;   &lt;Description&gt;Created timestamp of the user&lt;/Description&gt;   &lt;ReadOnly/&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/modified&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Last Modified Time&lt;/DisplayName&gt;   &lt;AttributeID&gt;lastModifiedDate&lt;/AttributeID&gt;   &lt;Description&gt;Last Modified timestamp of the user&lt;/Description&gt;   &lt;ReadOnly/&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/location&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Location&lt;/DisplayName&gt;   &lt;AttributeID&gt;location&lt;/AttributeID&gt;   &lt;Description&gt;Location&lt;/Description&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/formattedName&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Name - Formatted Name&lt;/DisplayName&gt;   &lt;AttributeID&gt;formattedName&lt;/AttributeID&gt;   &lt;Description&gt;Formatted Name&lt;/Description&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/middleName&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Middle Name&lt;/DisplayName&gt;   &lt;AttributeID&gt;middleName&lt;/AttributeID&gt;   &lt;Description&gt;Middle Name&lt;/Description&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/honorificPrefix&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Name - Honoric Prefix&lt;/DisplayName&gt;   &lt;AttributeID&gt;honoricPrefix&lt;/AttributeID&gt;   &lt;Description&gt;Honoric Prefix&lt;/Description&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/honorificSuffix&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Name - Honoric Suffix&lt;/DisplayName&gt;   &lt;AttributeID&gt;honoricSuffix&lt;/AttributeID&gt;   &lt;Description&gt;Honoric Suffix&lt;/Description&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/userType&lt;/ClaimURI&gt;   &lt;DisplayName&gt;User Type&lt;/DisplayName&gt;   &lt;AttributeID&gt;userType&lt;/AttributeID&gt;   &lt;Description&gt;User Type&lt;/Description&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/preferredLanguage&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Preferred Language&lt;/DisplayName&gt;   &lt;AttributeID&gt;preferredLanguage&lt;/AttributeID&gt;   &lt;Description&gt;Preferred Language&lt;/Description&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/local&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Local&lt;/DisplayName&gt;   &lt;AttributeID&gt;local&lt;/AttributeID&gt;   &lt;Description&gt;Local&lt;/Description&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/timeZone&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Time Zone&lt;/DisplayName&gt;   &lt;AttributeID&gt;timeZone&lt;/AttributeID&gt;   &lt;Description&gt;Time Zone&lt;/Description&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/emails.work&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Emails - Work Email&lt;/DisplayName&gt;   &lt;AttributeID&gt;workEmail&lt;/AttributeID&gt;   &lt;Description&gt;Work Email&lt;/Description&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/emails.home&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Emails - Home Email&lt;/DisplayName&gt;   &lt;AttributeID&gt;homeEmail&lt;/AttributeID&gt;   &lt;Description&gt;Home Email&lt;/Description&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/emails.other&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Emails - Other Email&lt;/DisplayName&gt;   &lt;AttributeID&gt;otherEmail&lt;/AttributeID&gt;   &lt;Description&gt;Other Email&lt;/Description&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/phoneNumbers&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Phone Numbers&lt;/DisplayName&gt;   &lt;AttributeID&gt;phoneNumbers&lt;/AttributeID&gt;   &lt;Description&gt;Phone Numbers&lt;/Description&gt;   &lt;RegEx&gt;^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$&lt;/RegEx&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/phoneNumbers.home&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Phone Numbers - Home Phone Number&lt;/DisplayName&gt;   &lt;AttributeID&gt;homePhone&lt;/AttributeID&gt;   &lt;Description&gt;Home Phone&lt;/Description&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/phoneNumbers.work&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Phone Numbers - Work Phone Number&lt;/DisplayName&gt;   &lt;AttributeID&gt;workPhone&lt;/AttributeID&gt;   &lt;Description&gt;Work Phone&lt;/Description&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/phoneNumbers.fax&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Phone Numbers - Fax Number&lt;/DisplayName&gt;   &lt;AttributeID&gt;fax&lt;/AttributeID&gt;   &lt;Description&gt;Fax Number&lt;/Description&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/phoneNumbers.pager&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Phone Numbers - Pager Number&lt;/DisplayName&gt;   &lt;AttributeID&gt;pager&lt;/AttributeID&gt;   &lt;Description&gt;Pager Number&lt;/Description&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/phoneNumbers.other&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Phone Numbers - Other&lt;/DisplayName&gt;   &lt;AttributeID&gt;otherPhoneNumber&lt;/AttributeID&gt;   &lt;Description&gt;Other Phone Number&lt;/Description&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/gtalk&lt;/ClaimURI&gt;   &lt;DisplayName&gt;IM - Gtalk&lt;/DisplayName&gt;   &lt;AttributeID&gt;imGtalk&lt;/AttributeID&gt;   &lt;Description&gt;IM - Gtalk&lt;/Description&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/skype&lt;/ClaimURI&gt;   &lt;DisplayName&gt;IM - Skype&lt;/DisplayName&gt;   &lt;AttributeID&gt;imSkype&lt;/AttributeID&gt;   &lt;Description&gt;IM - Skype&lt;/Description&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/photos&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Photo&lt;/DisplayName&gt;   &lt;AttributeID&gt;photos&lt;/AttributeID&gt;   &lt;Description&gt;Photo&lt;/Description&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/photourl&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Photo URIL&lt;/DisplayName&gt;   &lt;AttributeID&gt;photoUrl&lt;/AttributeID&gt;   &lt;Description&gt;Photo URL&lt;/Description&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/thumbnail&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Photo - Thumbnail&lt;/DisplayName&gt;   &lt;AttributeID&gt;thumbnail&lt;/AttributeID&gt;   &lt;Description&gt;Photo - Thumbnail&lt;/Description&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/addresses&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Address&lt;/DisplayName&gt;   &lt;AttributeID&gt;addresses&lt;/AttributeID&gt;   &lt;Description&gt;Address&lt;/Description&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/addresses.formatted&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Address - Formatted&lt;/DisplayName&gt;   &lt;AttributeID&gt;formattedAddress&lt;/AttributeID&gt;   &lt;Description&gt;Address - Formatted&lt;/Description&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/streetaddress&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Address - Street&lt;/DisplayName&gt;   &lt;AttributeID&gt;streetAddress&lt;/AttributeID&gt;   &lt;Description&gt;Address - Street&lt;/Description&gt;   &lt;DisplayOrder&gt;5&lt;/DisplayOrder&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/addresses.locality&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Address - Locality&lt;/DisplayName&gt;   &lt;AttributeID&gt;localityAddress&lt;/AttributeID&gt;   &lt;Description&gt;Address - Locality&lt;/Description&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/groups&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Groups&lt;/DisplayName&gt;   &lt;AttributeID&gt;groups&lt;/AttributeID&gt;   &lt;Description&gt;Groups&lt;/Description&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/identity/verifyEmail&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Verify Email&lt;/DisplayName&gt;   &lt;AttributeID&gt;manager&lt;/AttributeID&gt;   &lt;Description&gt;Temporary claim to invoke email verified feature&lt;/Description&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/identity/askPassword&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Ask Password&lt;/DisplayName&gt;   &lt;AttributeID&gt;postOfficeBox&lt;/AttributeID&gt;   &lt;Description&gt;Temporary claim to invoke email ask Password feature&lt;/Description&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/identity/adminForcedPasswordReset&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Force Password Reset&lt;/DisplayName&gt;   &lt;AttributeID&gt;departmentNumber&lt;/AttributeID&gt;   &lt;Description&gt;Temporary claim to invoke email force password feature&lt;/Description&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/entitlements&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Entitlements&lt;/DisplayName&gt;   &lt;AttributeID&gt;entitlements&lt;/AttributeID&gt;   &lt;Description&gt;Entitlements&lt;/Description&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;urn:scim:schemas:core:1.0:roles&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Roles&lt;/DisplayName&gt;   &lt;AttributeID&gt;roles&lt;/AttributeID&gt;   &lt;Description&gt;Roles&lt;/Description&gt;   &lt;DisplayOrder&gt;5&lt;/DisplayOrder&gt;   &lt;SupportedByDefault /&gt;   &lt;MappedLocalClaim&gt;http://wso2.org/claims/role&lt;/MappedLocalClaim&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/x509Certificates&lt;/ClaimURI&gt;   &lt;DisplayName&gt;X509Certificates&lt;/DisplayName&gt;   &lt;AttributeID&gt;x509Certificates&lt;/AttributeID&gt;   &lt;Description&gt;X509Certificates&lt;/Description&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/identity/failedPasswordRecoveryAttempts&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Failed Password Recovery Attempts&lt;/DisplayName&gt;   &lt;AttributeID&gt;postalCode&lt;/AttributeID&gt;   &lt;Description&gt;Number of consecutive failed attempts done for password recovery&lt;/Description&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/identity/emailVerified&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Email Verified&lt;/DisplayName&gt;   &lt;!-- Proper attribute Id in your user store must be configured for this --&gt;   &lt;AttributeID&gt;postalAddress&lt;/AttributeID&gt;   &lt;Description&gt;Email Verified&lt;/Description&gt; &lt;/Claim&gt; &lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/identity/failedLoginLockoutCount&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Failed Lockout Count&lt;/DisplayName&gt;   &lt;!-- Proper attribute Id in your user store must be configured for this --&gt;   &lt;AttributeID&gt;employeeNumber&lt;/AttributeID&gt;   &lt;Description&gt;Failed Lockout Count&lt;/Description&gt; &lt;/Claim&gt;</code></p> <p>Remove the following claim.</p> <p><code>&lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/identity/lastLoginTime&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Last Login&lt;/DisplayName&gt;   &lt;!-- Proper attribute Id in your user store must be configured for this --&gt;   &lt;AttributeID&gt;carLicense&lt;/AttributeID&gt;   &lt;Description&gt;Last Login Time&lt;/Description&gt; &lt;/Claim&gt;</code></p> <p>Add the following claim.</p> <p><code>&lt;ClaimURI&gt;http://wso2.org/claims/identity/lastLogonTime&lt;/ClaimURI&gt; &lt;DisplayName&gt;Last Logon&lt;/DisplayName&gt; &lt;!-- Proper attribute Id in your user store must be configured for this --&gt; &lt;AttributeID&gt;carLicense&lt;/AttributeID&gt; &lt;Description&gt;Last Logon Time&lt;/Description&gt; &lt;/Claim&gt;</code></p> <p>Replace the following attribute from under the <code>&lt;Claim&gt; &lt;ClaimURI&gt; http://wso2.org/claims/challengeQuestion1 &lt;/ClaimURI&gt;</code> tag.</p> <p>Replace this attribute:</p> <p><code>&lt;AttributeID&gt;localityName&lt;/AttributeID&gt;</code></p> <p>with this:</p> <p><code>&lt;AttributeID&gt;firstChallenge&lt;/AttributeID&gt;</code></p> <p>Replace the following attribute from under the the <code>&lt;Claim&gt; &lt;ClaimURI&gt; http://wso2.org/claims/challengeQuestion2 &lt;/ClaimURI&gt;</code>.</p> <p>Replace this attribute:</p> <p><code>&lt;AttributeID&gt;localityName&lt;/AttributeID&gt;</code></p> <p>with this:</p> <p><code>&lt;AttributeID&gt;secondChallenge&lt;/AttributeID&gt;</code></p> <p>Modify this claim as follows:</p> <p><code>&lt;Claim&gt;   &lt;ClaimURI&gt;http://wso2.org/claims/active&lt;/ClaimURI&gt;   &lt;DisplayName&gt;Active&lt;/DisplayName&gt;   &lt;AttributeID&gt;active&lt;/AttributeID&gt;   &lt;Description&gt;Status of the account&lt;/Description&gt; &lt;/Claim&gt;</code></p>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.3.0-5.4.0/","title":"Configuration Changes - WSO2 IS 5.3.0 to 5.4.0","text":"<p>Listed below are the configuration and behavioral changes from WSO2 IS version 5.3.0 to 5.4.0.</p> <ul> <li>Configuration changes</li> </ul>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.3.0-5.4.0/#configuration-changes","title":"Configuration changes","text":"<p>Listed below are the configuration changes from WSO2 IS version 5.3.0 to 5.4.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.3.0-5.4.0/#carbonxml-file","title":"<code>carbon.xml</code> file","text":"<p>Stored in the /repository/conf folder. <p>Change the version property value to 5.4.0.</p> <pre><code>&lt;Version&gt;5.4.0&lt;/Version&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.3.0-5.4.0/#identity-eventproperties-file","title":"<code>identity-event.properties</code> file","text":"<p>Stored in the /repository/conf/identity folder. <p>Add the following property.</p> <pre><code>account.lock.handler.notification.manageInternally=true\n</code></pre> <p>The property given above allows you to enable or disable sending emails via the WSO2 Identity Server when an account is locked or unlocked.</p>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.3.0-5.4.0/#identityxml-file","title":"<code>identity.xml</code> file","text":"<p>Stored in the /repository/conf/identity folder. <p>Add the following property within the <code>&lt;SessionDataCleanUp&gt;</code> tag.</p> <pre><code>&lt;DeleteChunkSize&gt;50000&lt;/DeleteChunkSize&gt;\n</code></pre> <p>In a production environment, there is a possibility for a deadlock/database lock to occur when running a session data cleanup task in high load scenarios. To mitigate this, the property given above was introduced to clean data in chunks. Configure this property with the required chunk size. For more information, see Deployment Guidelines in Production.</p> <p>Remove the following property found within the <code>&lt;OperationDataCleanUp&gt;</code> tag.</p> <pre><code>&lt;CleanUpPeriod&gt;720&lt;/CleanUpPeriod&gt;\n</code></pre> <p>WSO2 IS 5.3.0 had two separate tasks for session data cleanup and operation data cleanup. This is now combined and done through one task. Therefore the property given above is no longer needed. You can still configure the <code>&lt;CleanUpPeriod&gt;</code> property within the <code>&lt;SessionDataCleanUp&gt;</code> tag to specify the cleanup period for the combined task.</p> <p>Change the default value of the following property from 300 to 0.</p> <p>You can skip this step if you have already configured the <code>&lt;TimestampSkew&gt;</code> property with your own value.</p> <pre><code>&lt;TimestampSkew&gt;0&lt;/TimestampSkew&gt;\n</code></pre> <p>The property given above specifies the maximum tolerance limit for the clock skewed between the sender and recipient. The default value was changed to 0 as the best practice is to assume that the sender and recipient clocks are synchronized and are in the same time stamp. Configure this accordingly if the clocks are not in the same timestamp.</p> <p>Add the following JWT bearer grant type within the <code>&lt;SupportedGrantTypes&gt;</code> tag.</p> <pre><code>&lt;SupportedGrantType&gt;\n&lt;GrantTypeName&gt;urn:ietf:params:oauth:grant-type:jwt-bearer&lt;/GrantTypeName&gt;\n&lt;GrantTypeHandlerImplClass&gt;org.wso2.carbon.identity.oauth2.grant.jwt.JWTBearerGrantHandler&lt;/GrantTypeHandlerImplClass&gt;\n&lt;GrantTypeValidatorImplClass&gt;org.wso2.carbon.identity.oauth2.grant.jwt.JWTGrantValidator&lt;/GrantTypeValidatorImplClass&gt;\n&lt;/SupportedGrantType&gt;\n</code></pre> <p>The JWT bearer grant type is supported out-of-the-box with WSO2 IS 5.4.0. For more information, see Configuring JWT Grant Type in the ISConnectors documentation.</p> <p>Update the <code>&lt;EmailVerification&gt;</code> code block with the following code.</p> <p>The properties shown below at line numbers 3,8,9,10 &amp; 11 were added in 5.4.0.</p> <p>This step is optional.</p> <pre><code>&lt;EmailVerification&gt;\n    &lt;Enable&gt;false&lt;/Enable&gt;\n    &lt;ExpiryTime&gt;1440&lt;/ExpiryTime&gt;\n    &lt;LockOnCreation&gt;true&lt;/LockOnCreation&gt;\n    &lt;Notification&gt;\n        &lt;InternallyManage&gt;true&lt;/InternallyManage&gt;\n    &lt;/Notification&gt;\n    &lt;AskPassword&gt;\n        &lt;ExpiryTime&gt;1440&lt;/ExpiryTime&gt;\n        &lt;PasswordGenerator&gt;org.wso2.carbon.user.mgt.common.DefaultPasswordGenerator&lt;/PasswordGenerator&gt;\n    &lt;/AskPassword&gt;\n&lt;/EmailVerification&gt;\n</code></pre> <p>Update the following property found within the <code>&lt;SelfRegistration&gt;</code> tag to true.</p> <p>This step is optional.</p> <pre><code>&lt;LockOnCreation&gt;true&lt;/LockOnCreation&gt;\n</code></pre> <p>Add the following properties within the <code>&lt;SelfRegistration&gt;</code> tag.</p> <p>This step is optional.</p> <pre><code>&lt;VerificationCode&gt;\n  &lt;ExpiryTime&gt;1440&lt;/ExpiryTime&gt;\n&lt;/VerificationCode&gt;\n</code></pre> <p>Add the following properties within the <code>&lt;Server&gt;</code> tag.</p> <pre><code>&lt;AuthenticationPolicy&gt;\n    &lt;CheckAccountExist&gt;false&lt;/CheckAccountExist&gt;\n&lt;/AuthenticationPolicy&gt;\n</code></pre> <p>Change the default values within the <code>&lt;CacheManager&gt;</code> tag.</p> <p>If you have already configured all the properties within the <code>&lt;CacheManager&gt;</code> tag with your own values, skip this step.</p> <p>If you have only configured some properties within the <code>&lt;CacheManager&gt;</code> tag with your own values, replace the properties that are not been changed/configured with the relevant default values shown below.</p> <p>If you have not configured or changed any of the properties within the <code>&lt;CacheManager&gt;</code> tag with your own values, copy the entire code block below and replace the <code>&lt;CacheManager&gt;</code> tag in the identity.xml file with the code block given below.</p> <pre><code>&lt;CacheManager name=\"IdentityApplicationManagementCacheManager\"&gt;\n    &lt;Cache name=\"AppAuthFrameworkSessionContextCache\" enable=\"true\" timeout=\"300\" capacity=\"5000\" isDistributed=\"false\"/&gt;\n    &lt;Cache name=\"AuthenticationContextCache\" enable=\"true\" timeout=\"300\" capacity=\"5000\" isDistributed=\"false\"/&gt;\n    &lt;Cache name=\"AuthenticationRequestCache\" enable=\"true\" timeout=\"300\" capacity=\"5000\" isDistributed=\"false\"/&gt;\n    &lt;Cache name=\"AuthenticationResultCache\"  enable=\"true\" timeout=\"300\" capacity=\"5000\" isDistributed=\"false\"/&gt;\n    &lt;Cache name=\"AppInfoCache\"               enable=\"true\"  timeout=\"900\" capacity=\"5000\" isDistributed=\"false\"/&gt;\n    &lt;Cache name=\"AuthorizationGrantCache\"    enable=\"true\" timeout=\"300\" capacity=\"5000\" isDistributed=\"false\"/&gt;\n    &lt;Cache name=\"OAuthCache\"                 enable=\"true\" timeout=\"300\" capacity=\"5000\" isDistributed=\"false\"/&gt;\n    &lt;Cache name=\"OAuthScopeCache\"            enable=\"true\"  timeout=\"300\" capacity=\"5000\" isDistributed=\"false\"/&gt;\n    &lt;Cache name=\"OAuthSessionDataCache\"      enable=\"true\" timeout=\"300\" capacity=\"5000\" isDistributed=\"false\"/&gt;\n    &lt;Cache name=\"SAMLSSOParticipantCache\"    enable=\"true\" timeout=\"300\" capacity=\"5000\" isDistributed=\"false\"/&gt;\n    &lt;Cache name=\"SAMLSSOSessionIndexCache\"   enable=\"true\" timeout=\"300\" capacity=\"5000\" isDistributed=\"false\"/&gt;\n    &lt;Cache name=\"SAMLSSOSessionDataCache\"    enable=\"true\" timeout=\"300\" capacity=\"5000\" isDistributed=\"false\"/&gt;\n    &lt;Cache name=\"ServiceProviderCache\"       enable=\"true\"  timeout=\"900\" capacity=\"5000\" isDistributed=\"false\"/&gt;\n    &lt;Cache name=\"ProvisioningConnectorCache\" enable=\"true\"  timeout=\"900\" capacity=\"5000\" isDistributed=\"false\"/&gt;\n    &lt;Cache name=\"ProvisioningEntityCache\"    enable=\"true\" timeout=\"900\" capacity=\"5000\" isDistributed=\"false\"/&gt;\n    &lt;Cache name=\"ServiceProviderProvisioningConnectorCache\" enable=\"true\"  timeout=\"900\" capacity=\"5000\" isDistributed=\"false\"/&gt;\n    &lt;Cache name=\"IdPCacheByAuthProperty\"     enable=\"true\"  timeout=\"900\" capacity=\"5000\" isDistributed=\"false\"/&gt;\n    &lt;Cache name=\"IdPCacheByHRI\"              enable=\"true\"  timeout=\"900\" capacity=\"5000\" isDistributed=\"false\"/&gt;\n    &lt;Cache name=\"IdPCacheByName\"             enable=\"true\"  timeout=\"900\" capacity=\"5000\" isDistributed=\"false\"/&gt;\n&lt;/CacheManager&gt;\n</code></pre> <p>Add the following property within the <code>&lt;CacheManager&gt;</code> tag if it does not already exist.</p> <pre><code>&lt;Cache name=\"OAuthScopeCache\" enable=\"true\"  timeout=\"300\" capacity=\"5000\" isDistributed=\"false\"/&gt;\n</code></pre> <p>Add the following properties within the <code>&lt;OAuth&gt;</code> tag. The code comments explain the usage and applicable values for the properties.</p> <pre><code>&lt;!-- Specify the Token issuer class to be used.\nDefault: org.wso2.carbon.identity.oauth2.token.OauthTokenIssuerImpl.\nApplicable values: org.wso2.carbon.identity.oauth2.token.JWTTokenIssuer--&gt;\n    &lt;!--&lt;IdentityOAuthTokenGenerator&gt;org.wso2.carbon.identity.oauth2.token.JWTTokenIssuer&lt;/IdentityOAuthTokenGenerator&gt;--&gt;\n\n&lt;!-- This configuration is used to specify the access token value generator.\nDefault: org.apache.oltu.oauth2.as.issuer.UUIDValueGenerator\nApplicable values: org.apache.oltu.oauth2.as.issuer.UUIDValueGenerator,\n    org.apache.oltu.oauth2.as.issuer.MD5Generator,\n    org.wso2.carbon.identity.oauth.tokenvaluegenerator.SHA256Generator --&gt;\n    &lt;!--&lt;AccessTokenValueGenerator&gt;org.wso2.carbon.identity.oauth.tokenvaluegenerator.SHA256Generator&lt;/AccessTokenValueGenerator&gt;--&gt;\n\n&lt;!-- This configuration is used to specify whether the Service Provider tenant domain should be used when generating\naccess token.Otherwise user domain will be used.Currently this value is only supported by the JWTTokenIssuer. --&gt;\n    &lt;!--&lt;UseSPTenantDomain&gt;True&lt;/UseSPTenantDomain&gt;--&gt;\n</code></pre> <p>Add the following properties related to token persistence within the <code>&lt;OAuth&gt;</code> tag.</p> <pre><code>&lt;TokenPersistence&gt;\n    &lt;Enable&gt;true&lt;/Enable&gt;\n    &lt;PoolSize&gt;0&lt;/PoolSize&gt;\n    &lt;RetryCount&gt;5&lt;/RetryCount&gt;\n&lt;/TokenPersistence&gt;\n</code></pre> <p>Add the following property within the <code>&lt;OpenIDConnect&gt;</code> tag.</p> <pre><code>&lt;SignJWTWithSPKey&gt;false&lt;/SignJWTWithSPKey&gt;\n</code></pre> <p>Replace the <code>&lt;OAuth2RevokeEPUrll&gt;</code> property with the following.</p> <pre><code>&lt;OAuth2RevokeEPUrl&gt;${carbon.protocol}://${carbon.host}:${carbon.management.port}/oauth2/revoke&lt;/OAuth2RevokeEPUrl&gt;\n</code></pre> <p>Add the following event listener within the <code>&lt;EventListeners&gt;</code> tag. Uncomment this listener if you are using SCIM 2.0.</p> <pre><code>&lt;!-- Uncomment the following event listener if SCIM2 is used. --&gt;\n&lt;!--EventListener type=\"org.wso2.carbon.user.core.listener.UserOperationEventListener\"\nname = \"org.wso2.carbon.identity.scim2.common.listener.SCIMUserOperationListener\"\norderId = \"93\"\nenable = \"true\" /--&gt;\n</code></pre> <p>Add the following properties within the <code>&lt;ResourceAccessControl&gt;</code> tag. These properties specify the access levels and permissions for the SCIM 2.0 resources.</p> <pre><code>&lt;Resource context=\"(.*)/scim2/Users\" secured=\"true\" http-method=\"POST\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/usermgt/create&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/scim2/Users\" secured=\"true\" http-method=\"GET\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/usermgt/list&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/scim2/Groups\" secured=\"true\" http-method=\"POST\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/rolemgt/create&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/scim2/Groups\" secured=\"true\" http-method=\"GET\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/rolemgt/view&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/scim2/Users/(.*)\" secured=\"true\" http-method=\"GET\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/usermgt/view&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/scim2/Users/(.*)\" secured=\"true\" http-method=\"PUT\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/usermgt/update&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/scim2/Users/(.*)\" secured=\"true\" http-method=\"PATCH\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/usermgt/update&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/scim2/Users/(.*)\" secured=\"true\" http-method=\"DELETE\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/usermgt/delete&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/scim2/Groups/(.*)\" secured=\"true\" http-method=\"GET\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/rolemgt/view&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/scim2/Groups/(.*)\" secured=\"true\" http-method=\"PUT\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/rolemgt/update&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/scim2/Groups/(.*)\" secured=\"true\" http-method=\"PATCH\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/rolemgt/update&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/scim2/Groups/(.*)\" secured=\"true\" http-method=\"DELETE\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/rolemgt/delete&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/scim2/Me\" secured=\"true\"    http-method=\"GET\"&gt;\n    &lt;Permissions&gt;/permission/admin/login&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/scim2/Me\" secured=\"true\" http-method=\"DELETE\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/usermgt/delete&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/scim2/Me\" secured=\"true\"    http-method=\"PUT\"&gt;\n    &lt;Permissions&gt;/permission/admin/login&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/scim2/Me\" secured=\"true\"   http-method=\"PATCH\"&gt;\n    &lt;Permissions&gt;/permission/admin/login&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/scim2/Me\" secured=\"true\" http-method=\"POST\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/usermgt/create&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"/scim2/ServiceProviderConfig\" secured=\"false\" http-method=\"all\"&gt;\n    &lt;Permissions&gt;&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"/scim2/ResourceType\" secured=\"false\" http-method=\"all\"&gt;\n    &lt;Permissions&gt;&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"/scim2/Bulk\" secured=\"true\"  http-method=\"all\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/usermgt&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/oauth2/dcr/(.*)\" secured=\"true\" http-method=\"all\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/applicationmgt&lt;/Permissions&gt;\n&lt;/Resource&gt;\n</code></pre> <p>Add the following properties within the <code>&lt;TenantContextsToRewrite&gt;&lt;WebApp&gt;</code> tag.</p> <pre><code>&lt;Context&gt;/scim2&lt;/Context&gt;\n&lt;Context&gt;/api/identity/oauth/dcr/v1.0&lt;/Context&gt;\n</code></pre> <p>Remove the following property found within the <code>&lt;OAuth&gt;</code> tag.</p> <pre><code>&lt;AppInfoCacheTimeout&gt;-1&lt;/AppInfoCacheTimeout&gt;\n&lt;AuthorizationGrantCacheTimeout&gt;-1&lt;/AuthorizationGrantCacheTimeout&gt;\n&lt;SessionDataCacheTimeout&gt;-1&lt;/SessionDataCacheTimeout&gt;\n&lt;ClaimCacheTimeout&gt;-1&lt;/ClaimCacheTimeout&gt;\n</code></pre> <p>Add the following commented property within the <code>&lt;OAuth&gt;</code> tag.</p> <pre><code>&lt;!-- True, if access token alias is stored in the database instead of access token.\nEg.token alias and token is same when\ndefault AccessTokenValueGenerator is used.\nWhen JWTTokenIssuer is used, jti is used as the token alias\nDefault: true.\nApplicable values: true, false--&gt;\n\n    &lt;!--&lt;PersistAccessTokenAlias&gt;false&lt;/PersistAccessTokenAlias&gt;--&gt;\n</code></pre> <p>Replace the <code>&lt;OAuth2DCREPUrl&gt;</code> property with the property value given below.</p> <pre><code>&lt;OAuth2DCREPUrl&gt;${carbon.protocol}://${carbon.host}:${carbon.management.port}/api/identity/oauth2/dcr/v1.0/register&lt;/OAuth2DCREPUrl&gt;\n</code></pre> <p>Uncomment the following property and add line number 3 given below to the file.</p> <pre><code>&lt;TokenValidators&gt;\n    &lt;TokenValidator type=\"bearer\" class=\"org.wso2.carbon.identity.oauth2.validators.DefaultOAuth2TokenValidator\" /&gt;\n    &lt;TokenValidator type=\"jwt\" class=\"org.wso2.carbon.identity.oauth2.validators.OAuth2JWTTokenValidator\" /&gt;\n&lt;/TokenValidators&gt;\n</code></pre> <p>Add the following commented property to the file. You can place it after the <code>&lt;/EnableAssertions&gt;</code> closing tag.</p> <pre><code>&lt;!-- This should be true if subject identifier in the token validation response needs to adhere to the\nfollowing SP configuration.\n\n- Use tenant domain in local subject identifier. - Use user store domain in local subject identifier.\n\nif the value is false, subject identifier will be set as the fully qualified username.\n\nDefault value: false\n\nSupported versions: IS 5.4.0 beta onwards--&gt;\n    &lt;!--&lt;BuildSubjectIdentifierFromSPConfig&gt;true&lt;/BuildSubjectIdentifierFromSPConfig&gt;--&gt;\n</code></pre> <p>Uncomment the <code>&lt;UserType&gt;</code> property that has the value \"Federated\" and comment out the <code>&lt;UserType&gt;</code> property that has the value \"Local\" as seen below. The property can be found within the <code>&lt;SAML2Grant&gt;</code> tag.</p> <pre><code>&lt;SAML2Grant&gt;\n    &lt;!--SAML2TokenHandler&gt;&lt;/SAML2TokenHandler--&gt;\n    &lt;!-- UserType conifg decides whether the SAML assertion carrying user is local user or a federated user.\n            Only Local Users can access claims from local userstore. LEGACY users will have to have tenant domain appended username.\n            They will not be able to access claims from local userstore. To get claims by mapping users with exact same username from local\n            userstore (for non LOCAL scenarios) use mapFederatedUsersToLocal config --&gt;\n    &lt;!--&lt;UserType&gt;LOCAL&lt;/UserType&gt;--&gt;\n    &lt;UserType&gt;FEDERATED&lt;/UserType&gt;\n    &lt;!--UserType&gt;LEGACY&lt;/UserType--&gt;\n&lt;/SAML2Grant&gt;\n</code></pre> <p>Remove the following properties found within the <code>&lt;SSOService&gt;</code> tag.</p> <p>This step is optional.</p> <pre><code>&lt;PersistanceCacheTimeout&gt;157680000&lt;/PersistanceCacheTimeout&gt;\n&lt;SessionIndexCacheTimeout&gt;157680000&lt;/SessionIndexCacheTimeout&gt;\n</code></pre> <p>Add the following properties to the file. You can place the code block after the <code>&lt;/SCIM&gt;</code> closing tag.</p> <pre><code>&lt;SCIM2&gt;\n    &lt;!--Default value for UserEPUrl and GroupEPUrl are built in following format\n            https://&lt;HostName&gt;:&lt;MgtTrpProxyPort except 443&gt;/&lt;ProxyContextPath&gt;/&lt;context&gt;/&lt;path&gt;\n            If that doesn't satisfy uncomment the following config and explicitly configure the value--&gt;\n    &lt;!--UserEPUrl&gt;${carbon.protocol}://${carbon.host}:${carbon.management.port}/scim2/Users&lt;/UserEPUrl--&gt;\n    &lt;!--GroupEPUrl&gt;${carbon.protocol}://${carbon.host}:${carbon.management.port}/scim2/Groups&lt;/GroupEPUrl--&gt;\n&lt;/SCIM2&gt;\n</code></pre> <p>Add the following properties to the file. You can place it after the <code>&lt;/EnableAskPasswordAdminUI&gt;</code> closing tag.</p> <pre><code>&lt;EnableRecoveryEndpoint&gt;true&lt;/EnableRecoveryEndpoint&gt;\n&lt;EnableSelfSignUpEndpoint&gt;true&lt;/EnableSelfSignUpEndpoint&gt;\n</code></pre> <p>Add the following properties within the <code>&lt;ResourceAccessControl&gt;</code> tag.</p> <pre><code>&lt;Resource context=\"(.*)/api/identity/oauth2/dcr/v1.0/register(.*)\" secured=\"true\" http-method=\"POST\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/applicationmgt/create&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/oauth2/dcr/v1.0/register(.*)\" secured=\"true\" http-method=\"DELETE\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/applicationmgt/delete&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/oauth2/dcr/v1.0/register(.*)\" secured=\"true\" http-method=\"PUT\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/applicationmgt/update&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/oauth2/dcr/v1.0/register(.*)\" secured=\"true\" http-method=\"GET\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/applicationmgt/view&lt;/Permissions&gt;\n&lt;/Resource&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.3.0-5.4.0/#oidc-scope-configxml-file","title":"<code>oidc-scope-config.xml</code> file","text":"<p>Stored in the /repository/conf/identity folder. <p>Replace the <code>&lt;Claim&gt;</code> tag within the <code>&lt;Scope id=\"openid\"&gt;</code> tag with the following.</p> <pre><code>&lt;Claim&gt;\n    sub, email, email_verified, name, family_name, given_name, middle_name, nickname, preferred_username, profile,\n    picture, website, gender, birthdate, zoneinfo, locale, updated_at, phone_number, phone_number_verified,\n    address,street_address,country, formatted, postal_code, locality, region\n&lt;/Claim&gt;\n</code></pre> <p>Replace the <code>&lt;Claim&gt;</code> tag within the <code>&lt;Scope id=\"address\"&gt;</code> tag with the following.</p> <pre><code>&lt;Claim&gt;address,street&lt;/Claim&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.3.0-5.4.0/#authenticatorsxml-file","title":"<code>authenticators.xml</code> file","text":"<p>Stored in the /repository/conf/security folder. <p>Update the parameter name of the JITUserProvisioning parameter to the following.</p> <pre><code>&lt;Parameter name=\"JITUserProvisioningEnabled\"&gt;true&lt;/Parameter&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.3.0-5.4.0/#webxml-file","title":"<code>web.xml</code> file","text":"<p>Stored in the /repository/conf/tomcat folder. <p>Add the following property under the <code>&lt;session-config&gt;</code> tag.</p> <pre><code>&lt;tracking-mode&gt;COOKIE&lt;/tracking-mode&gt;\n</code></pre> <p>Add the following properties below the <code>&lt;servlet-class&gt;org.apache.jasper.servlet.JspServlet&lt;/servlet-class&gt;</code> property.</p> <pre><code>&lt;init-param&gt;\n   &lt;param-name&gt;compilerSourceVM&lt;/param-name&gt;\n   &lt;param-value&gt;1.8&lt;/param-value&gt;\n&lt;/init-param&gt;\n&lt;init-param&gt;\n   &lt;param-name&gt;compilerTargetVM&lt;/param-name&gt;\n   &lt;param-value&gt;1.8&lt;/param-value&gt;\n&lt;/init-param&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.3.0-5.4.0/#email-admin-configxml-file","title":"<code>email-admin-config.xml</code> file","text":"<p>Stored in the /repository/conf/email folder. <p>Replace \"https://localhost:9443\" in all instances of the accountrecoveryendpoint URL with the {carbon.product-url} placeholder. The URL should look similiar to the URL shown in the code block below. The placeholder will retrieve the value configured in the carbon.xml file.</p> <p>You can skip this step if you have already configured this with your load balancer URL.</p> <pre><code>{carbon.product-url}}/accountrecoveryendpoint/confirmregistration.do?confirmation={confirmation-code}&amp;amp;userstoredomain={userstore-domain}&amp;amp;username={url:user-name}&amp;amp;tenantdomain={tenant-domain}\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.3.0-5.4.0/#cipher-toolproperties-file","title":"<code>cipher-tool.properties</code> file","text":"<p>Stored in the /repository/conf folder. <p>Add the following property.</p> <pre><code>ThirftBasedEntitlementConfig.KeyStore.Password=repository/conf/identity/identity.xml//Server/EntitlementSettings/ThirftBasedEntitlementConfig/KeyStore/Password,true\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.3.0-5.4.0/#cipher-textproperties-file","title":"<code>cipher-text.properties</code> file","text":"<p>Stored in the /repository/conf folder. <p>Add the following property.</p> <pre><code>ThirftBasedEntitlementConfig.KeyStore.Password=[wso2carbon]\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.3.0-5.4.0/#claim-configxml-file","title":"<code>claim-config.xml</code> file","text":"<p>Stored in the /repository/conf folder. <p>Add the following claims within the <code>&lt;Dialect dialectURI=\"http://wso2.org/claims\"&gt;</code> tag.</p> <pre><code>&lt;Claim&gt;\n    &lt;ClaimURI&gt;http://wso2.org/claims/identity/phoneVerified&lt;/ClaimURI&gt;\n    &lt;DisplayName&gt;Phone Verified&lt;/DisplayName&gt;\n    &lt;!-- Proper attribute Id in your user store must be configured for this --&gt;\n    &lt;AttributeID&gt;phoneVerified&lt;/AttributeID&gt;\n    &lt;Description&gt;Phone Verified&lt;/Description&gt;\n&lt;/Claim&gt;\n\n&lt;Claim&gt;\n    &lt;ClaimURI&gt;http://wso2.org/claims/department&lt;/ClaimURI&gt;\n    &lt;DisplayName&gt;Department&lt;/DisplayName&gt;\n    &lt;AttributeID&gt;departmentNumber&lt;/AttributeID&gt;\n    &lt;Description&gt;Department&lt;/Description&gt;\n    &lt;SupportedByDefault /&gt;\n    &lt;ReadOnly /&gt;\n&lt;/Claim&gt;\n</code></pre> <p>Add the following claims. This new claim dialect and the claims within it are required for SCIM 2.0.</p> <pre><code>&lt;Dialect dialectURI=\"urn:ietf:params:scim:schemas:core:2.0\"&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:id&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Id&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;scimId&lt;/AttributeID&gt;\n        &lt;Description&gt;Id&lt;/Description&gt;\n        &lt;Required /&gt;\n        &lt;DisplayOrder&gt;1&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/userid&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:externalId&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;External Id&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;externalId&lt;/AttributeID&gt;\n        &lt;Description&gt;External Id&lt;/Description&gt;\n        &lt;Required /&gt;\n        &lt;DisplayOrder&gt;1&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/externalid&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:meta.created&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Meta - Created&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;createdDate&lt;/AttributeID&gt;\n        &lt;Description&gt;Meta - Created&lt;/Description&gt;\n        &lt;Required /&gt;\n        &lt;DisplayOrder&gt;1&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/created&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:meta.lastModified&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Meta - Last Modified&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;lastModifiedDate&lt;/AttributeID&gt;\n        &lt;Description&gt;Meta - Last Modified&lt;/Description&gt;\n        &lt;Required /&gt;\n        &lt;DisplayOrder&gt;1&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/modified&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:meta.location&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Meta - Location&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;location&lt;/AttributeID&gt;\n        &lt;Description&gt;Meta - Location&lt;/Description&gt;\n        &lt;Required /&gt;\n        &lt;DisplayOrder&gt;1&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/location&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:meta.resourceType&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Meta - Location&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;ref&lt;/AttributeID&gt;\n        &lt;Description&gt;Meta - Location&lt;/Description&gt;\n        &lt;Required /&gt;\n        &lt;DisplayOrder&gt;1&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/resourceType&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:meta.version&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Meta - Version&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;im&lt;/AttributeID&gt;\n        &lt;Description&gt;Meta - Version&lt;/Description&gt;\n        &lt;Required /&gt;\n        &lt;DisplayOrder&gt;1&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/im&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n&lt;/Dialect&gt;\n&lt;Dialect dialectURI=\"urn:ietf:params:scim:schemas:core:2.0:User\"&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:userName&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;User Name&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;uid&lt;/AttributeID&gt;\n        &lt;Description&gt;User Name&lt;/Description&gt;\n        &lt;DisplayOrder&gt;2&lt;/DisplayOrder&gt;\n        &lt;Required /&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/username&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:name.givenName&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Name - Given Name&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;givenName&lt;/AttributeID&gt;\n        &lt;Description&gt;Given Name&lt;/Description&gt;\n        &lt;Required /&gt;\n        &lt;DisplayOrder&gt;1&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/givenname&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:name.familyName&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Name - Family Name&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;sn&lt;/AttributeID&gt;\n        &lt;Description&gt;Family Name&lt;/Description&gt;\n        &lt;DisplayOrder&gt;2&lt;/DisplayOrder&gt;\n        &lt;Required /&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/lastname&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:name.formatted&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Name - Formatted Name&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;formattedName&lt;/AttributeID&gt;\n        &lt;Description&gt;Formatted Name&lt;/Description&gt;\n        &lt;DisplayOrder&gt;2&lt;/DisplayOrder&gt;\n        &lt;Required /&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/formattedName&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:name.middleName&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Name - Middle Name&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;middleName&lt;/AttributeID&gt;\n        &lt;Description&gt;Middle Name&lt;/Description&gt;\n        &lt;DisplayOrder&gt;2&lt;/DisplayOrder&gt;\n        &lt;Required /&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/middleName&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:name.honorificPrefix&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Name - Honoric Prefix&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;honoricPrefix&lt;/AttributeID&gt;\n        &lt;Description&gt;Honoric Prefix&lt;/Description&gt;\n        &lt;DisplayOrder&gt;2&lt;/DisplayOrder&gt;\n        &lt;Required /&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/honorificPrefix&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:name.honorificSuffix&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Name - Honoric Suffix&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;honoricSuffix&lt;/AttributeID&gt;\n        &lt;Description&gt;Honoric Suffix&lt;/Description&gt;\n        &lt;DisplayOrder&gt;2&lt;/DisplayOrder&gt;\n        &lt;Required /&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/honorificSuffix&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:displayName&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Display Name&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;displayName&lt;/AttributeID&gt;\n        &lt;Description&gt;Display Name&lt;/Description&gt;\n        &lt;DisplayOrder&gt;2&lt;/DisplayOrder&gt;\n        &lt;Required /&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/displayName&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:nickName&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Nick Name&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;nickName&lt;/AttributeID&gt;\n        &lt;Description&gt;Nick Name&lt;/Description&gt;\n        &lt;DisplayOrder&gt;2&lt;/DisplayOrder&gt;\n        &lt;Required /&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/nickname&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:profileUrl&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Profile URL&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;url&lt;/AttributeID&gt;\n        &lt;Description&gt;Profile URL&lt;/Description&gt;\n        &lt;DisplayOrder&gt;2&lt;/DisplayOrder&gt;\n        &lt;Required /&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/url&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:title&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Title&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;title&lt;/AttributeID&gt;\n        &lt;Description&gt;Title&lt;/Description&gt;\n        &lt;DisplayOrder&gt;2&lt;/DisplayOrder&gt;\n        &lt;Required /&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/title&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:userType&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;User Type&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;userType&lt;/AttributeID&gt;\n        &lt;Description&gt;User Type&lt;/Description&gt;\n        &lt;DisplayOrder&gt;2&lt;/DisplayOrder&gt;\n        &lt;Required /&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/userType&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:preferredLanguage&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Preferred Language&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;preferredLanguage&lt;/AttributeID&gt;\n        &lt;Description&gt;Preferred Language&lt;/Description&gt;\n        &lt;DisplayOrder&gt;2&lt;/DisplayOrder&gt;\n        &lt;Required /&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/preferredLanguage&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:locale&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Locality&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;localityName&lt;/AttributeID&gt;\n        &lt;Description&gt;Locality&lt;/Description&gt;\n        &lt;DisplayOrder&gt;2&lt;/DisplayOrder&gt;\n        &lt;Required /&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/local&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:timezone&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Time Zone&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;timeZone&lt;/AttributeID&gt;\n        &lt;Description&gt;Time Zone&lt;/Description&gt;\n        &lt;DisplayOrder&gt;2&lt;/DisplayOrder&gt;\n        &lt;Required /&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/timeZone&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:active&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Active&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;active&lt;/AttributeID&gt;\n        &lt;Description&gt;Active&lt;/Description&gt;\n        &lt;DisplayOrder&gt;2&lt;/DisplayOrder&gt;\n        &lt;Required /&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/active&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:emails.work&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Emails - Work Email&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;workEmail&lt;/AttributeID&gt;\n        &lt;Description&gt;Work Email&lt;/Description&gt;\n        &lt;DisplayOrder&gt;5&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;RegEx&gt;^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$&lt;/RegEx&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/emails.work&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:emails.home&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Emails - Home Email&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;homeEmail&lt;/AttributeID&gt;\n        &lt;Description&gt;Home Email&lt;/Description&gt;\n        &lt;DisplayOrder&gt;5&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;RegEx&gt;^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$&lt;/RegEx&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/emails.home&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:emails.other&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Emails - Other Email&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;otherEmail&lt;/AttributeID&gt;\n        &lt;Description&gt;Other Email&lt;/Description&gt;\n        &lt;DisplayOrder&gt;5&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;RegEx&gt;^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$&lt;/RegEx&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/emails.other&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:phoneNumbers.mobile&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Phone Numbers - Mobile Number&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;mobile&lt;/AttributeID&gt;\n        &lt;Description&gt;Mobile Number&lt;/Description&gt;\n        &lt;DisplayOrder&gt;5&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;RegEx&gt;^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$&lt;/RegEx&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/mobile&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:phoneNumbers.home&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Phone Numbers - Home Phone Number&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;homePhone&lt;/AttributeID&gt;\n        &lt;Description&gt;Home Phone&lt;/Description&gt;\n        &lt;DisplayOrder&gt;5&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;RegEx&gt;^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$&lt;/RegEx&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/phoneNumbers.home&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:phoneNumbers.work&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Phone Numbers - Work Phone Number&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;workPhone&lt;/AttributeID&gt;\n        &lt;Description&gt;Work Phone&lt;/Description&gt;\n        &lt;DisplayOrder&gt;5&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;RegEx&gt;^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$&lt;/RegEx&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/phoneNumbers.work&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:phoneNumbers.other&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Phone Numbers - Other&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;otherPhoneNumber&lt;/AttributeID&gt;\n        &lt;Description&gt;Other Phone Number&lt;/Description&gt;\n        &lt;DisplayOrder&gt;5&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;RegEx&gt;^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$&lt;/RegEx&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/phoneNumbers.other&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:ims.gtalk&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;IM - Gtalk&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;imGtalk&lt;/AttributeID&gt;\n        &lt;Description&gt;IM - Gtalk&lt;/Description&gt;\n        &lt;DisplayOrder&gt;5&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/gtalk&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:ims.skype&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;IM - Skype&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;imSkype&lt;/AttributeID&gt;\n        &lt;Description&gt;IM - Skype&lt;/Description&gt;\n        &lt;DisplayOrder&gt;5&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/skype&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:photos.photo&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Photo&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;photoUrl&lt;/AttributeID&gt;\n        &lt;Description&gt;Photo&lt;/Description&gt;\n        &lt;DisplayOrder&gt;5&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/photourl&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:photos.thumbnail&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Photo - Thumbnail&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;thumbnail&lt;/AttributeID&gt;\n        &lt;Description&gt;Photo - Thumbnail&lt;/Description&gt;\n        &lt;DisplayOrder&gt;5&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/thumbnail&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:addresses.home&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Address - Home&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;localityAddress&lt;/AttributeID&gt;\n        &lt;Description&gt;Address - Home&lt;/Description&gt;\n        &lt;DisplayOrder&gt;5&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/addresses.locality&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:addresses.work&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Address - Work&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;region&lt;/AttributeID&gt;\n        &lt;Description&gt;Address - Work&lt;/Description&gt;\n        &lt;DisplayOrder&gt;5&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/region&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:groups&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Groups&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;groups&lt;/AttributeID&gt;\n        &lt;Description&gt;Groups&lt;/Description&gt;\n        &lt;DisplayOrder&gt;5&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/groups&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:entitlements.default&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Entitlements&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;entitlements&lt;/AttributeID&gt;\n        &lt;Description&gt;Entitlements&lt;/Description&gt;\n        &lt;DisplayOrder&gt;5&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/entitlements&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:roles.default&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Roles&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;roles&lt;/AttributeID&gt;\n        &lt;Description&gt;Roles&lt;/Description&gt;\n        &lt;DisplayOrder&gt;5&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/role&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:x509Certificates.default&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;X509Certificates&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;x509Certificates&lt;/AttributeID&gt;\n        &lt;Description&gt;X509Certificates&lt;/Description&gt;\n        &lt;DisplayOrder&gt;5&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault /&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/x509Certificates&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n&lt;/Dialect&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.3.0-5.4.0/#application-authenticationxml-file","title":"<code>application-authentication.xml</code> file","text":"<p>Stored in the /repository/conf/identity folder. <p>Add the following parameter within the FacebookAuthenticator tag.</p> <pre><code>&lt;!--&lt;Parameter name=\"ClaimDialectUri\"&gt;http://wso2.org/facebook/claims&lt;/Parameter&gt;--&gt;\n</code></pre> <p>Add the following parameter within the relevant tags of the following authenticators: MobileConnectAuthenticator, EmailOTP, SMSOTP and totp</p> <pre><code>&lt;Parameter name=\"redirectToMultiOptionPageOnFailure\"&gt;false&lt;/Parameter&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.3.0-5.4.0/#entitlementproperties-file","title":"<code>entitlement.properties</code> file","text":"<p>Stored in the /repository/conf/identity folder. <p>WSO2 IS 5.4.0 introduces a set of new XACML policies that load at server startup when the PAP.Policy.Add.Start.Enable property is set to true. Therefore, when you upgrade to IS 5.4.0, follow one of the steps below depending on whether you want to add the new policies:</p> <ul> <li>If you want to add the new policies on server startup, set both PDP.Balana.Config.Enable and PAP.Policy.Add.Start.Enable properties to true.</li> <li>If you do not want to add the new policies on server startup, set both PDP.Balana.Config.Enable and PAP.Policy.Add.Start.Enable properties to false.</li> </ul> <p>Note</p> <p>If you set the PDP.Balana.Config.Enable property to false, while the PAP.Policy.Add.Start.Enable property is set to true, the server does not look for the balana-config.xml file on startup. This results in an error as follows because the balana-config.xml file includes functions required by the new XACML policies:</p> <pre><code>TID: [-1234] [] [2018-01-01 01:16:37,547] ERROR\n{org.wso2.carbon.identity.entitlement.EntitlementUtil}\nError while adding sample XACML policies\njava.lang.IllegalArgumentException: Error while parsing start up policy\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.4.0-5.5.0/","title":"Configuration Changes - WSO2 IS 5.4.0 to 5.5.0","text":"<p>Listed below are the configuration and behavioral changes from WSO2 IS version 5.4.0 to 5.5.0.</p> <ul> <li>Configuration changes</li> </ul>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.4.0-5.5.0/#configuration-changes","title":"Configuration changes","text":"<p>Listed below are the configuration changes from WSO2 IS version 5.4.0 to 5.5.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.4.0-5.5.0/#carbonxml-file","title":"<code>carbon.xml</code> file","text":"<p>Stored in the /repository/conf folder. <p>Change the version property value to 5.5.0.</p> <pre><code>&lt;Version&gt;5.5.0&lt;/Version&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.4.0-5.5.0/#application-authenticationxml-file","title":"<code>application-authentication.xml</code> file","text":"<p>Stored in the /repository/conf/identity folder. <p>Replace the following property found within the  <code>&lt;Extensions&gt;</code> list.</p> <p>If you are using a custom <code>&lt;StepBasedSequenceHandler&gt;</code>, skip this step.</p> <pre><code>&lt;StepBasedSequenceHandler&gt;org.wso2.carbon.identity.application.authentication.framework.handler.sequence.impl.DefaultStepBasedSequenceHandler&lt;/StepBasedSequenceHandler&gt;\n</code></pre> <p>with the one given below.</p> <pre><code>&lt;StepBasedSequenceHandler&gt;org.wso2.carbon.identity.application.authentication.framework.handler.sequence.impl.GraphBasedSequenceHandler&lt;/StepBasedSequenceHandler&gt;\n</code></pre> <p>If you are using a custom authorization handler, see the content on Migrating Custom Authorization Handlers.</p> <p>The OpenIDAuthenticator is no longer available. Remove the following configurations that are related to it.</p> <p>Remove the following property found within the <code>&lt;AuthenticatorNameMappings&gt;</code> tag.</p> <pre><code>&lt;AuthenticatorNameMapping name=\"OpenIDAuthenticator\" alias=\"openid\" /&gt;\n</code></pre> <p>Remove the whole configuration block that starts with the config given below found within the <code>&lt;AuthenticatorConfigs&gt;</code> tag.</p> <pre><code>&lt;AuthenticatorConfig name=\"OpenIDAuthenticator\" enabled=\"true\"&gt;\n.....\n.....\n&lt;/AuthenticatorConfig&gt;\n</code></pre> <p>Replace the AuthenticatorConfig block for the MobileConnectAuthenticator found within the <code>&lt;AuthenticatorConfigs&gt;</code> tag, with the following configuration.</p> <pre><code>&lt;AuthenticatorConfig name=\"MobileConnectAuthenticator\" enabled=\"true\"&gt;\n    &lt;Parameter name=\"MCAuthenticationEndpointURL\"&gt;mobileconnectauthenticationendpoint/mobileconnect.jsp&lt;/Parameter&gt;\n    &lt;Parameter name=\"MCDiscoveryAPIURL\"&gt;https://discover.mobileconnect.io/gsma/v2/discovery/&lt;/Parameter&gt;\n    &lt;Parameter name=\"redirectToMultiOptionPageOnFailure\"&gt;false&lt;/Parameter&gt;\n&lt;/AuthenticatorConfig&gt;\n</code></pre> <p>Remove the following property found within the <code>&lt;AuthenticatorNameMappings&gt;</code> tag. The AuthorizationHandler property has been removed from this file for newer versions of this product.</p> <pre><code>&lt;AuthorizationHandler&gt;org.wso2.carbon.identity.application.authz.xacml.handler.impl.XACMLBasedAuthorizationHandler&lt;/AuthorizationHandler&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.4.0-5.5.0/#identity-eventproperties-file","title":"<code>identity-event.properties</code> file","text":"<p>Stored in the /repository/conf/identity folder. <p>Add the following properties that are required for Request Object Support. For more information about the feature, see Request Object Support.</p> <pre><code>module.name.11=handleRequestObject\nhandleRequestObject.subscription.1=POST_REVOKE_ACESS_TOKEN\nhandleRequestObject.subscription.2=POST_REVOKE_CODE\nhandleRequestObject.subscription.3=POST_REVOKE_ACESS_TOKEN_BY_ID\nhandleRequestObject.subscription.4=POST_REVOKE_CODE_BY_ID\nhandleRequestObject.subscription.5=POST_REFRESH_TOKEN\nhandleRequestObject.subscription.6=POST_ISSUE_CODE\nhandleRequestObject.subscription.7=POST_ISSUE_ACCESS_TOKEN\n</code></pre> <p>Add the following properties to enable the user event handler used to delete user consents when users are deleted.</p> <pre><code>module.name.12=user.consent.delete\nuser.consent.delete.subscription.1=POST_DELETE_USER\nuser.consent.delete.receipt.search.limit=500\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.4.0-5.5.0/#identityxml-file","title":"<code>identity.xml</code> file","text":"<p>Stored in the /repository/conf/identity folder. <p>Remove the <code>&lt;ClientAuthHandlers&gt;</code> code block found within the <code>&lt;OAuth&gt;</code> tag. From WSO2 IS 5.5.0 onwards, client authentication is handled differently. For more information, see the introduction of the Writing A New OAuth Client Authenticator topic.</p> <pre><code>&lt;ClientAuthHandlers&gt;\n    &lt;ClientAuthHandler Class=\"org.wso2.carbon.identity.oauth2.token.handlers.clientauth.BasicAuthClientAuthHandler\"&gt;\n        &lt;Property Name=\"StrictClientCredentialValidation\"&gt;false&lt;/Property&gt;\n    &lt;/ClientAuthHandler&gt;\n&lt;/ClientAuthHandlers&gt;\n</code></pre> <p>Add the following property within the <code>&lt;ScopeValidators&gt;</code> tag. For more information about the XACML based scope validator, see Validating the Scope of OAuth Access Tokens using XACML Policies.</p> <p>To migrate custom scope validators, see the topic on Migrating Custom Scope Validators.</p> <pre><code>&lt;ScopeValidator class=\"org.wso2.carbon.identity.oauth2.validators.xacml.XACMLScopeValidator\"/&gt;\n</code></pre> <p>Add the following property within the <code>&lt;OpenIDConnect&gt;</code> tag to enable the service provider wise audience configuration. For more information about this, see</p> <p>This feature requires a new database table that is created when running the migration script. If you do not wish to use this feature, you can set the value of the property given below to false.</p> <pre><code>&lt;EnableAudiences&gt;true&lt;/EnableAudiences&gt;\n</code></pre> <p>Add the following property within the <code>&lt;OpenIDConnect&gt;</code> tag.</p> <pre><code>&lt;LogoutTokenExpiration&gt;120&lt;/LogoutTokenExpiration&gt;\n</code></pre> <p>Add the following property within the <code>&lt;EventListeners&gt;</code> tag.</p> <pre><code>&lt;EventListener type=\"org.wso2.carbon.user.core.listener.UserOperationEventListener\"\n                       name=\"org.wso2.carbon.user.mgt.listeners.UserDeletionEventListener\"\n                       orderId=\"98\" enable=\"false\"/&gt;\n</code></pre> <p>Add the following code block within the root tag after the <code>&lt;EventListeners&gt;</code> code block. For more information about this configuration, see Tracking user deletion on deleting a user.</p> <pre><code>&lt;UserDeleteEventRecorders&gt;\n    &lt;UserDeleteEventRecorder name=\"org.wso2.carbon.user.mgt.recorder.DefaultUserDeletionEventRecorder\" enable=\"false\"&gt;\n        &lt;!-- Un comment below line if you need to write entries to a separate .csv file. Otherwise this will be\n            written in to a log file using a separate appender. --&gt;\n        &lt;!--&lt;Property name=\"path\"&gt;${carbon.home}/repository/logs/delete-records.csv&lt;/Property&gt;--&gt;\n    &lt;/UserDeleteEventRecorder&gt;\n&lt;/UserDeleteEventRecorders&gt;\n</code></pre> <p>Do the following configuration changes to enable fine grained access control introduced with Identity Server 5.5.0</p> <p>Remove the following property found within the <code>&lt;ResourceAccessControl&gt;</code> tag.</p> <pre><code>&lt;Resource context=\"(.*)/api/identity/user/(.*)\" secured=\"true\" http-method=\"all\"/&gt;\n</code></pre> <p>Add the following set of resources within the &lt; ResourceAccessControl&gt; tag.</p> <pre><code>&lt;Resource context=\"(.*)/api/identity/user/v1.0/validate-code\" secured=\"true\" http-method=\"all\"/&gt;\n&lt;Resource context=\"(.*)/api/identity/user/v1.0/resend-code\" secured=\"true\" http-method=\"all\"/&gt;\n&lt;Resource context=\"(.*)/api/identity/user/v1.0/me\" secured=\"true\" http-method=\"POST\"/&gt;\n&lt;Resource context=\"(.*)/api/identity/user/v1.0/me\" secured=\"true\" http-method=\"GET\"/&gt;\n&lt;Resource context=\"(.*)/api/identity/user/v1.0/pi-info\" secured=\"true\" http-method=\"all\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/usermgt/view&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/user/v1.0/pi-info/(.*)\" secured=\"true\" http-method=\"all\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/usermgt/view&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/consent-mgt/v1.0/consents\" secured=\"true\" http-method=\"all\"/&gt;\n&lt;Resource context=\"(.*)/api/identity/consent-mgt/v1.0/consents/receipts/(.*)\" secured=\"true\" http-method=\"all\"/&gt;\n&lt;Resource context=\"(.*)/api/identity/consent-mgt/v1.0/consents/purposes\" secured=\"true\" http-method=\"POST\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/consentmgt/add&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/consent-mgt/v1.0/consents/purposes(.*)\" secured=\"true\" http-method=\"GET\"/&gt;\n&lt;Resource context=\"(.*)/api/identity/consent-mgt/v1.0/consents/purposes(.+)\" secured=\"true\" http-method=\"DELETE\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/consentmgt/delete&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/consent-mgt/v1.0/consents/pii-categories\" secured=\"true\" http-method=\"POST\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/consentmgt/add&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/consent-mgt/v1.0/consents/pii-categories(.*)\" secured=\"true\" http-method=\"GET\"/&gt;\n&lt;Resource context=\"(.*)/api/identity/consent-mgt/v1.0/consents/pii-categories(.+)\" secured=\"true\" http-method=\"DELETE\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/consentmgt/delete&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/consent-mgt/v1.0/consents/purpose-categories\" secured=\"true\" http-method=\"POST\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/consentmgt/add&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/consent-mgt/v1.0/consents/purpose-categories(.*)\" secured=\"true\" http-method=\"GET\"/&gt;\n&lt;Resource context=\"(.*)/api/identity/consent-mgt/v1.0/consents/purpose-categories(.+)\" secured=\"true\" http-method=\"DELETE\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/consentmgt/delete&lt;/Permissions&gt;\n&lt;/Resource&gt;\n</code></pre> <p>Replace the following property found within the <code>&lt;WebApp&gt;</code> tag under the <code>&lt;TenantContextsToRewrite&gt;</code> tag.</p> <pre><code>&lt;Context&gt;/api/identity/user/v0.9/&lt;/Context&gt;\n</code></pre> <p>with the one given below</p> <pre><code>&lt;Context&gt;/api/identity/user/v1.0/&lt;/Context&gt;\n</code></pre> <p>Add the following new property within the <code>&lt;WebApp&gt;</code> tag found under the <code>&lt;TenantContextsToRewrite&gt;</code> tag.</p> <pre><code>&lt;Context&gt;/api/identity/consent-mgt/v1.0/&lt;/Context&gt;\n</code></pre> <p>Add the following code block within the root tag after the <code>&lt;SSOService&gt;</code> code block.</p> <p>This configuration specifies whether consent management should be enabled during single sign-on authentication. For more information, see Consent Management with Single-Sign-On.</p> <pre><code>&lt;Consent&gt;\n    &lt;!--Specify whether consent management should be enable during SSO.--&gt;\n    &lt;EnableSSOConsentManagement&gt;true&lt;/EnableSSOConsentManagement&gt;\n&lt;/Consent&gt;\n</code></pre> <p>Add the following code block within the  <code>&lt;OAuth&gt;</code>  tag. This configuration is used  to specify the grant types that filter claims based on user consents. The grant types given below are out-of-the-box grant types that prompt the user for consent.</p> <pre><code>&lt;!--Defines the grant types that will filter user claims based on user consent in their responses such as id_token or user info response.Default grant types that filter user claims based on user consent are 'authorization_code' and 'implicit'.\nSupported versions: IS 5.5.0 onwards. --&gt;\n\n&lt;UserConsentEnabledGrantTypes&gt;\n    &lt;UserConsentEnabledGrantType&gt;\n        &lt;GrantTypeName&gt;authorization_code&lt;/GrantTypeName&gt;\n    &lt;/UserConsentEnabledGrantType&gt;\n    &lt;UserConsentEnabledGrantType&gt;\n        &lt;GrantTypeName&gt;implicit&lt;/GrantTypeName&gt;\n    &lt;/UserConsentEnabledGrantType&gt;\n&lt;/UserConsentEnabledGrantTypes&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.4.0-5.5.0/#log4jproperties-file","title":"<code>log4j.properties</code> file","text":"<p>Stored in the /repository/conf folder. <p>Add the following properties.</p> <pre><code>log4j.logger.DELETE_EVENT_LOGGER=INFO, DELETE_EVENT_LOGFILE\nlog4j.appender.DELETE_EVENT_LOGFILE=org.apache.log4j.FileAppender\nlog4j.appender.DELETE_EVENT_LOGFILE.File=${carbon.home}/repository/logs/delete-event.log\nlog4j.appender.DELETE_EVENT_LOGFILE.Append=true\nlog4j.appender.DELETE_EVENT_LOGFILE.layout=org.apache.log4j.PatternLayout\nlog4j.appender.DELETE_EVENT_LOGFILE.layout.ConversionPattern=%m %n\nlog4j.appender.DELETE_EVENT_LOGFILE.threshold=INFO\nlog4j.additivity.DELETE_EVENT_LOGFILE=false\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.4.0-5.5.0/#provisioning-configxml-file","title":"<code>provisioning-config.xml</code> file","text":"<p>Stored in the /repository/conf/identity folder. <p>Remove the <code>&lt;scim-providers&gt;</code> and <code>&lt;scim-consumers&gt;</code> code blocks from the file.</p>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.5.0-5.6.0/","title":"Configuration Changes - WSO2 IS 5.5.0 to 5.6.0","text":"<p>Listed below are the configuration and behavioral changes from WSO2 IS version 5.5.0 to 5.6.0.</p> <ul> <li>Configuration changes</li> </ul>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.5.0-5.6.0/#configuration-changes","title":"Configuration changes","text":"<p>Listed below are the configuration changes from WSO2 IS version 5.5.0 to 5.6.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.5.0-5.6.0/#carbonxml-file","title":"<code>carbon.xml</code> file","text":"<p>Stored in the /repository/conf folder. <p>Change the version property value to 5.6.0.</p> <pre><code>&lt;Version&gt;5.6.0&lt;/Version&gt;\n</code></pre> <p>Add the following new property within the <code>&lt;cache&gt;</code> tag. Setting this property to true enables local cache invalidation for clustered nodes.</p> <pre><code>&lt;ForceLocalCache&gt;false&lt;/ForceLocalCache&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.5.0-5.6.0/#axis2xml-file","title":"<code>axis2.xml</code> file","text":"<p>Stored in the /repository/conf/axis2 folder. <p>Change the following property values to 5.6.0.</p> <pre><code>&lt;parameter name=\"userAgent\" locked=\"true\"&gt;\n        WSO2 Identity Server-5.6.0\n&lt;/parameter&gt;\n&lt;parameter name=\"server\" locked=\"true\"&gt;\n    WSO2 Identity Server-5.6.0\n&lt;/parameter&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.5.0-5.6.0/#application-authenticationxml-file","title":"<code>application-authentication.xml</code> file","text":"<p>Stored in the /repository/conf/identity folder. <p>Add the following new property within the root tag.</p> <pre><code>&lt;AuthenticationEndpointMissingClaimsURL&gt;/authenticationendpoint/claims.do&lt;/AuthenticationEndpointMissingClaimsURL&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.5.0-5.6.0/#entitlementproperties-file","title":"<code>entitlement.properties</code> file","text":"<p>Stored in the /repository/conf/identity folder. <p>Add the following property. Setting this property to true will shorten the SAML JSON response format.</p> <pre><code>JSON.Shorten.Form.Enabled=false\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.5.0-5.6.0/#identityxml-file","title":"<code>identity.xml</code> file","text":"<p>Stored in the /repository/conf/identity folder. <p>Add the following properties within the <code>&lt;JDBCPersistenceManager&gt;&lt;SessionDataPersist&gt;</code> tag. These configurations are relevant for cleaning temporary authentication context data after each authentication flow.</p> <pre><code>&lt;TempDataCleanup&gt;\n    &lt;!-- Enabling separated cleanup for temporary authentication context data --&gt;\n    &lt;Enable&gt;true&lt;/Enable&gt;\n    &lt;!-- When PoolZize &gt; 0, temporary data which have no usage after the authentication flow will be deleted immediately\n                 When PoolZise = 0, data will be deleted only by the scheduled cleanup task--&gt;\n    &lt;PoolSize&gt;20&lt;/PoolSize&gt;\n    &lt;!-- All temporary authentication context data older than CleanUpTimeout value are considered as expired\n                and would be deleted during cleanup task --&gt;\n    &lt;CleanUpTimeout&gt;40&lt;/CleanUpTimeout&gt;\n&lt;/TempDataCleanup&gt;\n</code></pre> <p>Add the following property within the <code>&lt;OAuth&gt;</code> tag for OAuth key hashing. For more information, see Setting Up OAuth Token Hashing.</p> <pre><code>&lt;!-- This should be true if the oauth keys (consumer secret, access token, refresh token and authorization code) need to be hashed,before storing them in the database. If the value is false, the oauth keys will be saved in a plain text format.\nBy default : false.\nSupported versions: IS 5.6.0 onwards.\n   --&gt;\n&lt;EnableClientSecretHash&gt;false&lt;/EnableClientSecretHash&gt;\n</code></pre> <p>Tip</p> <p>Use a fresh server to enable hashing.</p> <p>Add the following configurations within the <code>&lt;EventListeners&gt;</code> tag.</p> <pre><code>&lt;!-- Audit Loggers --&gt;\n&lt;!-- Old Audit Logger --&gt;\n&lt;EventListener type=\"org.wso2.carbon.user.core.listener.UserOperationEventListener\"\n                       name=\"org.wso2.carbon.user.mgt.listeners.UserMgtAuditLogger\"\n                       orderId=\"0\" enable=\"false\"/&gt;\n&lt;!-- New Audit Loggers--&gt;\n&lt;EventListener type=\"org.wso2.carbon.user.core.listener.UserOperationEventListener\"\n                       name=\"org.wso2.carbon.user.mgt.listeners.UserManagementAuditLogger\"\n                       orderId=\"1\" enable=\"true\"/&gt;\n&lt;EventListener type=\"org.wso2.carbon.user.core.listener.UserManagementErrorEventListener\"\n                       name=\"org.wso2.carbon.user.mgt.listeners.UserMgtFailureAuditLogger\"\n                       orderId=\"0\" enable=\"true\"/&gt;\n</code></pre> <p>Add the following properties related to the validitating JWT based on JWKS capability. For more information, see Validating JWT based on JWKS.</p> <pre><code>&lt;!-- JWT validator configurations --&gt;\n&lt;JWTValidatorConfigs&gt;\n    &lt;Enable&gt;true&lt;/Enable&gt;\n    &lt;JWKSEndpoint&gt;\n        &lt;HTTPConnectionTimeout&gt;1000&lt;/HTTPConnectionTimeout&gt;\n        &lt;HTTPReadTimeout&gt;1000&lt;/HTTPReadTimeout&gt;\n        &lt;HTTPSizeLimit&gt;51200&lt;/HTTPSizeLimit&gt;\n    &lt;/JWKSEndpoint&gt;\n&lt;/JWTValidatorConfigs&gt;\n</code></pre> <p>If you are using SCIM 1.1, disable the following SCIM 2.0 event listener.</p> <pre><code>&lt;EventListener type=\"org.wso2.carbon.user.core.listener.UserOperationEventListener\"\n                        name=\"org.wso2.carbon.identity.scim2.common.listener.SCIMUserOperationListener\"\n                        orderId=\"93\" enable=\"false\"/&gt;\n</code></pre> <p>If you are using SCIM 2.0, disable the following SCIM 1.1 event listener (this listener is disabled by default in 5.6.0).</p> <pre><code>&lt;EventListener type=\"org.wso2.carbon.user.core.listener.UserOperationEventListener\"\n                        name=\"org.wso2.carbon.identity.scim.common.listener.SCIMUserOperationListener\"\n                        orderId=\"90\" enable=\"false\"/&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.5.0-5.6.0/#oidc-scope-configxml-file","title":"<code>oidc-scope-config.xml</code> file","text":"<p>Stored in the /repository/conf/identity folder. <p>Append the values \"upn\" and \"groups\" to the comma separated list within the <code>&lt;Scope id=\"openid\"&gt;&lt;Claim&gt;</code> element.</p> <pre><code>&lt;Claim&gt;\nsub,email,email_verified,name,family_name,given_name,middle_name,nickname,preferred_username,upn,groups,profile,picture,website,gender,birthdate,zoneinfo,locale,updated_at,phone_number,phone_number_verified,address,street_address,country,formatted,postal_code,locality,region\n&lt;/Claim&gt;\n</code></pre> <p>These are MP-JWT supported claims. The MP-JWT 1.0 specification has introduced two claims; namely \"upn\" and \"groups\", which are mandatory to generate a JWT token that is supported by the MicroProfile JWT authentication framework.</p>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.5.0-5.6.0/#catalina-serverxml-file","title":"<code>catalina-server.xml</code> file","text":"<p>Stored in the /repository/conf/tomcat folder. <p>Disable the following properties by setting the relevant properties to false to avoid displaying unneccessary information.</p> <pre><code>&lt;!--Error pages --&gt;\n&lt;Valve className=\"org.apache.catalina.valves.ErrorReportValve\" showServerInfo=\"false\" showReport=\"false\"/&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.5.0-5.6.0/#claim-configxml-file","title":"<code>claim-config.xml</code> file","text":"<p>Stored in the /repository/conf/ folder. <p>Add the following claims within the <code>&lt;</code>Dialect dialectURI=\"http://wso2.org/claims\"&gt;` dialect tag.</p> <pre><code>&lt;Claim&gt;\n    &lt;ClaimURI&gt;http://wso2.org/claims/userprincipal&lt;/ClaimURI&gt;\n    &lt;DisplayName&gt;User Principal&lt;/DisplayName&gt;\n    &lt;AttributeID&gt;uid&lt;/AttributeID&gt;\n    &lt;Description&gt;User Principal&lt;/Description&gt;\n&lt;/Claim&gt;\n&lt;Claim&gt;\n    &lt;ClaimURI&gt;http://wso2.org/claims/extendedRef&lt;/ClaimURI&gt;\n    &lt;DisplayName&gt;Extended Ref&lt;/DisplayName&gt;\n    &lt;!-- Proper attribute Id in your user store must be configured for this --&gt;\n    &lt;AttributeID&gt;extendedRef&lt;/AttributeID&gt;\n    &lt;Description&gt;Extended Ref&lt;/Description&gt;\n&lt;/Claim&gt;\n&lt;Claim&gt;\n    &lt;ClaimURI&gt;http://wso2.org/claims/extendedDisplayName&lt;/ClaimURI&gt;\n    &lt;DisplayName&gt;Extended Display Name&lt;/DisplayName&gt;\n    &lt;!-- Proper attribute Id in your user store must be configured for this --&gt;\n    &lt;AttributeID&gt;extendedDisplayName&lt;/AttributeID&gt;\n    &lt;Description&gt;Extended Display Name&lt;/Description&gt;\n&lt;/Claim&gt;\n&lt;Claim&gt;\n    &lt;ClaimURI&gt;http://wso2.org/claims/costCenter&lt;/ClaimURI&gt;\n    &lt;DisplayName&gt;Cost Center&lt;/DisplayName&gt;\n    &lt;!-- Proper attribute Id in your user store must be configured for this --&gt;\n    &lt;AttributeID&gt;costCenter&lt;/AttributeID&gt;\n    &lt;Description&gt;Cost Center&lt;/Description&gt;\n&lt;/Claim&gt;\n&lt;Claim&gt;\n    &lt;ClaimURI&gt;http://wso2.org/claims/extendedExternalId&lt;/ClaimURI&gt;\n    &lt;DisplayName&gt;Extended External ID&lt;/DisplayName&gt;\n    &lt;!-- Proper attribute Id in your user store must be configured for this --&gt;\n    &lt;AttributeID&gt;extendedExternalId&lt;/AttributeID&gt;\n    &lt;Description&gt;Extended External ID&lt;/Description&gt;\n&lt;/Claim&gt;\n</code></pre> <p>Add the following claims within the <code>&lt;Dialect dialectURI=\"http://wso2.org/oidc/claim\"&gt;</code> dialect tag.</p> <pre><code>&lt;Claim&gt;\n    &lt;ClaimURI&gt;upn&lt;/ClaimURI&gt;\n    &lt;DisplayName&gt;User Principal&lt;/DisplayName&gt;\n    &lt;AttributeID&gt;uid&lt;/AttributeID&gt;\n    &lt;Description&gt;The user principal name&lt;/Description&gt;\n    &lt;DisplayOrder&gt;11&lt;/DisplayOrder&gt;\n    &lt;SupportedByDefault /&gt;\n    &lt;MappedLocalClaim&gt;http://wso2.org/claims/userprincipal&lt;/MappedLocalClaim&gt;\n&lt;/Claim&gt;\n&lt;Claim&gt;\n    &lt;ClaimURI&gt;groups&lt;/ClaimURI&gt;\n    &lt;DisplayName&gt;User Groups&lt;/DisplayName&gt;\n    &lt;AttributeID&gt;role&lt;/AttributeID&gt;\n    &lt;Description&gt;List of group names that have been assigned to the principal. This typically will require a mapping at the application container level to application deployment roles.&lt;/Description&gt;\n    &lt;DisplayOrder&gt;12&lt;/DisplayOrder&gt;\n    &lt;SupportedByDefault /&gt;\n    &lt;MappedLocalClaim&gt;http://wso2.org/claims/role&lt;/MappedLocalClaim&gt;\n&lt;/Claim&gt;\n</code></pre> <p>Add the following claims within the <code>&lt;Dialect dialectURI=\"urn:ietf:params:scim:schemas:core:2.0:User\"&gt;</code> dialect tag.</p> <pre><code>&lt;Claim&gt;\n    &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:emails&lt;/ClaimURI&gt;\n    &lt;DisplayName&gt;Emails&lt;/DisplayName&gt;\n    &lt;AttributeID&gt;mail&lt;/AttributeID&gt;\n    &lt;Description&gt;Email Addresses&lt;/Description&gt;\n    &lt;DisplayOrder&gt;5&lt;/DisplayOrder&gt;\n    &lt;SupportedByDefault /&gt;\n    &lt;RegEx&gt;^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$&lt;/RegEx&gt;\n    &lt;MappedLocalClaim&gt;http://wso2.org/claims/emailaddress&lt;/MappedLocalClaim&gt;\n&lt;/Claim&gt;\n&lt;Claim&gt;\n    &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:phoneNumbers&lt;/ClaimURI&gt;\n    &lt;DisplayName&gt;Phone Numbers&lt;/DisplayName&gt;\n    &lt;AttributeID&gt;phoneNumbers&lt;/AttributeID&gt;\n    &lt;Description&gt;Phone Numbers&lt;/Description&gt;\n    &lt;DisplayOrder&gt;5&lt;/DisplayOrder&gt;\n    &lt;SupportedByDefault/&gt;\n    &lt;RegEx&gt;^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$&lt;/RegEx&gt;\n    &lt;MappedLocalClaim&gt;http://wso2.org/claims/phoneNumbers&lt;/MappedLocalClaim&gt;\n&lt;/Claim&gt;\n&lt;Claim&gt;\n    &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:photos&lt;/ClaimURI&gt;\n    &lt;DisplayName&gt;Photo&lt;/DisplayName&gt;\n    &lt;AttributeID&gt;photos&lt;/AttributeID&gt;\n    &lt;Description&gt;Photo&lt;/Description&gt;\n    &lt;DisplayOrder&gt;5&lt;/DisplayOrder&gt;\n    &lt;SupportedByDefault /&gt;\n    &lt;MappedLocalClaim&gt;http://wso2.org/claims/photos&lt;/MappedLocalClaim&gt;\n&lt;/Claim&gt;\n&lt;Claim&gt;\n    &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:core:2.0:User:addresses&lt;/ClaimURI&gt;\n    &lt;DisplayName&gt;Address&lt;/DisplayName&gt;\n    &lt;AttributeID&gt;addresses&lt;/AttributeID&gt;\n    &lt;Description&gt;Address&lt;/Description&gt;\n    &lt;DisplayOrder&gt;5&lt;/DisplayOrder&gt;\n    &lt;SupportedByDefault /&gt;\n    &lt;MappedLocalClaim&gt;http://wso2.org/claims/addresses&lt;/MappedLocalClaim&gt;\n&lt;/Claim&gt;\n</code></pre> <p>Replace the following property values within the urn:ietf:params:scim:schemas:extension:enterprise:2.0:User:employeeNumber claim URI.</p> <pre><code>&lt;Claim&gt;\n    &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:extension:enterprise:2.0:User:employeeNumber&lt;/ClaimURI&gt;\n    &lt;DisplayName&gt;Employee Number&lt;/DisplayName&gt;\n    &lt;AttributeID&gt;extendedExternalId&lt;/AttributeID&gt;\n    &lt;Description&gt;Employee Number&lt;/Description&gt;\n    &lt;Required /&gt;\n    &lt;DisplayOrder&gt;1&lt;/DisplayOrder&gt;\n    &lt;SupportedByDefault /&gt;\n    &lt;MappedLocalClaim&gt;http://wso2.org/claims/extendedExternalId&lt;/MappedLocalClaim&gt;\n&lt;/Claim&gt;\n</code></pre> <p>Replace the following property values within the urn:ietf:params:scim:schemas:extension:enterprise:2.0:User:costCenter claim URI.</p> <pre><code>&lt;Claim&gt;\n    &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:extension:enterprise:2.0:User:costCenter&lt;/ClaimURI&gt;\n    &lt;DisplayName&gt;Cost Center&lt;/DisplayName&gt;\n    &lt;AttributeID&gt;costCenter&lt;/AttributeID&gt;\n    &lt;Description&gt;Cost Center&lt;/Description&gt;\n    &lt;Required /&gt;\n    &lt;DisplayOrder&gt;1&lt;/DisplayOrder&gt;\n    &lt;SupportedByDefault /&gt;\n    &lt;MappedLocalClaim&gt;http://wso2.org/claims/costCenter&lt;/MappedLocalClaim&gt;\n&lt;/Claim&gt;\n</code></pre> <p>Replace the following property values within the urn:ietf:params:scim:schemas:extension:enterprise:2.0:User:manager.$ref claim URI.</p> <pre><code>&lt;Claim&gt;\n    &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:extension:enterprise:2.0:User:manager.$ref&lt;/ClaimURI&gt;\n    &lt;DisplayName&gt;Manager - home&lt;/DisplayName&gt;\n    &lt;AttributeID&gt;extendedRef&lt;/AttributeID&gt;\n    &lt;Description&gt;Manager - home&lt;/Description&gt;\n    &lt;Required /&gt;\n    &lt;DisplayOrder&gt;1&lt;/DisplayOrder&gt;\n    &lt;SupportedByDefault /&gt;\n    &lt;MappedLocalClaim&gt;http://wso2.org/claims/extendedRef&lt;/MappedLocalClaim&gt;\n&lt;/Claim&gt;\n</code></pre> <p>Replace the following property values within the urn:ietf:params:scim:schemas:extension:enterprise:2.0:User:manager.displayName claim URI.</p> <pre><code>&lt;Claim&gt;\n    &lt;ClaimURI&gt;urn:ietf:params:scim:schemas:extension:enterprise:2.0:User:manager.displayName&lt;/ClaimURI&gt;\n    &lt;DisplayName&gt;Manager - Display Name&lt;/DisplayName&gt;\n    &lt;AttributeID&gt;extendedDisplayName&lt;/AttributeID&gt;\n    &lt;Description&gt;Manager - Display Name&lt;/Description&gt;\n    &lt;Required /&gt;\n    &lt;DisplayOrder&gt;1&lt;/DisplayOrder&gt;\n    &lt;SupportedByDefault /&gt;\n    &lt;MappedLocalClaim&gt;http://wso2.org/claims/extendedDisplayName&lt;/MappedLocalClaim&gt;\n&lt;/Claim&gt;\n</code></pre> <p>Add the following claims within the root tag. This new claim dialect and the claims within it are required for eiDAS.</p> <p>For more information, see eIDAS SAML Attribute Profile Support via WSO2 Identity Server.</p> <pre><code>&lt;Dialect dialectURI=\"http://eidas.europa.eu/attributes/naturalperson\"&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;http://eidas.europa.eu/attributes/naturalperson/PersonIdentifier&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Person Identifier&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;scimId&lt;/AttributeID&gt;\n        &lt;Description&gt;Person Identifier&lt;/Description&gt;\n        &lt;Required/&gt;\n        &lt;DisplayOrder&gt;1&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault/&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/userid&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;http://eidas.europa.eu/attributes/naturalperson/CurrentFamilyName&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Current Family Name&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;sn&lt;/AttributeID&gt;\n        &lt;Description&gt;Current Family Name&lt;/Description&gt;\n        &lt;Required/&gt;\n        &lt;DisplayOrder&gt;1&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault/&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/lastname&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;http://eidas.europa.eu/attributes/naturalperson/CurrentGivenName&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Current Given Name&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;givenName&lt;/AttributeID&gt;\n        &lt;Description&gt;Current Given Name&lt;/Description&gt;\n        &lt;Required/&gt;\n        &lt;DisplayOrder&gt;1&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault/&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/givenname&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;http://eidas.europa.eu/attributes/naturalperson/DateOfBirth&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Date of birth&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;dateOfBirth&lt;/AttributeID&gt;\n        &lt;Description&gt;Date of birth&lt;/Description&gt;\n        &lt;Required/&gt;\n        &lt;DisplayOrder&gt;1&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault/&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/dob&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;http://eidas.europa.eu/attributes/naturalperson/BirthName&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Birth Name&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;uid&lt;/AttributeID&gt;\n        &lt;Description&gt;Birth Name&lt;/Description&gt;\n        &lt;Required/&gt;\n        &lt;DisplayOrder&gt;1&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault/&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/username&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;http://eidas.europa.eu/attributes/naturalperson/PlaceOfBirth&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Place of Birth&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;country&lt;/AttributeID&gt;\n        &lt;Description&gt;Place of Birth&lt;/Description&gt;\n        &lt;Required/&gt;\n        &lt;DisplayOrder&gt;1&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault/&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/country&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;http://eidas.europa.eu/attributes/naturalperson/CurrentAddress&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Current Address&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;localityAddress&lt;/AttributeID&gt;\n        &lt;Description&gt;Current Address&lt;/Description&gt;\n        &lt;Required/&gt;\n        &lt;DisplayOrder&gt;1&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault/&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/addresses&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;http://eidas.europa.eu/attributes/naturalperson/Gender&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Gender&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;gender&lt;/AttributeID&gt;\n        &lt;Description&gt;Gender&lt;/Description&gt;\n        &lt;Required/&gt;\n        &lt;DisplayOrder&gt;1&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault/&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/gender&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n&lt;/Dialect&gt;\n&lt;Dialect dialectURI=\"http://eidas.europa.eu/attributes/legalperson\"&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;http://eidas.europa.eu/attributes/legalperson/LegalPersonIdentifier&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Legal Person Identifier&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;extendedExternalId&lt;/AttributeID&gt;\n        &lt;Description&gt;Legal Person Identifier&lt;/Description&gt;\n        &lt;Required/&gt;\n        &lt;DisplayOrder&gt;1&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault/&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/extendedExternalId&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;http://eidas.europa.eu/attributes/legalperson/LegalName&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Legal Person Name&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;extendedDisplayName&lt;/AttributeID&gt;\n        &lt;Description&gt;Legal Person Name&lt;/Description&gt;\n        &lt;Required/&gt;\n        &lt;DisplayOrder&gt;1&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault/&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/extendedDisplayName&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;http://eidas.europa.eu/attributes/legalperson/LegalPersonAddress&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Legal Person Address&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;localityAddress&lt;/AttributeID&gt;\n        &lt;Description&gt;Legal Person Address&lt;/Description&gt;\n        &lt;Required/&gt;\n        &lt;DisplayOrder&gt;1&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault/&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/addresses&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;http://eidas.europa.eu/attributes/legalperson/VATRegistrationNumber&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;VAT Registration Number&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;im&lt;/AttributeID&gt;\n        &lt;Description&gt;VAT Registration Number&lt;/Description&gt;\n        &lt;Required/&gt;\n        &lt;DisplayOrder&gt;1&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault/&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/im&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;http://eidas.europa.eu/attributes/legalperson/TaxReference&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Tax Reference&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;postalcode&lt;/AttributeID&gt;\n        &lt;Description&gt;Tax Reference&lt;/Description&gt;\n        &lt;Required/&gt;\n        &lt;DisplayOrder&gt;1&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault/&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/postalcode&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;http://eidas.europa.eu/attributes/legalperson/D-2012-17-EUIdentifier&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;EU Identifier&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;externalId&lt;/AttributeID&gt;\n        &lt;Description&gt;EU Identifier&lt;/Description&gt;\n        &lt;Required/&gt;\n        &lt;DisplayOrder&gt;1&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault/&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/externalid&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;http://eidas.europa.eu/attributes/legalperson/LEI&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;LEI&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;extendedRef&lt;/AttributeID&gt;\n        &lt;Description&gt;LEI&lt;/Description&gt;\n        &lt;Required/&gt;\n        &lt;DisplayOrder&gt;1&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault/&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/extendedRef&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;http://eidas.europa.eu/attributes/legalperson/EORI&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Economic Operator Registration and Identification&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;departmentNumber&lt;/AttributeID&gt;\n        &lt;Description&gt;Economic Operator Registration and Identification&lt;/Description&gt;\n        &lt;Required/&gt;\n        &lt;DisplayOrder&gt;1&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault/&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/department&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;http://eidas.europa.eu/attributes/legalperson/SEED&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;System for Exchange of Excise Data Identifier&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;nickName&lt;/AttributeID&gt;\n        &lt;Description&gt;System for Exchange of Excise Data Identifier&lt;/Description&gt;\n        &lt;Required/&gt;\n        &lt;DisplayOrder&gt;1&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault/&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/nickname&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n    &lt;Claim&gt;\n        &lt;ClaimURI&gt;http://eidas.europa.eu/attributes/legalperson/SIC&lt;/ClaimURI&gt;\n        &lt;DisplayName&gt;Standard Industrial Classification&lt;/DisplayName&gt;\n        &lt;AttributeID&gt;nickName&lt;/AttributeID&gt;\n        &lt;Description&gt;Standard Industrial Classification&lt;/Description&gt;\n        &lt;Required/&gt;\n        &lt;DisplayOrder&gt;1&lt;/DisplayOrder&gt;\n        &lt;SupportedByDefault/&gt;\n        &lt;MappedLocalClaim&gt;http://wso2.org/claims/nickname&lt;/MappedLocalClaim&gt;\n    &lt;/Claim&gt;\n&lt;/Dialect&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.6.0-5.7.0/","title":"Configuration Changes - WSO2 IS 5.6.0 to 5.7.0","text":"<p>Listed below are the configuration and behavioral changes from WSO2 IS version 5.6.0 to 5.7.0.</p> <ul> <li>Configuration changes</li> </ul>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.6.0-5.7.0/#configuration-changes","title":"Configuration changes","text":"<p>Listed below are the configuration changes from WSO2 IS version 5.5.0 to 5.6.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.6.0-5.7.0/#carbonxml-file","title":"<code>carbon.xml</code> file","text":"<p>Stored in the /repository/conf directory. <p>Change the version property value to 5.7.0.</p> <pre><code>&lt;Version&gt;5.7.0&lt;/Version&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.6.0-5.7.0/#axis2xml-file","title":"<code>axis2.xml</code> file","text":"<p>Stored in the /repository/conf/axis2 directory. <p>Change the following property values to 5.7.0.</p> <pre><code>&lt;parameter name=\"userAgent\" locked=\"true\"&gt;\n        WSO2 Identity Server-5.7.0\n&lt;/parameter&gt;\n&lt;parameter name=\"server\" locked=\"true\"&gt;\n    WSO2 Identity Server-5.7.0\n&lt;/parameter&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.6.0-5.7.0/#application-authenticationxml-file","title":"<code>application-authentication.xml</code> file","text":"<p>Stored in the /repository/conf/identity directory. <p>Under <code>&lt;Extensions&gt;</code>, do the following changes to enable adaptive authentication:</p> <ul> <li> <p>Change the value of <code>&lt;StepBasedSequenceHandler&gt;</code> from org.wso2.carbon.identity.application.authentication.framework.handler.sequence.impl.DefaultStepBasedSequenceHandler to org.wso2.carbon.identity.application.authentication.framework.handler.sequence.impl.GraphBasedSequenceHandler.</p> </li> <li> <p>Change the value of <code>&lt;StepHandler&gt;</code> from org.wso2.carbon.identity.application.authentication.framework.handler.step.impl.DefaultStepHandler to org.wso2.carbon.identity.application.authentication.framework.handler.step.impl.GraphBasedStepHandler.</p> </li> </ul> <p>Add the following configuration under <code>&lt;AuthenticatorConfigs&gt;</code>:</p> <pre><code>&lt;AuthenticatorConfig name=\"IdentifierExecutor\" enabled=\"true\"&gt;\n     &lt;Parameter name=\"ValidateUsername\"&gt;false&lt;/Parameter&gt;\n&lt;/AuthenticatorConfig&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.6.0-5.7.0/#identityxml-file","title":"<code>identity.xml</code> file","text":"<p>Stored in the /repository/conf/identity directory. <ul> <li> <p>Add the following configuration under <code>&lt;OAuth&gt;</code>:</p> <pre><code>&lt;!-- Token cleanup feature config to clean IDN_OAUTH2_ACCESS_TOKEN table--&gt;\n        &lt;TokenCleanup&gt;\n            &lt;!--If true old access token cleaning feature is enabled --&gt;\n            &lt;EnableTokenCleanup&gt;true&lt;/EnableTokenCleanup&gt;\n            &lt;!--If true  old access token retained in audit table  --&gt;\n            &lt;RetainOldAccessToken&gt;true&lt;/RetainOldAccessToken&gt;\n        &lt;/TokenCleanup&gt;\n</code></pre> <p>This configuration is required to clean the IDN_OAUTH2_ACCESS_TOKEN table.</p> </li> <li> <p>Under <code>&lt;OAuth&gt;</code>, change the value of <code>&lt;OAuth2DCREPUrl&gt;</code> from <code>${carbon.protocol}://${carbon.host}:${carbon.management.port}/api/identity/oauth2/dcr/v1.0/register to ${carbon.protocol}://${carbon.host}:${carbon.management.port}/api/identity/oauth2/dcr/v1.1/register</code>. This reflects the DCR version update.</p> </li> <li> <p>Do the following changes under <code>&lt;SupportedResponseTypes&gt;</code> to replace the deprecated TokenResponseTypeHandler class: - Change org.wso2.carbon.identity.oauth2.authz.handlers.TokenResponseTypeHandler to org.wso2.carbon.identity.oauth2.authz.handlers.AccessTokenResponseTypeHandler. - Change org.wso2.carbon.identity.oauth2.authz.handlers.TokenResponseTypeHandler to org.wso2.carbon.identity.oauth2.authz.handlers.IDTokenResponseTypeHandler. - Change org.wso2.carbon.identity.oauth2.authz.handlers.TokenResponseTypeHandler to org.wso2.carbon.identity.oauth2.authz.handlers.IDTokenTokenResponseTypeHandler. <li> <p>Under <code>&lt;SSOService&gt;</code>, add the following SAML2 artifact validity period configuration:</p> <pre><code>&lt;SAML2ArtifactValidityPeriodInMinutes&gt;4&lt;/SAML2ArtifactValidityPeriodInMinutes&gt;\n</code></pre> </li> <li> <p>Under <code>&lt;SCIM&gt;</code>, add the following configuration that allows you to get all the details of a user from SCIM endpoint if necessary:</p> <pre><code>&lt;ShowAllUserDetails&gt;false&lt;/ShowAllUserDetails&gt;\n</code></pre> </li> <li> <p>Add the following configuration that is introduced to support filtering roles when you have configured a service provider role mapping:</p> <pre><code>&lt;!--\n        This configuration is used to filter the SP configured role mappings. If the property value is,\n\n        true : If SP role mappings are configured, returns only the mapped SP roles. If SP role mappings are not\n        configured returns all the mapped local roles.\n\n        false : If SP role mappings are configured, returns mapped SP roles for the mapped roles and the local mapped\n        roles for others. If SP role mappings are not configured returns all the mapped local roles.\n\n        Default - false.\n    --&gt;\n\n    &lt;!--SPRoleManagement&gt;\n        &lt;ReturnOnlyMappedLocalRoles&gt;false&lt;/ReturnOnlyMappedLocalRoles&gt;\n    &lt;/SPRoleManagement--&gt;\n</code></pre> </li> <li> <p>Add the following configuration that allows you to customize the default user interfaces displayed at the time of just-in-time provisioning:</p> <pre><code>&lt;JITProvisioning&gt;\n    &lt;UserNameProvisioningUI&gt;/accountrecoveryendpoint/register.do&lt;/UserNameProvisioningUI&gt;\n    &lt;PasswordProvisioningUI&gt;/accountrecoveryendpoint/signup.do&lt;/PasswordProvisioningUI&gt;\n&lt;/JITProvisioning&gt;\n</code></pre> </li> <li> <p>Add the following configuration to include post authentication handlers introduced via JIT provisioning improvements:</p> <pre><code>&lt;!-- Post Authentication handlers for JIT provisioning, association and for handling subject identifier --&gt;\n&lt;EventListener type=\"org.wso2.carbon.identity.core.handler.AbstractIdentityHandler\"\n                    name=\"org.wso2.carbon.identity.application.authentication.framework.handler.request.impl.JITProvisioningPostAuthenticationHandler\"\n                    orderId=\"20\" enable=\"true\"/&gt;\n&lt;EventListener type=\"org.wso2.carbon.identity.core.handler.AbstractIdentityHandler\"\n                    name=\"org.wso2.carbon.identity.application.authentication.framework.handler.request.impl.PostAuthAssociationHandler\"\n                    orderId=\"25\" enable=\"true\"/&gt;\n&lt;EventListener type=\"org.wso2.carbon.identity.core.handler.AbstractIdentityHandler\"\n                    name=\"org.wso2.carbon.identity.application.authentication.framework.handler.request.impl.PostAuthenticatedSubjectIdentifierHandler\"\n                    orderId=\"30\" enable=\"true\"/&gt;\n</code></pre> </li> <li> <p>Do the following changes under <code>&lt;ResourceAccessControl&gt;</code>: - To reflect the changes introduced via security advisory WSO2-2018-0462, replace the following set of resources</p> <pre><code>&lt;Resource context=\"(.*)/api/identity/user/v1.0/validate-code\" secured=\"true\" http-method=\"all\"/&gt;\n&lt;Resource context=\"(.*)/api/identity/user/v1.0/resend-code\" secured=\"true\" http-method=\"all\"/&gt;\n&lt;Resource context=\"(.*)/api/identity/user/v1.0/me\" secured=\"true\" http-method=\"POST\"/&gt;\n&lt;Resource context=\"(.*)/api/identity/user/v1.0/me\" secured=\"true\" http-method=\"GET\"/&gt;\n\n&lt;Resource context=\"(.*)/api/identity/consent-mgt/v1.0/consents/purposes\" secured=\"true\" http-method=\"POST\"&gt;\n&lt;Resource context=\"(.*)/api/identity/consent-mgt/v1.0/consents/pii-categories\" secured=\"true\" http-method=\"POST\"&gt;\n&lt;Resource context=\"(.*)/api/identity/consent-mgt/v1.0/consents/purpose-categories\" secured=\"true\" http-method=\"POST\"&gt;\n\n\n&lt;Resource context=\"(.*)/scim2/Users\" secured=\"true\" http-method=\"POST\"&gt;\n&lt;Resource context=\"(.*)/scim2/Groups\" secured=\"true\" http-method=\"POST\"&gt;\n&lt;Resource context=\"/scim2/Bulk\" secured=\"true\"  http-method=\"all\"&gt;\n</code></pre> <p>with the following:</p> <pre><code>&lt;Resource context=\"(.*)/api/identity/user/v1.0/validate-code(.*)\" secured=\"true\" http-method=\"all\"&gt;\n            &lt;Permissions&gt;/permission/admin/manage/identity/identitymgt&lt;/Permissions&gt;&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/user/v1.0/resend-code(.*)\" secured=\"true\" http-method=\"all\"/&gt;\n&lt;Resource context=\"(.*)/api/identity/user/v1.0/me(.*)\" secured=\"true\" http-method=\"POST\"/&gt;\n&lt;Resource context=\"(.*)/api/identity/user/v1.0/me(.*)\" secured=\"true\" http-method=\"GET\"/&gt;\n\n\n&lt;Resource context=\"(.*)/api/identity/consent-mgt/v1.0/consents/purposes(.*)\" secured=\"true\" http-method=\"POST\"/&gt;\n&lt;Resource context=\"(.*)/api/identity/consent-mgt/v1.0/consents/pii-categories(.*)\" secured=\"true\" http-method=\"POST\"/&gt;\n&lt;Resource context=\"(.*)/api/identity/consent-mgt/v1.0/consents/purpose-categories(.*)\" secured=\"true\" http-method=\"POST\"/&gt;\n\n\n&lt;Resource context=\"(.*)/scim2/Users(.*)\" secured=\"true\" http-method=\"POST\"/&gt;\n&lt;Resource context=\"(.*)/scim2/Groups(.*)\" secured=\"true\" http-method=\"POST\"/&gt;\n&lt;Resource context=\"(.*)/scim2/Bulk(.*)\" secured=\"true\"  http-method=\"all\"/&gt;\n</code></pre> </li> <li> <p>Replace <code>&lt;Resource context=\"(.*)/api/identity/recovery/(.*)\" secured=\"true\" http-method=\"all\"/&gt;</code> with the following resource:</p> <pre><code>&lt;Resource context=\"(.*)/api/identity/recovery/(.*)\" secured=\"true\" http-method=\"all\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/identitymgt&lt;/Permissions&gt;\n&lt;/Resource&gt;\n</code></pre> <p>This introduces changes done with regard to access permission for account recovery endpoint.</p> </li> <li> <p>Add the following resource that allows using /api/identity/auth/ to retrieve data from authentication endpoint itself instead of obtaining via the URL:</p> <pre><code>&lt;Resource context=\"(.*)/api/identity/auth/(.*)\" secured=\"true\" http-method=\"all\"/&gt;\n</code></pre> </li> <li> <p>To reflect the DCR version upgrade, replace the following set of resources </p> <pre><code>&lt;Resource context=\"(.*)/api/identity/oauth2/dcr/v1.0/register(.*)\" secured=\"true\" http-method=\"POST\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/applicationmgt/create&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/oauth2/dcr/v1.0/register(.*)\" secured=\"true\" http-method=\"DELETE\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/applicationmgt/delete&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/oauth2/dcr/v1.0/register(.*)\" secured=\"true\" http-method=\"PUT\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/applicationmgt/update&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/oauth2/dcr/v1.0/register(.*)\" secured=\"true\" http-method=\"GET\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/applicationmgt/view&lt;/Permissions&gt;\n&lt;/Resource&gt;\n</code></pre> <p>with the following:</p> <pre><code>&lt;Resource context=\"(.*)/api/identity/oauth2/dcr/v1.1/register(.*)\" secured=\"true\" http-method=\"POST\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/applicationmgt/create&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/oauth2/dcr/v1.1/register(.*)\" secured=\"true\" http-method=\"DELETE\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/applicationmgt/delete&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/oauth2/dcr/v1.1/register(.*)\" secured=\"true\" http-method=\"PUT\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/applicationmgt/update&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/oauth2/dcr/v1.1/register(.*)\" secured=\"true\" http-method=\"GET\"&gt;\n    &lt;Permissions&gt;/permission/admin/manage/identity/applicationmgt/view&lt;/Permissions&gt;\n&lt;/Resource&gt;\n</code></pre> </li> <li> <p>Add the following property that was introduced to restrict federated user association done via the UserProfileAdmin admin service:</p> <pre><code>&lt;!--\nThis property restricts federated user association done through UserProfileAdmin admin service.\nWould not affect associations done through provisioning\n--&gt;\n&lt;EnableFederatedUserAssociation&gt;false&lt;/EnableFederatedUserAssociation&gt;\n</code></pre> </li> <li> <p>Under <code>&lt;TenantContextsToRewrite&gt; &lt;WebApp&gt;</code>, replace <code>&lt;Context&gt;/api/identity/oauth2/dcr/v1.0/&lt;/Context&gt;</code> with <code>&lt;Context&gt;/api/identity/oauth2/dcr/v1.1/&lt;/Context&gt;</code> to reflect the DCR version upgrade.</p> </li> <li> <p>Under <code>&lt;AdaptiveAuth&gt;&lt;EventPublisher&gt;</code>, replace <code>&lt;receiverURL&gt;http://localhost:8280/&gt;</code> with the following configuration:</p> <pre><code>&lt;ReceiverURL&gt;https://localhost:8280/&lt;/ReceiverURL&gt;\n&lt;BasicAuthentication&gt;\n        &lt;Enable&gt;true&lt;/Enable&gt;\n        &lt;Username&gt;admin&lt;/Username&gt;\n        &lt;Password&gt;admin&lt;/Password&gt;\n&lt;/BasicAuthentication&gt;\n</code></pre> <p>This introduces the default configurations for event publisher.</p> </li> <li> <p>Under <code>&lt;AdaptiveAuth&gt;</code>, add the following configurations introduced to support external analytics calls in adaptive authentication:</p> <pre><code>&lt;MaxTotalConnections&gt;20&lt;/MaxTotalConnections&gt;\n&lt;MaxTotalConnectionsPerRoute&gt;20&lt;/MaxTotalConnectionsPerRoute&gt;\n\n&lt;!--Timeouts in milliseconds--&gt;\n&lt;!--Default configs for timeouts--&gt;\n&lt;!--&lt;HTTPConnectionTimeout&gt;5000&lt;/HTTPConnectionTimeout&gt;--&gt;\n&lt;!--&lt;HTTPReadTimeout&gt;5000&lt;/HTTPReadTimeout&gt;--&gt;\n&lt;!--&lt;HTTPConnectionRequestTimeout&gt;5000&lt;/HTTPConnectionRequestTimeout&gt;--&gt;\n&lt;!--End of default configs for timeouts--&gt;\n\n&lt;!--&lt;RefreshInterval&gt;500&lt;/RefreshInterval&gt;--&gt;\n&lt;!--End of timeouts in milliseconds--&gt;\n\n&lt;!--&lt;PromptOnLongWait&gt;false&lt;/PromptOnLongWait&gt;--&gt;       \n&lt;!--Timeout in milliseconds for the waiting external calls--&gt;\n&lt;LongWaitTimeout&gt;10000&lt;/LongWaitTimeout&gt;\n</code></pre> </li>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.6.0-5.7.0/#carbonxml-file_1","title":"<code>carbon.xml</code> file","text":"<p>Stored in the /repository/conf directory. <ul> <li> <p>Add the following configuration that introduces parameters related to Carbon Crypto Service, which is a crypto framework used inside Carbon products:</p> <pre><code>&lt;!--\nConfigurations related to Carbon Crypto Service which is a crypto framework used inside Carbon products.\n--&gt;\n&lt;CryptoService&gt;\n\n&lt;Enabled&gt;true&lt;/Enabled&gt;\n\n&lt;!-- The crypto provider which is used for internal data encryption and decryption --&gt;\n&lt;InternalCryptoProviderClassName&gt;org.wso2.carbon.crypto.provider.KeyStoreBasedInternalCryptoProvider&lt;/InternalCryptoProviderClassName&gt;\n\n&lt;!--\nThe crypto provider which is used for the crypto needs which come when communicating with external parties.\ne.g. Signing, Decrypting.\n--&gt;\n&lt;ExternalCryptoProviderClassName&gt;org.wso2.carbon.core.encryption.KeyStoreBasedExternalCryptoProvider&lt;/ExternalCryptoProviderClassName&gt;\n&lt;!--\nThe list of key resolvers which will be used based on the context when handling crypto with external parties.\ne.g. Resolving the public key of an external entity.\n--&gt;\n&lt;KeyResolvers&gt;\n    &lt;KeyResolver className=\"org.wso2.carbon.crypto.defaultProvider.resolver.ContextIndependentKeyResolver\" priority=\"-1\"/&gt;\n&lt;/KeyResolvers&gt;\n\n&lt;/CryptoService&gt;\n</code></pre> </li> <li> <p>Under <code>&lt;Security&gt;</code>, add the following keystore parameters introduced to encrypting/decrypting internal data:</p> <pre><code>&lt;!--\nThe KeyStore which is used for encrypting/decrypting internal data.\nThis block is read by Carbon Crypto Service.\n--&gt;\n&lt;InternalKeyStore&gt;\n&lt;!-- Keystore file location--&gt;\n&lt;Location&gt;${carbon.home}/repository/resources/security/wso2carbon.jks&lt;/Location&gt;\n&lt;!-- Keystore type (JKS/PKCS12 etc.)--&gt;\n&lt;Type&gt;JKS&lt;/Type&gt;\n&lt;!-- Keystore password--&gt;\n&lt;Password&gt;wso2carbon&lt;/Password&gt;\n&lt;!-- Private Key alias--&gt;\n&lt;KeyAlias&gt;wso2carbon&lt;/KeyAlias&gt;\n&lt;!-- Private Key password--&gt;\n&lt;KeyPassword&gt;wso2carbon&lt;/KeyPassword&gt;\n&lt;/InternalKeyStore&gt;\n</code></pre> </li> </ul>"},{"location":"identity-server/migration-docs/what-has-changed/config-changes-5.6.0-5.7.0/#log4jproperties-file","title":"<code>log4j.properties</code> file","text":"<p>Stored in the /repository/conf directory. <p>Add the following lines that include the properties introduced to support masking sensitive information in your logs:</p> <pre><code># Log masking configuration. Please uncomment the following log4j property, if you need to mask any\n# information in your carbon logs.\n# When enabled, the logs will be matched with the  provided patterns and masked .\n# The 'path-to-masking-patterns' path should be an absolute file path to a properties file. This file should contain\n# the patterns that should be checked for masking as key value pairs. (mask-name=masking-regex-pattern)\n# If this file cannot be found, wso2-log-masking.properties file will be used as default. If the following\n# configuration is not enabled, no masking process will be applied.\n#log4j.appender.CARBON_CONSOLE.maskingPatternFile=path-to-masking-patterns\n\n\n# Log masking configuration. Please uncomment the following log4j property, if you need to mask any\n# information in your carbon logs.\n# When enabled, the logs will be matched with the  provided patterns and masked .\n# The 'path-to-masking-patterns' path should be an absolute file path to a properties file. This file should contain\n# the patterns that should be checked for masking as key value pairs. (mask-name=masking-regex-pattern)\n# If this file cannot be found, wso2-log-masking.properties file will be used as default. If the following\n# configuration is not enabled, no masking process will be applied.\n#log4j.appender.CARBON_LOGFILE.maskingPatternFile=path-to-masking-patterns\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.10.0%20to%205.11.0/","title":"What Has Changed","text":"<p>WSO2 Identity Server 5.11.0 brings a range of new features and major improvements. The following aspects have changed in 5.11.0 compared to the previous WSO2 IS versions.</p> <p>This page provides details about the behavioral changes from WSO2 Identity Server 5.10.0 to 5.11.0.</p> <p>If you are migrating from an older version of Identity Server</p> <p>To find the changes introduced in the previous versions, you can refer to the following documents:</p> <ul> <li>What Has Changed in IS 5.10.0</li> <li>What Has Changed in IS 5.9.0</li> <li>Migrating Configurations to IS 5.8.0</li> </ul>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.10.0%20to%205.11.0/#user-portal","title":"User Portal","text":"<p>This section covers the updates related to the user portal on Identity Server 5.11.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.10.0%20to%205.11.0/#renamed-user-portal-to-my-account","title":"Renamed 'User Portal' to 'My Account'","text":"<p>A new portal named \"User Portal\" was released with WSO2 Identity Server 5.10.0, which replaced the legacy Jaggery-based end-user dashboard. With WSO2 IS 5.11.0 onwards, this portal has been renamed \u201cMy Account\u201d and will be onboarded as a SaaS application.</p> <p>The following configurations changed in the application.</p> Configuration 5.10.0 value 5.11.0 value name User Portal My Account description This is the user portal application. This is my account application. client_id USER_PORTAL MY_ACCOUNT callback_url /user-portal/login /myaccount/login <p>For more information, see Configuring My Account Application.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.10.0%20to%205.11.0/#authentication","title":"Authentication","text":"<p>This section covers the updates related to authentication on Identity Server 5.11.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.10.0%20to%205.11.0/#ws-trust-authenticator-moved-to-the-connector-store","title":"WS-Trust authenticator moved to the connector store","text":"<p>WS-Trust authentication is no longer supported by default in WSO2 IS 5.11.0 and has been introduced as a connector. To use WS-Trust authentication, configure the connector.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.10.0%20to%205.11.0/#extend-expiry-time-of-commonauth-cookie","title":"Extend expiry time of commonAuth cookie","text":"<p>From WSO2 IS 5.11.0 onwards, the expiry time of the commonAuth cookie is extended with each authentication request. This is enabled by default in 5.11.0 but was disabled by default in the WSO2 IS 5.10.0 WUM-updated pack. If you do not require this feature, you can disable it by adding the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[session.timeout]\nextend_remember_me_session_timeout_on_auth=false\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.10.0%20to%205.11.0/#validation-of-issuer-in-well-known-endpoint-url","title":"Validation of issuer in .well-known endpoint URL","text":"<p>With 5.11.0, there is an extra validation to check if the issuer part of the .well-known endpoint URL is equal to the issuer attribute of the response returned by the .well-known endpoint. If you use a custom domain and proxy requests to WSO2 IS, then the issuer in the token as well as the response returned by the .well-known endpoint, will have the port number <code>443</code> in the issuer URL. However, the URL of the .well-known endpoint would not have the <code>443</code> port number. Due to this, the validation can fail. If this validation fails, the id token validation for the Console and My Account applications will also fail during the login flow.</p> <p>If this happens, do the following to manually change the following configuration via the management console after migration.</p> <ol> <li>Log in to the management console using administrator credentials.</li> <li>Click Resident under Identity Providers.</li> <li>Expand Inbound Authentication Configuration and then expand OAuth2/OpenID Connect Configuration.</li> <li>Remove the port number <code>:443</code> from the Identity Provider Entity ID URL.</li> </ol>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.10.0%20to%205.11.0/#encryption-methods","title":"Encryption methods","text":"<p>This section covers the updates related to encryption methods on Identity Server 5.11.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.10.0%20to%205.11.0/#symmetric-key-encryption-for-internal-data","title":"Symmetric key encryption for internal data","text":"<p>Up to version 5.10.0, WSO2 IS has been using asymmetric key encryption for encrypting internal data and signing purposes. With 5.11.0 onwards, symmetric key encryption is the default encryption mechanism to encrypt internal sensitive data because:</p> <ul> <li> <p>Capability to change keystores easily.     Prior to 5.10.0, since internal data was also encrypted using asymmetric key encryption, whenever the certificates expired or needed to be moved to a different keystore, all the data encrypted using the old keystore needed to be migrated.     This is no longer an overhead with symmetric key encryption for internal sensitive data. The secret key in symmetric key encryption is now encrypted using asymmetric key encryption, so only the secret key of symmetric key encryption needs to be re-encrypted whenever a keystore change is required.</p> </li> <li> <p>Symmetric key encryption for encrypting internal sensitive data is used industry-wide</p> </li> </ul> <p>For more information about new configurations, see Configurations Related to Symmetric Key Encryption.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.10.0%20to%205.11.0/#symmetric-key-encryption-algorithm","title":"Symmetric key encryption algorithm","text":"<p>WSO2 IS 5.11.0 uses \u2018AES/GCM/NoPadding\u2019 as the encryption algorithm. GCM is a stream cipher. Therefore, there is a performance advantage to using it due to the parallel encryption of each block.</p> <ul> <li>There is no need to use a padding mechanism in GCM mode.</li> <li>In GCM mode, the IV (initialization vector) should be a unique value for each encryption request.</li> <li>Along with each encrypted value, the relevant IV related to that should be tracked to do the decryption.</li> <li>AES-128 is supported as the key size.</li> </ul> <p>For more information, see Using Symmetric Key Encryption and An Overview of Symmetric Encryption.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.10.0%20to%205.11.0/#oauthoidc","title":"OAuth/OIDC","text":"<p>This section covers the updates related to OAuth and OIDC configurations on Identity Server 5.11.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.10.0%20to%205.11.0/#oauth-20-token-binding-validation","title":"OAuth 2.0 token binding validation","text":"<p>the token binding validation is a feature that was introduced with WSO2 IS 5.10.0. Initially, if <code>tokenBindingType</code> is provided when creating the OpenID Connect service provider, the token binding validation is enabled by default. With the WSO2 IS WUM-updated pack, you can disable it by unticking the Validate token bindings property. However, if this property is unavailable for the existing service providers, the token binding will still be enabled by default.</p> <p>From 5.11.0 onwards, this behavior has been changed. The property is available for all new service providers. For the existing service providers that do not have this property, token binding validation is disabled. To maintain backward compatibility, the property will be enabled during migration for those existing service providers with the <code>tokenBindingType</code> as cookie.</p> <p>Hence, with this change, after 5.11.0, there will be no service providers without the Validate token bindings property.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.10.0%20to%205.11.0/#managing-oidc-consent-flow","title":"Managing OIDC consent flow","text":"<p>With WSO2 IS 5.10.0, two new properties shown below were introduced to the <code>&lt;IS_HOME&gt;/repository/conf/identity/identity.xml</code> file within the <code>OpenIDConnect</code> tag to manage consent during OpenID Connect login and logout flows.</p> <ul> <li><code>SkipLoginConsent</code>:  Skip the OIDC login consent</li> <li><code>SkipLogoutConsent</code>: Skip the OIDC logout consent</li> </ul> <p>With 5.11.0, these two properties are added to the Application Management Rest API so they can be viewed and modified. The <code>skipConsent</code> attribute has been removed and the two properties <code>skipLoginConsent</code> , <code>skipLogoutConsent</code> have been added in the AdvancedApplicationConfiguration model of Application Management Rest API.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.10.0%20to%205.11.0/#disabled-appending-params-to-oauth2oidc-error-responses","title":"Disabled appending params to OAuth2/OIDC error responses","text":"<p>Appending additional parameters to the OAuth2/OIDC error response has been disabled by default. As a result, the parameters 'sp' and 'tenant_domain', which were set to the callback URL in error responses in the previous WSO2 IS versions, will also not be available. If any configured error param needs to be sent back to the callback URL in an error response, add the following config to the <code>deployment.toml</code> file.</p> <pre><code>[oauth]\nallow_additional_params_from_error_url = true\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.10.0%20to%205.11.0/#disabled-device-authorization-grant","title":"Disabled device authorization grant","text":"<p>The device authorization grant was introduced with WSO2 IS 5.10.0. It has been disabled by default in the 5.11.0 version. However, if you previously enabled it in your setup, you can enable it for backward compatibility. Add the following configuration to the <code>deployment.toml</code> file to enable the grant and revert to the old behavior.</p> <p>Warning</p> <p>Note that this feature is not production-ready and is ideally not recommended for use.</p> <pre><code>[oauth.response_type.device]\nenable=true\n[oauth.grant_type.device_code]\nenable=true\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.10.0%20to%205.11.0/#deprecating-oauth-10-and-identityconnectdcr","title":"Deprecating OAuth 1.0 and identity/connect/dcr","text":"<p>OAuth 1.0 and <code>identity/connect/dcr</code> APIs are deprecated in WSO2 IS 5.11.0. If you wish to revert to the previous behavior, add the following property to the <code>&lt;IS_HOME&gt;/repository/conf/deployment.toml</code> file. </p> <p>To enable OAuth 1.0:</p> <pre><code>[[legacy_feature]]\nid = \"oauth\"\nversion = \"1.0\"\nenable = true\n</code></pre> <p>To enable identity/connect/dcr:</p> <pre><code>[[legacy_feature]]\nid = \"identity/connect/dcr\"\nenable = true\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.10.0%20to%205.11.0/#saml","title":"SAML","text":"<p>This section covers the updates related to SAML configurations on Identity Server 5.11.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.10.0%20to%205.11.0/#upgrade-from-opensaml2-to-opensaml3","title":"Upgrade from OpenSAML2 to OpenSAML3","text":"<p>With 5.11.0, WSO2 IS has upgraded to OpenSAML 3. Follow the instructions below to ensure this upgrade does not cause any issues.</p> <ul> <li> <p>If you have done any customizations by extending the following classes, make sure that you make changes to it so that it adheres to OpenSAML 3 standards.</p> Classes Repo Names LogoutRequestBuilder identity-carbon-auth-saml2 SAMLAttributeQueryProcessor identity-inbound-auth-saml SAMLAuthzDecisionProcessor identity-inbound-auth-saml SAMLIDRequestProcessor identity-inbound-auth-saml SAMLSubjectQueryProcessor identity-inbound-auth-saml DefaultIDPMetadataBuilder identity-metada-saml2 SAMLSignatureValidatorImplementation tomcat-extension-samlsso </li> <li> <p>If you have written a custom code using the OpenSAML 2 plugin, add the openSAML2 plugin to the <code>&lt;IS-HOME&gt;/repository/components/dropins/</code> directory before starting the server.</p> </li> </ul>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.10.0%20to%205.11.0/#configure-the-certificate-used-to-encrypt-saml-assertions","title":"Configure the certificate used to encrypt SAML assertions","text":"<p>In earlier versions, the certificate alias defined in SAML configuration was used to encrypt the SAML assertion. From WSO2 IS 5.11.0 onwards, an application certificate (if present) is used for this task. To revert to the old behavior, add the following property to the <code>deployment.toml</code> file and set it to false.</p> <pre><code>[saml.metadata]\nassertion_encrypt_with_app_cert= false\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.10.0%20to%205.11.0/#saml-service-provider-certificate-expiry-validation","title":"SAML service provider certificate expiry validation","text":"<p>In earlier versions, service provider certificate expiry validation was not enabled by default. From 5.11.0 onwards, this validation is enabled by default. To revert to the old behavior, add the following property to the <code>deployment.toml</code> file to disable the validation.</p> <pre><code>[saml]\nenable_saml_sp_certificate_expiry_validation= false\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.10.0%20to%205.11.0/#tokens","title":"Tokens","text":"<p>This section covers the updates related to token configurations on Identity Server 5.11.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.10.0%20to%205.11.0/#jwt-validation-at-introspection","title":"JWT validation at introspection","text":"<p>JWT validation at introspection is enabled by default in WSO2 IS 5.11.0. The server identifies a JWT token at the introspection endpoint by attempting a JWT token parsing. If identified, introspection is performed by treating the token as a JWT access token.</p> <p>Note that enabling this feature will validate the token using the available JWT token validator. For instance, the default pack will use the <code>Default JWT token validator</code>. So any valid and parsable JWT token should be able to be successfully validated against the available JWT token validator in the system. </p> <p>However, the existing flow can break if the server issues custom JWT tokens that fail validation with the available JWT token validator. In a migrated setup, this condition can fail in scenarios such as:</p> <ul> <li> <p>There are custom token issuers that issue valid and parsable JWT tokens which fail the default JWT token validator shipped with the pack. e.g., a custom token not having the <code>jti</code> claim.</p> </li> <li> <p>Both a custom JWT token validator and the default JWT token validator co-exist in the system. There also exists an invalid custom token that is successfully validated with the default validator but fails to be validated with the custom validator. The token may still pass the introspection validation.</p> </li> </ul> <p>Therefore, verifying that the JWT token validator can avoid the scenarios mentioned above is important. If not, it needs to be handled by deploying a custom JWT token validator to avoid the abovementioned issues.</p> <p>To revert to the previous behavior and disable this feature, add the following configuration to the <code>&lt;IS_HOME&gt;/repository/conf/deployment.toml</code> file.</p> <pre><code>[oauth]\nenable_jwt_token_validation_during_introspection=false\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.10.0%20to%205.11.0/#revoke-access-tokens-on-logoutsession-expiry","title":"Revoke access tokens on logout/session expiry","text":"<p>Two types of access token binding are supported with WSO2 IS; Cookie Based and SSO Session Based. If you have enabled one of these binding types for a service provider when configuring OAuth/OIDC inbound authentication for an application with WSO2 IS 5.11.0, you can also enable revoking access tokens when the access token binding expires.</p> <p>WSO2 IS 5.11.0 supports the functionality to revoke access tokens issued for the application once the IDP session terminates. When the user logs out of the application, the access tokens of the token binding reference issued for the application get revoked. This functionality can be enabled when configuring the service provider's OAuth/OIDC inbound authentication.</p> <p></p> <p>WSO2 IS 5.11.0 also supports revoking the issued tokens for a session that has expired due to a session idle timeout when a user tries to use a single sign-on, log in again, or log out after a session has expired.</p> <p>For both use cases mentioned above, token revoking is enabled by default in 5.11.0. If you wish to disable this, add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[identity_mgt.events.schemes.TokenBindingExpiryEventHandler.properties]\nenable = false\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.10.0%20to%205.11.0/#user-management","title":"User Management","text":"<p>This section covers the updates related to user management on Identity Server 5.11.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.10.0%20to%205.11.0/#group-and-role-separation","title":"Group and role separation","text":"<p>In versions up to WSO2 Identity Server 5.10.0, groups had no separate entity. Both groups and roles were considered as roles in the system, and roles could be managed via the WSO2 IS management console or the SCIM groups endpoint.</p> <p>This has been redesigned from WSO2 Identity Server 5.11.0 onwards, and groups and roles are considered separate entities in the system, as described below. They can be managed using the new console or via SCIM APIs.</p> <ul> <li>User: An identity of a person stored in the IAM system.</li> <li>Group: A representation of a set of users in the user store.</li> <li>Role: Roles within the IAM solution that bind with permissions defined for resources within the IAM solution. It can be mapped to old hybrid roles.</li> </ul> <p>The relationship between roles, groups, and users is as follows:</p> <ul> <li>A role can be assigned to multiple groups</li> <li>A group can have multiple roles</li> <li>A role can be assigned to multiple users</li> <li>A user can have multiple roles</li> <li>A group can be assigned to multiple users</li> <li>A user can have multiple groups</li> </ul> <p></p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.10.0%20to%205.11.0/#account-management","title":"Account Management","text":"<p>This section covers the updates related to account management on Identity Server 5.11.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.10.0%20to%205.11.0/#skip-challenge-question-recovery-option","title":"Skip challenge question recovery option","text":"<p>With WSO2 IS 5.11.0, the challenge question recovery option is skipped by default if the user has not provided the challenge question answers set. To revert to the old behavior, you can disable this configuration by adding the following property to the <code>deployment.toml</code> file.</p> <pre><code>[identity_mgt.password_reset_challenge_questions]\nskip_on_insufficient_answers = false\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.10.0%20to%205.11.0/#host-account-recovery-endpoint-on-a-different-server","title":"Host account recovery endpoint on a different server","text":"<p>With WSO2 IS 5.10.0, <code>accountrecoveryendpoint.war</code> can be configured to be hosted on WSO2 Identity Server or a separate server. When migrating to 5.11.0, if you host the <code>accountrecoveryendpoint.war</code> on a different server, the <code>identity.server.service.contextURL</code> configuration in the <code>&lt;WEBAPP_HOME&gt;/accountrecoveryendpoint/WEB-INF/classes/RecoveryEndpointConfig.properties</code> file must refer to only the server URL excluding the <code>/services</code> part as shown below. </p> <p>```tab=\"Example\" identity.server.service.contextURL=https://localhost:9443/ <pre><code>## Workflow management\nThis section covers the updates related to workflow management on Identity Server 5.11.0.\n\n### Configure approval step for workflows\nWhen creating roles through the management console in WSO2 IS-5.11.0 onwards, the domain must be specified as **Internal**. Else, it will be created as a group.\n\n![workflow-roles](https://is.docs.wso2.com/en/5.11.0/assets/img/setup/workflow-roles.png)\n\nWhen adding workflows, groups will not be listed as roles under the approval step. Hence, to select a 'role' for a particular approval step in a workflow, create that role with the **Internal** domain via the management console.  \n\n## Logging\nThis section covers the updates related to logging configurations on Identity Server 5.11.0.\n\n### Archived log file names\nIn versions up to WSO2 Identity Server 5.10.0, archived log file names only include the date.\n\n``` java tab=\"Example\"\nwso2carbon-10-12-2020.log\n</code></pre></p> <p>However, from WSO2 Identity Server 5.11.0 onwards, an integer <code>i</code> has been added to the file name to represent the number of rollovers. This avoids target file overwriting on every rollover.</p> <p>``` java tab=\"Example\" wso2carbon-10-12-2020.1.log <pre><code>### Access log pattern\n\nIn versions up to WSO2 Identity Server 5.10.0, access logs are printed, as seen below.\n\n``` java tab=\"Example\"\n127.0.0.1 - - [26/Apr/2020:22:35:52 +0530] GET /carbon/admin/images/favicon.ico HTTP/1.1 200 17542 https://is.wso2.com:9443/carbon/admin/login.jsp Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.122 Safari/537.36 0.001\n</code></pre></p> <p>In the example given above, the user agent is <code>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.122 Safari/537.36</code> and the referer is <code>https://is.wso2.com:9443/carbon/admin/login.jsp</code>. As you can see, the user agent has white spaces in between, which prevents access log analyzer tools from processing the log lines properly.</p> <p>As a solution, the user agent and referer will be printed within double quotes from WSO2 Identity Server 5.11.0 onwards.</p> <p>``` java tab=\"Example\" 127.0.0.1 - - [21/Oct/2020:11:46:54 +0530] GET /favicon.ico HTTP/1.1 401 - \"https://localhost:9443/oauth2/authorize?sessionDataKey=d7ccf253-4abd-4a33-a79b-d7a71aa631d0\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36\" 0.001 <pre><code>## New email templates\nFrom WSO2 Identity Server 5.11.0 onwards, five new email templates have been added.\n\n- TenantRegistrationConfirmation\n- LiteUserEmailConfirmation\n- ResendLiteUserEmailConfirmation\n- ResendVerifyEmailOnUpdate\n- SelfSignUpSuccess\n\nApart from these new email templates, the Email Content Type was changed to `text/html` for the **Totp** email template.\n\n## User store managers\nNew user store managers with inbuilt unique ID support were introduced in WSO2 5.10.0 and named with the `UniqueID` prefix. User store managers that do not have `UniqueID` as part of the user store manager name are only available for backward compatibility purposes and can only be used if you are migrating from a previous version of WSO2 Identity Server.\nIf you are using any such user store managers, add the following configuration to the `&lt;IS_HOME&gt;/repository/conf/deployment.toml` file to support using the user store in the management console or console application.\n\nNote that both existing user stores, as well as new user stores must be configured as shown below.\n\n- Format\n\n    ```\n    [user_store_mgt]\n    allowed_user_stores=[&lt;existing userstores..&gt;,\"&lt;new userstore&gt;\"]\n    ```\n\n- Sample\n\n    ```\n    [user_store_mgt]\n    allowed_user_stores=[\"org.wso2.carbon.user.core.jdbc.UniqueIDJDBCUserStoreManager\", \"org.wso2.carbon.user.core.ldap.UniqueIDActiveDirectoryUserStoreManager\",\"org.wso2.carbon.user.core.ldap.UniqueIDReadOnlyLDAPUserStoreManager\",\"org.wso2.carbon.user.core.ldap.UniqueIDReadWriteLDAPUserStoreManager\",\"org.wso2.carbon.user.core.jdbc.JDBCUserStoreManager\"]\n    ```\n\n## System Configs\nThis section covers the updates related to system configurations on Identity Server 5.11.0.\n\n### Configuring CORS\nComplete the following steps for the CORS migration.\n\n1. Remove any CORS configurations defined in the `&lt;IS_HOME&gt;/repository/resources/conf/tomcat/web.xml` file.\nTo do this, remove the whole tag under the filter class named `com.thetransactioncompany.cors.CORSFilter`.\n\n2. In order to complete the CORS migration, any CORS configurations defined at the `web.xml` file should be reconfigured in the `deployment.toml` file. The following table shows how the old configurations in the `web.xml` file are mapped to the new ones in the `deployment.toml` file.\n\n    | Old (xml) configuration | New (toml) configuration |\n    |-|-|\n    | cors.allowGenericHttpRequests | allow_generic_http_requests |\n    | cors.allowOrigin {\"*\"} | allow_any_origin |\n    | cors.allowOrigin | allowed_origins |\n    | cors.allowSubdomains | allow_subdomains |\n    | cors.supportedMethods | supported_methods |\n    | cors.supportedHeaders {\"*\"} | support_any_header |\n    | cors.supportedHeaders | supported_headers |\n    | cors.exposedHeaders | exposed_headers |\n    | cors.supportsCredentials | supports_credentials |\n    | cors.maxAge | max_age |\n    | cors.tagRequests | tag_requests |\n\n    A sample CORS toml configuration is shown below.\n\n    ```toml\n    [cors]\n    allow_generic_http_requests = true\n\n    allowed_origins = [\n        \"http://wso2.is\"\n    ]\n    allow_subdomains = false\n    supported_methods = [\n        \"GET\",\n        \"POST\",\n        \"HEAD\",\n        \"OPTIONS\"\n    ]\n    support_any_header = true\n    supported_headers = []\n    exposed_headers = []\n    supports_credentials = true\n    max_age = 3600\n    tag_requests = false\n    ```\n\n### Configurable system apps\nIn WSO2 5.11.0, the **My Account** and **Console** applications are `readonly` apps by default. To make the callback URLs for these apps configurable, add the following configuration to the `deployment.toml` file. \n\n```toml\n[system_applications]\nread_only_apps = []\n</code></pre></p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.10.0%20to%205.11.0/#deprecating-webcontextroot-configuration","title":"Deprecating WebContextRoot configuration","text":"<p>The <code>WebContextRoot</code> configuration was included in the <code>&lt;IS_HOME&gt;/repository/conf/carbon.xml</code> file, and it was the configuration used to build the URLs within the WSO2 IS the product. However, it was observed that this has not been consistent in all places across the product and therefore, the usage of this config has been minimal.</p> <p>From WSO2 Identity Server 5.11.0 onwards, we have deprecated the <code>WebContextRoot</code> configuration. Alternatively, you can use the <code>ProxyContextPath</code> configuration by adding it to the <code>&lt;IS_HOME&gt;/repository/conf/deployment.toml</code> file, as shown below.</p> <pre><code>[server]\nproxy_context_path=\"abc\"\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/","title":"What Has Changed","text":"<p>WSO2 Identity Server 6.0.0 brings a range of new features and major improvements. The following aspects have changed in 6.0.0 compared to the previous WSO2 IS versions.</p> <p>This page provides details about the behavioral changes from WSO2 Identity Server 5.11.0 to 6.0.0.</p> <p>If you are migrating from an older version of Identity Server</p> <p>To find the changes introduced in the previous versions, you can refer to the following documents  - What Has Changed in IS 5.11.0  - What Has Changed in IS 5.10.0  - What Has Changed in IS 5.9.0  - Migrating Configurations to IS 5.8.0 section in the Upgrading From an Older Version of WSO2 IS document</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#webapp","title":"Webapp","text":"<p>This section covers the updates related to Console application and the MyAccount application on Identity Server 6.0.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#console-app","title":"Console App","text":"<p>Identity Server 5.11.0 had two ways of adding the certification for an application. The two methods used are as follows: - Upload the certificate through the UI - Add the certificate to the keystore and select the certificate through the UI.</p> <p>Having two methods for the same process creates redundancy, therefore in 6.0.0., the second option is removed by default. If you need to enable the signature validation certificate alias option in the UI, add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[console.applications.ui]\ncertificate_alias_enabled = true\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#common-changes","title":"Common Changes","text":"<ul> <li> <p>The default token binding type of both the Console and MyAccount is changed from <code>SSO-based binding</code> to <code>cookie-based binding</code>. Read more on Access Token Binding Type.</p> </li> <li> <p>With IS 6.0.0, the <code>Callback URL</code> and <code>Post-Logout Redirect URL</code> of the Console and MyAccount are now tenant qualified by default. Hence, after migrating to IS 6.0.0, the Callback URLs of both the MyAccount and Console applications should be updated as follows:</p> <ul> <li> <p>Console     <pre><code>regexp=(https://&lt;hostname&gt;/console|https://&lt;hostname&gt;/t/(.*)/console)\n</code></pre></p> </li> <li> <p>MyAccount     <pre><code>regexp=(https://&lt;hostname&gt;/myaccount|https://&lt;hostname&gt;/t/(.*)/myaccount)\n</code></pre></p> </li> </ul> </li> </ul> <p>This change will be propagated to the migrated IS 6.0.0 via the migration client according to the following configuration in the migration-config.yaml.     <pre><code>- name: \"SystemAppRedirectURLMigrator\"\norder: 15\nparameters:\nconsoleRedirectUrl: \"regexp=(https://localhost:9443/console|https://localhost:9443/t/(.*)/console)\"\nmyaccountRedirectUrl: \"regexp=(https://localhost:9443/myaccount|https://localhost:9443/t/(.*)/myaccount)\"\n</code></pre>   Before running the migration, make sure to update the URLs in the regular expressions with the server domain or hostname, if they are different from the default values.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#user-management","title":"User Management","text":"<p>This section contains the changes of the User Management functionalities of IS 6.0.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#admin-forced-password-reset","title":"Admin Forced Password Reset","text":"<p>Identity Server 6.0.0, comes with a new configuration to specify the password reset code validity period for the admin initiated password reset flow.</p> <p>In earlier versions of the Identity Server, a single configuration was used to govern the code validity period of all password reset flows. The configuration used in the earlier versions of IS was the <code>ExpiryTime</code> in the <code>identity.xml</code> file. This property not only affects the admin initiated password reset flow but also some other password reset flows.</p> <p>Updating the <code>ExpiryTime</code> of the <code>identity.xml</code> file does not affect admin initiated password reset flow in IS 6.0.0. This is because usually the code of admin initiated password reset flow is expected to have a longer validity period than the other flows. Therefore  If you need to update the code validity period of this add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[identity_mgt.password_reset_by_admin]\ncode_validity_period = &lt;time&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#authentication","title":"Authentication","text":"<p>This section contains the updates done to the Authentication features of IS 6.0.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#otp-authenticator","title":"OTP Authenticator","text":"<p>Some significant changes have been made to the below mentioned OTP authenticators. Please follow the instructions given below to incorporate your custom OTP requirements and changes to Identity Server 6.0.0.</p> Email OTP Authenticator <p>The following changes have been made to the Email OTP authenticator.</p> <ul> <li> <p>It\u2019s no longer required to add the Email OTP authenticator into the <code>dropins</code> folder as the authenticator has been moved into the <code>plugins</code> directory by default in IS 6.0.0.  </p> </li> <li> <p>The artifact ID of the authenticator has been updated.</p> </li> <li> <p>The <code>emailotpauthethentication</code> endpoint, which was packed with the product is now an integral part of the authentication portal. Following are the steps to integrate their changes to Identity Server 6.0.0 for users with customized email TOTP pages.</p> <ol> <li> <p>Merge the customizations to the authentication portal app.The pages related to Email OTP available in authentication portal are included in the table below.      Page name in IS 6.0.0 Page name in earlier version Page description <code>emailAddressCapture.jsp</code> <code>emailAddress.jsp</code> Email OTP email capture page <code>emailOtp.jsp</code> <code>emailotp.jsp</code> Email OTP login page <code>emailOtpError.jsp</code> <code>emailotpError.jsp</code> Email OTP error page </p> </li> <li> <p>Deploy the existing customized email OTP web app to the server and add the following configurations to the <code>deployment.toml</code> file to direct the email OTP flows to the customized pages.     <pre><code>[authentication.authenticator.email_otp.parameters]\nEMAILOTPAuthenticationEndpointURL = \"https://localhost:9443/emailotpauthenticationendpoint/emailotp.jsp\"\nEmailOTPAuthenticationEndpointErrorPage = \"https://localhost:9443/emailotpauthenticationendpoint/emailotpError.jsp\"\nEmailAddressRequestPage = \"https://localhost:9443/emailotpauthenticationendpoint/emailAddress.jsp\"\n</code></pre></p> </li> </ol> </li> </ul> TOTP Authenticator <p>The following changes have been made to the TOTP authenticator.</p> <ul> <li> <p>It\u2019s no longer required to add the TOTP authenticator into the <code>dropins</code> folder as the authenticator has been moved into the <code>plugins</code> directory by default in IS 6.0.0.</p> </li> <li> <p>The <code>totpauthethentication</code> endpoint, which was packed with the product is now an integral part of the authentication portal. Following are the steps to integrate their changes to Identity Server 6.0.0 for users with customized TOTP pages.</p> <ol> <li> <p>Merge the customizations to the authentication portal app.The pages related to TOTP available in authentication portal are:</p> <ul> <li>enableTOTP.jsp (TOTP enroll page)</li> <li>totp.jsp (TOTP login page)</li> <li>totpError.jsp (TOTP error page)</li> </ul> </li> <li> <p>Deploy the existing customized TOTP web app to the server and add the following configurations to the <code>deployment.toml</code> file to direct the TOTP flows to the customized pages.</p> <pre><code>[authentication.authenticator.totp.parameters]\nTOTPAuthenticationEndpointURL=\"totpauthenticationendpoint/totp.jsp\"\nTOTPAuthenticationEndpointErrorPage=\"totpauthenticationendpoint/totpError.jsp\"\nTOTPAuthenticationEndpointEnableTOTPPage=\"totpauthenticationendpoint/enableTOTP.jsp\"\n</code></pre> </li> <li> <p>Unlike the earlier versions of the Identity server, the TOTP authenticator of IS 6.0.0 does not offer sending the TOTP via email as a default option. Add the following configuration to the <code>deployment.toml</code> file to enable sending the TOTP through Email.</p> <pre><code>[authentication.authenticator.totp.parameters]\nAllowSendingVerificationCodeByEmail = true\n</code></pre> </li> </ol> </li> </ul> <p>Note</p> <p>The i18n keys of both OTP authenticators have been moved to the i18n property file of the authentication portal.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#authenticator-display-name","title":"Authenticator Display Name","text":"<p>From IS 6.0.0 onward the display names of some of the local authenticators and handlers were renamed. The following table maps the previous authenticator display names to the IS 6.0.0 display names.</p> Authenticator Previous display name Current display name <code>IdentifierExecutor</code>identifier-firstIdentifier First <code>JWTBasicAuthenticator</code>jwt-basicJWT Basic <code>FIDOAuthenticator</code>fidoSecurity Key/Biometrics <code>BasicAuthenticator</code>basicUsername &amp; Password <code>SessionExecutor</code>active-sessions-limit-handlerActive Sessions Limit"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#adaptive-authentication-function-signature","title":"Adaptive Authentication Function Signature","text":"<p>On WSO2 IS, <code>getUniqueUserWithClaimValues</code>  is an adaptive authentication Javascript utility function that is used to obtain a user definition along with claim values. The utility function will search on the underlying user stores and return a unique user with the claim values.</p> <p>In earlier versions of the Identity Server, the parameters required by this function were as follows:</p> Parameter Description <code>claimMap</code> A map contains the claim URI and claim value <code>tenantDomain</code> The tenant domain of the user <code>profile</code> Profile of the user. (Optional, the default value is 'default') <p>The function in earlier versions of IS: <code>getUniqueUserWithClaimValues (claimMap, tenantDomain, profile)</code></p> <p>With Identity Server 6.0.0, the parameters of this method signature have been changed.The updated parameters used by this function are as follows:</p> Parameter Description <code>claimMap</code> A map contains the claim URI and claim value <code>contect</code> <code>JsAuthenticationContext</code> object available in the authentication flow <code>profile</code> Profile of the user. (Optional, the default value is 'default') <p>The function in IS 6.0.0: <code>getUniqueUserWithClaimValues (claimMap, context, profile)</code></p> <p>Example usage of the updated function:</p> <pre><code>var claimMap = {};\nclaimMap[MAPPED_FEDERATED_USER_NAME_CLAIM] = federatedUserName;\nclaimMap[MAPPED_FEDERATED_IDP_NAME_CLAIM] = idpName;\nvar mappedUsername = getUniqueUserWithClaimValues(claimMap, context);\n</code></pre> <p>Make sure to update the usages of this function, if any, after the migration process.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#application-management","title":"Application management","text":"<p>This section covers the updates related to application configurations on Identity Server 6.0.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#application-roles-in-application-management-flows","title":"Application Roles in Application Management Flows","text":"<p>With WSO2 IS 6.0.0, the following functions have been removed by default: - The creation of application roles - The validation of application roles in application management flows.</p> <p>With these changes, - Application roles will not be created nor assigned to the application owner during the application creation. - Application role validation will be skipped for users who initiate application management flows.</p> <p>The above said changes apply to both new and existing applications of WSO2 IS.</p> <p>If you require the former functionality, add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[application_mgt]\nenable_role_validation = true\n</code></pre> <p>Important</p> <p>When setting this configuration value to true, make sure that application roles have been created for all the applications and assigned to the relevant application owners. If not, create and assign the roles.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#application-requested-claims","title":"Application Requested Claims","text":"<p>During federated login flows in IS 6.0.0, if requested claims are not configured for an application, none of the user claims sent from the external IDP will be sent to the application through the ID token.</p> <p>For the same scenario in IS versions 5.11.0 and below, all the claims sent from the external IDP will be sent to the application regardless of the requested claim configuration. If the previous behavior is required in IS 6.0.0, add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[authentication]\nallow_sp_requested_fed_claims_only =false\n\n[oauth.oidc.claims]\nenable_oidc_dialect=false\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#oidc-protocol","title":"OIDC Protocol","text":"<p>According to the OIDC specification, the OIDC claim <code>locality</code> should be used to store the city of an address. In the earlier versions of the Identity Server, the <code>locality</code> claim was mapped to the local claim <code>http://wso2.org/claims/locality</code>, which is used to store a localization code used mainly in email templates.</p> <p>To maintain compliance with the OIDC specification, the local claim <code>http://wso2.org/claims/locality</code> will be used to store the city of an address with Identity Server 6.0.0 and upwards. The localization code information will be stored in the local claim <code>http://wso2.org/claims/local</code>.</p> <p>To revert to the previous claim usage system, add the following configuration to the deployment.toml file.</p> <pre><code>[claims]\nuse_legacy_localization_claim = true\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#oidc-claim-mapping","title":"OIDC Claim Mapping","text":"<p>In Identity Server 6.0.0, the claim dialect of the website claim has been changed from <code>http://wso2.org/claims/url</code> to <code>http://wso2.org/claims/websiteurl</code>. This claim mapping migration will be done automatically when executing the migration client.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#oidc-backchannel-logout-token","title":"OIDC Backchannel Logout Token","text":"<p>To maintain compliance with the OIDC specification for Backchannel logout, the logout token attributes have been updated. </p> <p>In Identity Server 5.11.0, a logout token generated during OIDC Backchannel logout would have looked like this.</p> <pre><code>{\n\"iss\": \"https://server.example.com\",\n\"sub\": \"248289761001\",\n\"aud\": \"s6BhdRkqt3\",\n\"iat\": 1471566154,\n\"jti\": \"bWJq\",\n\"sid\": \"08a5019c-17e1-4977-8f42-65a12843ea02\",\n\"event\": {}\n} </code></pre> <p>In Identity Server 6.0.0, the event attribute has been renamed to events and default value has been added to the events list. Hence, a logout token generated in IS 6.0.0 would be as follows.</p> <pre><code>{\n\"iss\": \"https://server.example.com\",\n\"sub\": \"248289761001\",\n\"aud\": \"s6BhdRkqt3\",\n\"iat\": 1471566154,\n\"jti\": \"bWJq\",\n\"sid\": \"08a5019c-17e1-4977-8f42-65a12843ea02\",\n\"events\": {\n\"http://schemas.openid.net/event/backchannel-logout\": {}\n}\n}\n</code></pre> <p>Make sure to update all the client applications that use OIDC Backchannel logout to work with the new format of the logout token.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#openid-scope","title":"OpenID Scope","text":"<p>From Identity Server 6.0.0 onwards, using the openid scope in OpenID Connect flows will not return any user claims. This change will only affect new tenants and will not have an impact on the existing tenants. If user claims are required, the recommended approach is to define a custom OIDC scope with required claims and use that scope in the OIDC flows.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#oidc-consent-updates","title":"OIDC Consent Updates","text":"<p>Following are the changes made to the behavior of the Consent prompt page in the login flow of IS 6.0.0:</p> <p>The OIDC scopes requested by a client application was displayed under the permissions section of the user consent page. These requested OIDC scopes are no longer mentioned under the permissions section of the user consent page. Only the relevant claims will be displayed.</p> <p>Prompting consent for the Subject Claim URI will be done only if it has also been configured as a Requested Claim. This is enabled by default. The previous behavior of the consent page did not prompt for consent for the Subject Claim URI at all, regardless of whether it had been configured as a Requested Claim or not. If the previous behavior is required, add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[authentication.consent.subject]\nprompt=false\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#userstore-management","title":"Userstore management","text":"<p>This sections contains the details of the updates related to User Management section in IS 6.0.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#configuring-custom-userstore-managers","title":"Configuring Custom Userstore Managers","text":"<p>In earlier versions of WSO2 IS, custom userstore managers were enabled by adding the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[user_store_mgt]\nallowed_user_stores=[\u201c&lt;existing userstore managers...&gt;\u201d,\"&lt;new userstore managers\u2026&gt;\"]\n</code></pre> <p>This configuration requires the developer to enter the names of all existing userstore managers together with the new userstore managers that needed to be enabled.</p> <p>In Identity Server 6.0.0, a new configuration has been introduced to enable the custom userstore managers but adding the name of the new userstore manager only.</p> <p>You may use the following configuration on <code>deployment.toml</code> file to configure new custom userstore managers</p> <pre><code>[user_store_mgt]\ncustom_user_stores=[\u201c&lt;new userstore managers\u2026&gt;\u201d]\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#provisioning","title":"Provisioning","text":"<p>This sections contains the details of the updates related to provisioing section in IS 6.0.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#provisioning-unmapped-roles-in-jit-provisioning","title":"Provisioning Unmapped Roles in JIT Provisioning","text":"<p>In Identity Server 5.11.0, provisioning of roles in the JIT provisioning flow took place only for roles which had role mappings configured.</p> <p>In Identity Server 6.0.0, this behavior has been changed. If there is a local role with a name similar to the Identity Provider role name, such roles will be provisioned during JIT provisioning even if there is no role mapping set in the IDP configuration. This is now the default behavior. If the previous behavior is required, add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[idp_role_management]\nreturn_only_mapped_local_roles = true\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#deleting-locally-added-claims-of-jit-provisioned-users","title":"Deleting locally added claims of JIT provisioned users","text":"<p>In Identity Server 5.11.0, with the <code>Assert identity using mapped local subject identifier</code> option enabled for a service provider, the locally added claim values for a JIT provisioned user during initial provisioning will be retained, even if those specific claim values are not returned by the federated Identity Provider (IdP) during subsequent federated logins.</p> <p>In Identity Server 6.0.0, this behavior has been changed. The attribute synchronization process for a JIT provisioned user was changed so as to delete the existing claim mappings which are not present in the IDP claim mapping. This deletes existing local claim values that are not present in the subsequent federated logins after the initial provisioning.</p> <p>If the previous behavior is required(To preserve locally added claims of JIT provisioned users), add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[authentication.jit_provisioning]\npreserve_locally_added_claims = true\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#scopes","title":"Scopes","text":"<p>This sections contains the details of the updates related to scopes section in IS 6.0.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#system-level-permission-binding-for-maintaining-internal-scopes","title":"System Level Permission Binding for Maintaining Internal Scopes","text":"<p>In earlier versions of the Identity Server, internal system scopes and permissions were managed separately for every tenant. This behavior was not a necessity as these scopes were only used to access the Identity Server\u2019s internal APIs, but it had a negative impact on the tenant creation process.</p> <p>With Identity Servery 6.0.0, the internal scope\u2019s permission bindings will be managed at the server level as system data. All tenants will now use the bindings available in the <code>oauth-scope-bindings.xml</code> file for internal scopes.</p> <p>If the previous behavior is required, add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[oauth]\nenable_system_level_internal_scope_management = false\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#scope-based-claim-filtering-in-applications","title":"Scope Based Claim Filtering in Applications","text":"<p>In the previous versions of the Identity Server, if there are requested claims configured at the service provider, the claims will be sent to the client application regardless of the scope set in the authorization request.</p> <p>From Identity Server 6.0.0 onwards, this behavior has been changed. The claims configured in the service provider will now be filtered by the scopes set in the authorization requests and only those filtered claims will be sent to the client application.</p> <p>To revert to the previous behavior, add the following configuration to the deployment.toml file.</p> <pre><code>[authentication]\nenable_scope_based_claim_filtering = false\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#token","title":"Token","text":"<p>This section covers the updates related to Token configurations on Identity Server 6.0.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#jwt-access-token-signing-behavior","title":"JWT Access Token Signing Behavior","text":"<p>In the previous versions of the Identity Server, JWT access token signing is done using the tenant of the user accessing  the application. This behavior has been improved to maintain consistency with the ID token which is signed using the application\u2019s tenant by default. This behavioral change will also simplify token validation at the application, especially SaaS applications.</p> <p>In Identity Server 6.0.0, JWT Access Token signing is done using the tenant in which the application (service provider) has been registered. </p> <p>This behavioral change will have an impact on SaaS applications as the user may not always be from the same tenant as that of the application. Token validation may fail at the client application when obtaining new tokens after the migration. The SaaS client applications need to be updated to handle JWT token validation using the application tenant in order to function properly with this behavioral change. If the previous behavior is required, add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[oauth.access_token]\ngenerate_with_sp_tenant_domain = false\n</code></pre> <p>With this configuration in place, the SaaS applications can be used as they were without issues.</p> <p>This change will not have an impact on existing non-SaaS applications as both the application and the user will be from the same tenant in that context.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#id-token-signing-behavior-when-encryption-is-used","title":"ID Token Signing Behavior (when Encryption is Used)","text":"<p>In previous versions of the Identity Server, ID Token encryption happens before signing the token. This behavior has been updated to follow the OIDC specification.</p> <p>In Identity Server 6.0.0, ID Token encryption will occur after the token has been signed. It is important to note that the result of token decryption now will be a signed JWT, instead of the claims set as in previous versions. Hence, client applications that perform token decryption will have to be updated accordingly to read the claims in the JWT token.</p> <p>The following is an example written in JAVA portraying the differences between the old and new scenarios.</p> <pre><code>// Using packages \n// com.nimbusds.jose.crypto.RSADecrypter\n// com.nimbusds.jwt.EncryptedJWT\n// com.nimbusds.jwt.JWTClaimsSet\n\n// Decrypt the ID Token\nEncryptedJWT jwt = EncryptedJWT.parse(idToken);        RSADecrypter decrypter = new RSADecrypter(spPrivateKey);\njwt.decrypt(decrypter);\n\n// Obtaining claims set in IS 5.11.0 and prior versions\nJWTClaimsSet claims = jwt.getJWTClaimsSet();\n\n// Obtaining claims set in IS 6.0.0\nJWTClaimsSet claims = jwt.getPayload().toSignedJWT().getJWTClaimsSet();\n</code></pre> <p>Important</p> <p>This behavior cannot be reversed.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#id-token-address-claim","title":"ID Token Address Claim","text":"<p>In IS 6.0.0, the address claim that is returned with the ID token when the address scope is requested has been updated to comply with the OpenID Connect specification.  <code>Country</code>, <code>postal_code</code>, <code>locality</code>, <code>region</code> and <code>street_address</code> child claims will now be returned within the address claim as shown in the example below.  Any client application that is consuming the ID token claims should be updated to properly parse this claim value. <pre><code>{\n\"address\": {\n\"street_address\": \"1234 Hollywood Blvd.\",\n\"locality\": \"Los Angeles\",\n\"region\": \"CA\",\n\"postal_code\": \"90210\",\n\"country\": \"US\"\n}\n}\n</code></pre></p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#thumbprint-certificate-hashing-algorithm","title":"Thumbprint certificate hashing algorithm","text":"<p>From IS 5.10.0 onwards, the hashing algorithm used for thumbprint certificate generation is updated to <code>SHA-256</code>. For versions before IS 5.10.0, WSO2 Identity Server used <code>SHA-1</code> as the hashing algorithm for thumbprint certificate generation.</p> <p>Therefore, if a user is migrating from IS 5.9.0 or a lower version to IS 6.0.0, the previously issued JWTs will not be validated against the new thumbprint included in the JWKS response of the latest version.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#claims","title":"Claims","text":"<p>This section covers the updates related to claims on Identity Server 6.0.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#regex-pattern-validation-for-user-claim-input-values","title":"Regex Pattern Validation for User Claim Input Values","text":"<p>In Identity Server 6.0.0, server-side regex pattern validation has been introduced as a mechanism for validating inputs when adding and updating user claim values. With this feature, the input values for the user claims will be validated against the following patterns by default.</p> Claim Regex Pattern Mobile number <code>^\\d{4}-\\d{2}-\\d{2}$</code> Date of birth <code>^\\s*(?:\\+?(\\d{1,3}))?[-. (](\\d{3})?[-. )](\\d{3})?[-. ]*(\\d{4,6})(?: x(\\d+))?\\s$</code> All other claims <code>[^&lt;&gt;\\`\"]+</code> <p>If the previous behavior is required, the regex pattern validation feature can be disabled adding the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[identity_mgt]\nenable_user_claim_input_regex_validation = false\n</code></pre> <p>However, if user claim value validation is required with different regex patterns, it can be done by configuring the required regex patterns in the user claim configuration window, which will override the default regex validation pattern for that claim. For this to work, the above configuration should be removed (as it is enabled by default) or the value should be set to true.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#regex-pattern-validation-for-scim-attribute-names","title":"Regex Pattern Validation for SCIM Attribute Names","text":"<p>With Identity Server 6.0.0, server-side regex pattern validation has been added for SCIM attribute names. This means that new SCIM attributes created will be validated against the regex <code>&lt;dialect_uri&gt;:[a-z 0-9$\\-_]*$</code>. The regex only allows alphanumeric characters, <code>$</code>, <code>-</code> and <code>_</code> in the attribute names.</p> <p>If you are using a modified claim-config.xml file and you want to incorporate this update to your Identity Server 6.0.0 setup, add the regex patterns manually to your custom claim-config.xml file according to the format given below and replace the default file in <code>&lt;IS_HOME&gt;/repository/conf</code> directory. Refer the table for the Claim Dialect URIs and their corresponding regex patterns.</p> Dialect XML tag format <pre><code>&lt;Dialect dialectURI=\"[Claim Dialect URI]\" claimURIRegex=\"[Regex Pattern]\u201d&gt;\n</code></pre> New Claim Dialect Validation Regexes <p> Claim Dialect URI Regex Pattern <code>urn:scim:schemas:core:1.0</code> <code>urn:scim:schemas:core:1.0:[a-zA-Z0-9\\-_\\.]*</code> <code>urn:ietf:params:scim:schemas:core:2.0</code> <code>urn:ietf:params:scim:schemas:core:2.0:[a-zA-Z0-9\\-_\\.]*\\-_\\.]*</code> <code>urn:ietf:params:scim:schemas:core:2.0:User</code> <code>urn:ietf:params:scim:schemas:core:2.0:User:[a-zA-Z0-9\\-_\\.]*\\-_\\.]*</code> <code>urn:ietf:params:scim:schemas:extension:enterprise:2.0:User</code> <code>urn:ietf:params:scim:schemas:extension:enterprise:2.0:User:[a-zA-Z0-9\\-_\\.]*\\-_\\.]*</code>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#conversion-of-claims-of-assertions-to-oidc-dialect","title":"Conversion of Claims of Assertions to OIDC Dialect","text":"<p>For OAuth/OIDC applications, the default behavior of Identity Server versions till 5.11.0 was to send the original claims sent from IDP directly to the service provider/application as it is without converting the claims to the OIDC dialect.</p> <p>In Identity Server 6.0.0, this behavior has been changed. The claims sent from IDP are now being converted to the OIDC dialect by default before they are sent to the service provider.</p> <p>To disable this and revert to the previous behavior, add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[oauth.oidc.claims]\nenable_oidc_dialect = false\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#external-dialect-claim-mapping-updates","title":"External Dialect Claim Mapping Updates","text":"<p>In Identity Server 6.0.0, the claim mapping of the <code>meta.version</code> claim of the external claim dialect <code>urn:ietf:params:scim:schemas:core:2.0</code> has been changed from the local claim <code>http://wso2.org/claims/im</code> to the newly added local claim <code>http://wso2.org/claims/metadata.version</code>.  This has been done to address an issue that affected updating the value of the IM attribute which is used for other purposes.</p> <p>Although this new claim mapping is available in a fresh Identity Server 6.0.0, this change will not be propagated from the older versions to a migrated IS 6.0.0 as it would create inconsistencies if <code>urn:ietf:params:scim:schemas:core:2.0:meta.version</code> values have been utilized following the older mapping.  If the <code>IM</code> attribute and <code>meta.version</code> attribute values are required separately, it is recommended to manually update the claim mapping via the Console once the migration is complete.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#api-endpoints","title":"API Endpoints","text":"<p>This section covers the updates related to APIs and API endpoints on Identity Server 6.0.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#scim2-endpoint","title":"SCIM2 Endpoint","text":"<p>This section covers the updates related to the SCIM2 endpoint on Identity Server 6.0.0.</p> Intermediate Certificate Validation <p>In WSO2 Identity Server versions 5.11.0 and older, intermediate certificate validation is skipped for the SCIM2 endpoint. This has been enabled by default in WSO2 Identity Server 6.0.0. If the previous behavior is required, add the following configuration to the <code>deployment.toml</code> file.</p> <p><pre><code>[intermediate_cert_validation]\nexempt_contexts = [\u201cscim2\u201d]\n</code></pre> Read more about Intermediate Certificate Validation.</p> Removal of Duplicate Entries in the SCIM2 Users Response <p>In the older versions of the Identity Server, the responses of the SCIM2 Users endpoint did not contain duplicate entries of the same user (it is possible to have to duplicate usernames in separate userstores).</p> <p>In Identity Server 6.0.0, the SCIM2 User responses will contain duplicate entries of the same user as returned by the list of userstores. This has been done to maintain the consistency of the results returned by the userstores for the search queries.</p> <p>If this behavior is not required, it can be disabled using the following configuration.</p> <pre><code>[scim2]\nremove_duplicate_users_in_users_response = true </code></pre> Data type change for boolean attributes from the Schemas endpoint <p>In previous versions of WSO2 Identity Server, the <code>scim2/Schemas</code> endpoint returned the attribute type of boolean attributes as <code>string</code>. <pre><code>caseExact: false\ndescription: \"Status of the account\"\ndisplayName: \"Active\"\ndisplayOrder: \"20\"\nmultiValued: false\nmutability: \"READ_WRITE\"\nname: \"active\"\nrequired: false\nreturned: \"DEFAULT\"\ntype: \"STRING\"\n</code></pre> In Identity Server 6.0.0, the attribute type returned for boolean attributes from the <code>scim2/Schemas</code> endpoint is <code>boolean</code>. <pre><code>caseExact: false\ndescription: \"Status of the account\"\ndisplayName: \"Active\"\ndisplayOrder: \"20\"\nmultiValued: false\nmutability: \"READ_WRITE\"\nname: \"active\"\nrequired: false\nreturned: \"DEFAULT\"\ntype: \"BOOLEAN\"\n</code></pre></p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#token-introspection-endpoint","title":"Token Introspection Endpoint","text":"Disabling Cross Tenant Token Introspection <p>The ability to introspect tokens across tenants will be disabled by default in IS 6.0.0. With this change, cross tenant endpoints will not be accessible using a tenanted access token. For example, using an access token obtained for tenant A to access the user info endpoint of tenant B will result in an \"Access token validation failed\" error response.  The tenanted user info endpoint can only be used with an access token that was issued for that particular tenant.  Hence, the URLs of the introspection (user info) endpoints used in client applications will have to be updated to tenanted endpoints if tenanted access tokens are used. Eg: /userinfo -&gt; /t/tenantdomin/userinfo.</p> <p>If a user needs to enable cross-tenant token introspection, the following config should be added to the <code>deployment.toml</code> file. <pre><code>[oauth.introspect]\nallow_cross_tenant = true\n</code></pre></p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#certificate-configuration-via-application-management-rest-api","title":"Certificate Configuration via Application Management REST API","text":"<p>With IS 6.0.0, it is no longer possible to add expired certificates to applications or update existing certificates of applications with expired certificates using the Application Management REST API.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#oauth-dcr-endpoint-response","title":"OAuth DCR Endpoint Response","text":"<p>With WSO2 Identity Server 6.0.0, the response model of an application <code>GET/PUT</code> response from the OAuth DCR endpoint has been updated. The data type of the <code>client_secret_expires_at</code> property of an OAuth2 Application object has been changed from <code>string</code> to <code>long</code>.</p> <p>Therefore, any client applications that are using this API must update the response parsing mechanisms to work with a long value for this attribute.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#userinfo-endpoint-attributes","title":"UserInfo Endpoint Attributes","text":"Groups Claim <p>The representation of the groups claim in the <code>UserInfo</code> response has been changed. The groups claim is a multi-valued attribute, and it is represented accordingly as a JSON array in the ID token. But in earlier versions of the Identity Server, the value of the groups claim in the UserInfo response is a single string of comma-separated values as shown below.</p> <p><code>\"groups\": \"Internal/everyone,dev\"</code></p> <p>With Identity Server 6.0.0, the UserInfo response has been updated to return a JSON array value for the groups claim, similar to that in the ID token.</p> <p><code>\"groups\": [\"Internal/everyone\",\"dev\"]</code> Hence, any client application that consumes the UserInfo response should be updated to parse this new format of the response properly.</p> Address Claims <p>The representation of the following claims in the <code>UserInfo</code> response has been changed.  - country  - locality  - region  - postal_code</p> <p>These claims will be listed as sub-claims within a JSON object under the address claim in the ID token. In earlier versions of the Identity Server, these claims were listed separately in the UserInfo response as shown below.</p> <pre><code>\"country\": \"Andorra\",\n\"locality\": \"Wales\"\n</code></pre> <p>With Identity Server 6.0.0, the UserInfo response will list the above claims inside the address claim as shown below.</p> <p><pre><code>\"address\": {\n   \"country\": \"Andorra\",\n   \"locality\": \"Wales\"\n}   \n</code></pre> Hence, any client application that consumes the UserInfo response should be updated to parse this new format of the response properly.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#library-management-permissions","title":"Library Management Permissions","text":"<p>Up until WSO2 Identity Server 5.11.0, manage level permissions were required to access the Function Library Management Admin services and APIs.</p> <p>With WSO2 Identity Server 6.0.0, more fine-grained permissions are supported for these services and APIs. The following table maps the operation to the required permissions.</p> Service Operation API Call Permissions Required <code>createFunctionLibrary</code> <code>POST /api/server/v1/script-libraries(.*)</code> <code> /permission/admin/manage/functionsLibrarymgt/create</code> <code>listFunctionLibraries, getFunctionLibrary</code> <code>GET /api/server/v1/script-libraries(.*)</code> <code>/permission/admin/manage/functionslibrarymgt/view</code> <code>deleteFunctionLibrary</code> <code>DELETE /api/server/v1/script-libraries(.*)</code> <code>/permission/admin/managefunctionslibrarymgt/delete</code> <code>updateFunctionLibrary</code> <code>PUT /api/server/v1/script-libraries(.*)</code> <code>/permission/admin/manage/functionslibrarymgt/update</code>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#cors-configuration-management-api-permissions","title":"CORS Configuration Management API Permissions","text":"<p>Up until WSO2 Identity Server 5.11.0, <code>manage</code> level permissions were required to access the CORS Configuration Management APIs. With IS 6.0.0, more fine-grained permissions have been introduced for this API.  The permission <code>/permission/admin/manage/identity/cors/origins/view</code> is now sufficient to access the <code>/api/server/v1/cors/origins</code> API endpoint.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#remote-server-shutdownrestart-via-soap-api","title":"Remote Server Shutdown/Restart via SOAP API","text":"<p>With Identity Server 6.0.0, the capability of the SOAP APIs to initiate server shutdowns or restarts has been disabled by default. If these features are required, add the following configurations to the <code>deployment.toml</code> file to enable the features.</p> <pre><code>[server]\nenable_shutdown_from_api = true\nenable_restart_from_api = true\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#server-management-api-restrictions","title":"Server Management API Restrictions","text":"<p>From Identity Server 6.0.0 onwards, only client applications configured as Management Applications are able to access Server Management APIs.</p> <p>Applications can configured as management applications in the following methods: - Check the Management Application option available in the application's edit page. - Set the <code>isManagementApp</code> attribute to <code>true</code> using Application Management REST API for the required applications.</p> <p>Note</p> <p>This will affect only new applications. All applications that existed prior to the migration will still be able to access the Server's Management APIs.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#resend-code-api-restrictions","title":"Resend Code API Restrictions","text":"<p>From Identity Server 6.0.0 onwards, only users with identity management permission are able to invoke the resend-code API.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#legacy-dcr-endpoint-deprecation","title":"Legacy DCR Endpoint Deprecation","text":"<p>With IS 6.0.0, the legacy DCR endpoint which was accessible via <code>/identity/register</code> has been deprecated.  The recommended API for DCR should be OAuth2.0 DCR endpoint (<code>/identity/oauth2/dcr/v1.1</code>).</p> <p>If the deprecated legacy DCR endpoint needs to be enabled, use the following config in <code>deployment.toml</code> file. <pre><code>[[legacy_feature]]\nid = \"identity/register\"\nenable = true\n</code></pre></p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#users-session-management-apis","title":"User's Session Management APIs","text":"<p>From Identity Server 6.0.0 onwards, two new API endpoints will be available to retrieve user session information.</p> <ul> <li><code>/{user-id}/sessions/{session-id}</code>: To retrieve information related to the active session given a session-id and a user-id.</li> <li><code>/sessions</code>: To retrieve all active sessions of the tenant. This endpoint supports filtering with some of the attributes.</li> </ul> <p>Read more on User's Session Management API Definition.</p> <p>From Identity Server 6.0.0 onwards, federated authentication sessions associated with local user sessions will be returned with the session's response.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#database","title":"Database","text":"<p>This section covers the updates related to database configurations on Identity Server 6.0.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#h2-database-version-upgrade","title":"H2 Database Version Upgrade","text":"<p>The H2 database engine version has been upgraded from <code>1.4.199</code> to <code>2.1.210</code> in Identity Server 6.0.0. As a result of this, Identity Server 6.0.0 will not be able to properly interact with existing H2 databases of the older version.</p> <p>Therefore, it is mandatory to migrate the existing H2 databases to the newer version before running the product migration tool. This applies mainly to the embedded H2 database in the product, if being used.</p> <p>Note</p> <p>If you are migrating from IS 5.11.0 which is using the embedded H2 database and has been updated to update level 111 or higher, the H2 database migration need not be done as the database has already been migrated with update 111.</p> <p>To migrate the H2 databases to the newer versions, follow the instructions given below.</p> <ol> <li> <p>Get the <code>migration.sh</code> script provided by the WSO2 team and run it using the command <code>sh migration.sh</code>.</p> <p>Alternatively, you could run the following command to download and run the script in one go.</p> <pre><code>curl -s https://raw.githubusercontent.com/wso2/samples-is/master/h2-migration-tool/migration.sh | bash\n</code></pre> </li> <li> <p>Once you run the script, you will be prompted with the following questions on the terminal:</p> <ul> <li>Enter the path to the previous database files:     If the database being migrated is the embedded H2 database, the path should be <code>&lt;OLD_IS_HOME&gt;/repository/database</code>.</li> <li>Enter the path to store the newly created files:     Enter the path of the target directory where the new database files should be generated.</li> </ul> </li> <li> <p>After successfully executing the migration script, copy the files in the target directory to the <code>repository/database</code> directory in the new Identity Server 6.0.0 pack for embedded H2 database migration.</p> </li> </ol>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#data-providers","title":"Data providers","text":"<p>This section covers the updates related to data provider configurations on WSO2 Identity Server 6.0.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#introspection-data-providers","title":"Introspection Data Providers","text":"<p>Up until WSO2 Identity Server 5.11.0, the following single configuration was used to enable or disable all the registered OAuth introspection data providers.</p> <pre><code>[oauth.grant_type.uma_ticket]\nretrieve_uma_permission_info_through_introspection = true\n</code></pre> <p>This configuration is deprecated from Identity Server 6.0.0 onwards. Introspection data providers are now registered as event listeners and can be individually activated using the configurations given below in the <code>deployment.toml</code> file.</p> <pre><code>[event.default_listener.is_introspection_data_provider]\nenable = true\n\n[event.default_listener.uma_introspection_data_provider]\nenable = true\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#system-configs","title":"System configs","text":"<p>This section covers the updates related to system configurations on Identity Server 6.0.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#default-cors-configuration","title":"Default CORS Configuration","text":"<p>In previous versions of WSO2 Identity Server, the default HTTP methods allowed for CORS were only <code>GET</code>, <code>POST</code>, <code>HEAD</code> and <code>OPTIONS</code>.</p> <p>In Identity Server 6.0.0, this has been changed to allow the following HTTP methods <code>GET</code>, <code>POST</code>, <code>PUT</code>, <code>PATCH</code>, <code>DELETE</code>, <code>HEAD</code> and <code>OPTIONS</code>.</p> <p>Learn more on how to change the CORS configuration.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#log4j2-logging-in-hazelcast","title":"Log4j2 logging in Hazelcast","text":"<p>If you have been using WSO2 Identity Server in a Hazelcast cluster, you may have configured the logging type for Hazelcast as log4j <code>(Log4j1)</code>. Log4j1 logging is no longer supported in WSO2 Identity Server.</p> <p>In WSO2 Identity Server 6.0.0, the Log4j version is upgraded to <code>Log4j2</code>. Therefore the Hazelcast configuration needs to be updated to <code>log4j2</code> by adding the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[hazelcast]\nhazelcast.logging.type = log4j2\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.11.0%20to%206.0.0/#changes-to-the-webxml-file","title":"Changes to the <code>web.xml</code> file","text":"<p>In previous versions of the WSO2 Identity Server, the <code>authenticationendpoint</code> configurations, <code>accountrecoveryendpoint</code> configurations, and servlet configurations were done in the <code>web.xml</code> file. </p> <p>From WSO2 Identity Server 6.0.0 onwards the <code>authenticationendpoint</code> configurations, <code>accountrecoveryendpoint</code> configurations, and servlet configurations should be done in the <code>deployment.toml</code> file.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.7.0%20to%205.8.0/","title":"Understanding What Has Changed","text":"<p>This page provides details about the behavioral changes and configuration changes from WSO2 Identity Server 5.7.0 to 5.8.0.</p> <ul> <li>Behavioral changes</li> <li>Configuration changes</li> </ul>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.7.0%20to%205.8.0/#behavioral-changes","title":"Behavioral changes","text":"<p>This section explains the features for which the behaviour has changed, and the impact is causes on your current implementation when you migrate to the latest release. Go through the behavioral changes to understand what has changed and prepare for migration impact.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.7.0%20to%205.8.0/#change-1","title":"Change #1","text":"<p>Use case</p> <p>By default, WSO2 IS supports a fixed set of attributes for the SCIM2 user object. These are default attributes that are defined through the SCIM2 specification. However, in reality, organizations in the industry will have their own defined attributes for users. In such cases, the Enterprise User schema extension can be used. The Enterprise User schema extension defines attributes commonly used in representing users that belong to, or act on behalf of, a business or enterprise.</p> <p>Change</p> <p>In this release, the urn:ietf:params:scim:schemas:extension:enterprise: 2.0:User key is used in SCIM user creation to specify the properties of a user specified in urn: ietf:params:scim:schemas:extension:enterprise:2.0:User. This behavioral change is done in order to comply with the SCIM2 specification.</p> <p>Example </p> <p>For example, the SCIM2 response for the List Users API has changed as follows.</p> <ul> <li> <p>5.7.0</p> <p>Request</p> <pre><code>curl -v -k --user admin:admin https://localhost:9443/scim2/Users\n/7d132f02-221d-4a5f-8b95-8635666e96c\n</code></pre> <p>Response</p> <pre><code>{\"emails\":[\"kim@wso2.com\"],\"urn:ietf:params:scim:schemas:extension:\nenterprise:2.0:User\":{\"organization\":\"Wso2\"},\"meta\":{\"created\":\"2019-\n05-13T06:53:03.382Z\",\"lastModified\":\"2019-05-13T06:57:05.730Z\",\"\nresourceType\":\"User\"},\"schemas\":[\"urn:ietf:params:scim:schemas:core:\n2.0:User\",\"urn:ietf:params:scim:schemas:extension:enterprise:2.0:\nUser\"],\"roles\":[{\"type\":\"default\",\"value\":\"Internal/everyone\"}],\"\nname\":{\"givenName\":\"Alex\",\"familyName\":\"Anderson\"},\"id\":\"7d132f02-\n221d-4a5f-8b95-8635666e96c7\",\"userName\":\"kim3\"}\n</code></pre> </li> <li> <p>5.8.0</p> <p>Request</p> <pre><code>curl -v -k --user admin:admin https://localhost:9443/scim2/Users\n/7d132f02-221d-4a5f-8b95-8635666e96c\n</code></pre> <p>Response</p> <pre><code>{\"emails\":[\"kim@wso2.com\"],\"urn:ietf:params:scim:schemas:extension:\nenterprise:2.0:User\":{\"organization\":\"Wso2\"},\"meta\":{\"created\":\"2019-\n05-13T06:53:03.382Z\",\"lastModified\":\"2019-05-13T06:57:05.730Z\",\"\nresourceType\":\"User\"},\"schemas\":[\"urn:ietf:params:scim:schemas:core:\n2.0:User\",\"urn:ietf:params:scim:schemas:extension:enterprise:2.0:\nUser\"],\"roles\":[{\"type\":\"default\",\"value\":\"Internal/everyone\"}],\"\nname\":{\"givenName\":\"Alex\",\"familyName\":\"Anderson\"},\"id\":\"7d132f02-\n221d-4a5f-8b95-8635666e96c7\",\"userName\":\"kim3\"}\n</code></pre> </li> </ul> <p>Impact</p> <p>When using the Enterprise User schema extension, if a client has been written based on the 5.7.0 response shown above, issues may occur from the client side as the response of the default pack has now changed.</p> <p>How to revert </p> <p>To revert back to the previous behaviour, change the following attributeName back to \"urn:ietf:params:scim:schemas:extension:enterprise:2.0:User\" in the /repository /conf/scim2-schema-extension.xml file. <pre><code>attributeURI\":\"urn:ietf:params:scim:schemas:extension:enterprise:2.0:\nUser\",\n\n\"attributeName\":\"urn:ietf:params:scim:schemas:extension:enterprise:2.0:\nUser\"\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.7.0%20to%205.8.0/#change-2","title":"Change #2","text":"<p>Use case</p> <p>WSO2 IS uses a configuration property to determine the private key that should be used to sign the JWTs issued by the WSO2 Identity Server.</p> <p>Change</p> <p>In IS 5.7.0 the configuration property is set to 'false' by default, which means the JWTs such as Id token, Request Object, Self Contain access token etc., are signed using the private key of the authorized user's tenant domain keystore. From IS 5.8.0 onwards, the default value is set to 'true', which means that JWTs issued from WSO2 IS are signed with the private key belonging to the service provider's keystore.</p> <p>Impact</p> <p>This only makes a difference if the service provider is a SaaS-enabled one; else the user\u2019s tenant domain and the service provider\u2019s tenant domain are the same. If the service provider is SaaS- enabled and this property is set to false, verifying the signature based on the public key of the keystore of the authorized users the signature verification can fail.</p> <p>How to revert </p> <p>To revert back to the previous behavior, change the following property value back to \"false\" in the /repository/conf/identity/identity.xml file. <pre><code>&lt;SignJWTWithSPKey&gt;true&lt;/SignJWTWithSPKey&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.7.0%20to%205.8.0/#change-3","title":"Change #3","text":"<p>Use case</p> <p>In prior versions of WSO2 Identity Server, data publishers were implementations of the Ab stractAuthenticationDataPublisher that are invoked iteratively by the AuthnDataPublisherProxywhen a session changes, such that the data publishers send events to their corresponding destinations. From WSO2 Identity Server 5.8.0 onwards, all data publishers have been migrated to act as event handlers that subscribe to authentication events.</p> <p>Impact</p> <p>Custom DataPublishers that were written for previous versions will not work with the default pack as these listeners are now disabled. For information about migrating existing data publishers to event handlers, see Migrating Data Publishers on the Migration doc.</p> <p>How to revert</p> <p>To revert back to the previous behavior, do the following:</p> <p>Add and enable the following event listeners in the /repository/conf/identity /identity.xml file. <pre><code>&lt;EventListener type=\"org.wso2.carbon.identity.core.handler.\nAbstractIdentityMessageHandler\" name=\"org.wso2.carbon.\nidentity.data.publisher.application.authentication.impl.\nDASLoginDataPublisherImpl\" orderId=\"10\" enable=\"true\"/&gt;\n\n&lt;EventListener type=\"org.wso2.carbon.identity.core.handler.\nAbstractIdentityMessageHandler\" name=\"org.wso2.carbon.identity.data.\npublisher.application.authentication.impl.DASSessionDataPublisherImpl\"\norderId=\"11\" enable=\"true\"/&gt;\n\n&lt;EventListener type=\"org.wso2.carbon.identity.core.handler.\nAbstractIdentityMessageHandler\" name=\"org.wso2.carbon.identity.captcha.\nvalidator.FailLoginAttemptValidator\" orderId=\"10\" enable=\"true\"/&gt;\n</code></pre> <p>Set the enable parameter of the following properties to \"false\" in the /repository /conf/identity/identity-event.properties file. <pre><code>module.name.14=analyticsLoginDataPublisheranalyticsLoginDataPublisher.\nsubscription.1=AUTHENTICATION_STEP_SUCCESS\nanalyticsLoginDataPublisher.subscription.2=AUTHENTICATION_STEP_FAILURE\nanalyticsLoginDataPublisher.subscription.3=AUTHENTICATION_SUCCESS\nanalyticsLoginDataPublisher.subscription.4=AUTHENTICATION_FAILURE\nanalyticsLoginDataPublisher.enable=false\n\nmodule.name.15=analyticsSessionDataPublisher\nanalyticsSessionDataPublisher.subscription.1=SESSION_CREATE\nanalyticsSessionDataPublisher.subscription.2=SESSION_UPDATE\n\nanalyticsSessionDataPublisher.subscription.3=SESSION_TERMINATE\nanalyticsSessionDataPublisher.enable=true\n\nmodule.name.13=authenticationAuditLogger\nauthenticationAuditLogger.subscription.1=AUTHENTICATION_STEP_SUCCESS\nauthenticationAuditLogger.subscription.2=AUTHENTICATION_STEP_FAILURE\nauthenticationAuditLogger.subscription.3=AUTHENTICATION_SUCCESS\nauthenticationAuditLogger.subscription.4=AUTHENTICATION_FAILURE\nauthenticationAuditLogger.subscription.5=SESSION_TERMINATE\nauthenticationAuditLogger.enable=true\"\n\nmodule.name.16=failLoginAttemptValidator\nfailLoginAttemptValidator.subscription.1=AUTHENTICATION_STEP_FAILURE\nfailLoginAttemptValidator.enable=true\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.7.0%20to%205.8.0/#change-4","title":"Change #4","text":"<p>Use case</p> <p>The following configuration properties have been added to support filtering^ users or groups only from the PRIMARY domain.</p> <pre><code>&lt;MandateDomainForUsernamesAndGroupNamesInResponse&gt;false&lt;\n/MandateDomainForUsernamesAndGroupNamesInResponse&gt;\n&lt;MandateDomainForGroupNamesInGroupsResponse&gt;false&lt;\n/MandateDomainForGroupNamesInGroupsResponse&gt;\n</code></pre> <p>Change</p> <p>Enabling the  property prepends the \"PRIMARY/\" prefix in the SCIM2 response to the user names and role names (group names) that belong to the PRIMARY user store, regardless of whether the response is for the users endpoint or the groups endpoint. When the properties are set to 'false', the \"PRIMARY/\" prefix will not be prepended. <p>Impact</p> <p>When this property is enabled, the SCIM response will be different from responses received in previous versions of WSO2 IS. Therefore, if some clients have been written based on these SCIM responses, there is a possibility that this change could break those clients.</p> <p>Example</p> <p>The following code blocks show the difference between the requests and responses that are recieved when this property is enabled, when it is disabled, and in versions prior to 5.8.0. Note that in previous versions, there is an inconsistency in the responses recieved (i.e., the \"PRIMARY/\" prefix is prepended to group names only in the groups endpoint request). This inconsistency has been fixed with the introduction of these two new properties. When the  property is enabled, the \"PRIMARY/\" prefix is prepended to both user names and group names for both users and groups endpoint responses, and when the property is disabled, it is not prepended at all. <ul> <li> <p>Old behavior</p> <p>Groups endpoint request:</p> <pre><code>curl -v -k --user admin:admin 'https://localhost:9443/scim2/Groups'\n</code></pre> <p>Groups endpoint response:</p> <pre><code>{\"totalResults\":4,\"startIndex\":1,\"itemsPerPage\":4,\"schemas\":[\"urn:\nietf:params:scim:api:messages:2.0:ListResponse\"],\"Resources\":\n[{\"displayName\":\"PRIMARY/Engineering\",\"meta\":{\"created\":\"2019-05-\n13T03:44:36.787Z\",\"location\":\"https://localhost:9443/scim2/Groups\n/abb1c935-dcd2-4e89-a633-72bf22460463\",\"lastModified\":\"2019-05-13T03:\n44:36.787Z\"},\"members\":[{\"display\":\"ann\",\"value\":\"1ad7272f-82b5-4a44-\n9a86-fe1f31279b29\"}],\"id\":\"abb1c935-dcd2-4e89-a633-72bf22460463\"},\n{\"displayName\":\"Internal/system\",\"meta\":{\"created\":\"2019-05-13T03:42:\n53.425Z\",\"location\":\"https://localhost:9443/scim2/Groups/c9f632fa-\n12e9-405d-92c8-076657151104\",\"lastModified\":\"2019-05-13T03:42:53.\nZ\"},\"id\":\"c9f632fa-12e9-405d-92c8-076657151104\"},{\"displayName\":\"\nPRIMARY/admin\",\"meta\":{\"created\":\"2019-05-13T03:42:52.839Z\",\"\nlocation\":\"https://localhost:9443/scim2/Groups/bebe2740-8490-4da3-\n814b-fc010a92f665\",\"lastModified\":\"2019-05-13T03:42:52.839Z\"},\"\nmembers\":[{\"display\":\"admin\",\"value\":\"442c1077-75f4-4327-981a-\n4846efff396e\"}],\"id\":\"bebe2740-8490-4da3-814b-fc010a92f665\"},\n{\"displayName\":\"PRIMARY/Manager\",\"meta\":{\"created\":\"2019-05-13T03:44:\n54.118Z\",\"location\":\"https://localhost:9443/scim2/Groups/12bf8c7a-\n768e-43b2-b256-14c89b086bd3\",\"lastModified\":\"2019-05-13T03:44:54.\nZ\"},\"members\":[{\"display\":\"kim\",\"value\":\"68ef862d-6013-4bb0-87ad-\n9531d7a99765\"}],\"id\":\"12bf8c7a-768e-43b2-b256-14c89b086bd3\"}]}\n</code></pre> <p>Users endpoint request:</p> <pre><code>curl -v -k --user admin:admin 'https://localhost:9443/scim2/Users'\n</code></pre> <p>Users endpoint response:</p> <pre><code>{\"totalResults\":3,\"startIndex\":1,\"itemsPerPage\":3,\"schemas\":[\"urn:\nietf:params:scim:api:messages:2.0:ListResponse\"],\"Resources\":\n[{\"emails\":[\"admin@wso2.com\"],\"meta\":{\"created\":\"2019-05-13T09:12:\n52Z\",\"lastModified\":\"2019-05-13T09:12:52Z\"},\"name\":{\"givenName\":\"\nadmin\",\"familyName\":\"admin\"},\"groups\":[{\"display\":\"admin\",\"value\":\"\nbebe2740-8490-4da3-814b-fc010a92f665\"}],\"id\":\"442c1077-75f4-4327-\n981a-4846efff396e\",\"userName\":\"admin\"},{\"meta\":{\"created\":\"2019-05-\n13T03:44:20.474Z\",\"lastModified\":\"2019-05-13T03:44:20.474Z\",\"\nresourceType\":\"User\"},\"name\":{\"familyName\":\"ann\"},\"groups\":\n[{\"display\":\"Engineering\",\"value\":\"abb1c935-dcd2-4e89-a633-\n72bf22460463\"}],\"id\":\"1ad7272f-82b5-4a44-9a86-fe1f31279b29\",\"\nuserName\":\"ann\"},{\"meta\":{\"created\":\"2019-05-13T03:44:06.517Z\",\"\nlastModified\":\"2019-05-13T03:44:06.517Z\",\"resourceType\":\"User\"},\"\nname\":{\"familyName\":\"kim\"},\"groups\":[{\"display\":\"Manager\",\"value\":\"\n12bf8c7a-768e-43b2-b256-14c89b086bd3\"}],\"id\":\"68ef862d-6013-4bb0-\n87ad-9531d7a99765\",\"userName\":\"kim\"}]}\n</code></pre> </li> <li> <p>Enabled</p> <p>Groups endpoint request:</p> <pre><code>curl -v -k --user admin:admin 'https://localhost:9443/scim2/Groups'\n</code></pre> <p>Groups endpoint response:</p> <pre><code>{\"totalResults\":4,\"startIndex\":1,\"itemsPerPage\":4,\"schemas\":[\"urn:\nietf:params:scim:api:messages:2.0:ListResponse\"],\"Resources\":\n[{\"displayName\":\"PRIMARY/Engineering\",\"meta\":{\"created\":\"2019-05-\n13T03:44:36.787Z\",\"location\":\"https://localhost:9443/scim2/Groups\n/abb1c935-dcd2-4e89-a633-72bf22460463\",\"lastModified\":\"2019-05-13T03:\n44:36.787Z\"},\"members\":[{\"display\":\"PRIMARY/ann\",\"value\":\"1ad7272f-\n82b5-4a44-9a86-fe1f31279b29\"}],\"id\":\"abb1c935-dcd2-4e89-a633-\n72bf22460463\"},{\"displayName\":\"Internal/system\",\"meta\":{\"created\":\"\n2019-05-13T03:42:53.425Z\",\"location\":\"https://localhost:9443/scim\n/Groups/c9f632fa-12e9-405d-92c8-076657151104\",\"lastModified\":\"2019-\n05-13T03:42:53.425Z\"},\"id\":\"c9f632fa-12e9-405d-92c8-076657151104\"},\n{\"displayName\":\"PRIMARY/admin\",\"meta\":{\"created\":\"2019-05-13T03:42:\n52.839Z\",\"location\":\"https://localhost:9443/scim2/Groups/bebe2740-\n8490-4da3-814b-fc010a92f665\",\"lastModified\":\"2019-05-13T03:42:52.\nZ\"},\"members\":[{\"display\":\"PRIMARY/admin\",\"value\":\"442c1077-75f4-\n4327-981a-4846efff396e\"}],\"id\":\"bebe2740-8490-4da3-814b-\nfc010a92f665\"},{\"displayName\":\"PRIMARY/Manager\",\"meta\":{\"created\":\"\n2019-05-13T03:44:54.118Z\",\"location\":\"https://localhost:9443/scim\n/Groups/12bf8c7a-768e-43b2-b256-14c89b086bd3\",\"lastModified\":\"2019-\n05-13T03:44:54.118Z\"},\"members\":[{\"display\":\"PRIMARY/kim\",\"value\":\"\n68ef862d-6013-4bb0-87ad-9531d7a99765\"}],\"id\":\"12bf8c7a-768e-43b2-\nb256-14c89b086bd3\"}]}\n</code></pre> <p>Users endpoint request:</p> <pre><code>curl -v -k --user admin:admin 'https://localhost:9443/scim2/Users'\n</code></pre> <p>Users endpoint response:</p> <pre><code>{\"totalResults\":3,\"startIndex\":1,\"itemsPerPage\":3,\"schemas\":[\"urn:\nietf:params:scim:api:messages:2.0:ListResponse\"],\"Resources\":\n[{\"emails\":[\"admin@wso2.com\"],\"meta\":{\"created\":\"2019-05-13T09:12:\n52Z\",\"lastModified\":\"2019-05-13T09:12:52Z\"},\"name\":{\"givenName\":\"\nadmin\",\"familyName\":\"admin\"},\"groups\":[{\"display\":\"PRIMARY/admin\",\"\nvalue\":\"bebe2740-8490-4da3-814b-fc010a92f665\"}],\"id\":\"442c1077-75f4-\n4327-981a-4846efff396e\",\"userName\":\"PRIMARY/admin\"},{\"meta\":\n{\"created\":\"2019-05-13T03:44:20.474Z\",\"lastModified\":\"2019-05-13T03:\n44:20.474Z\",\"resourceType\":\"User\"},\"name\":{\"familyName\":\"ann\"},\"\ngroups\":[{\"display\":\"PRIMARY/Engineering\",\"value\":\"abb1c935-dcd2-\n4e89-a633-72bf22460463\"}],\"id\":\"1ad7272f-82b5-4a44-9a86-\nfe1f31279b29\",\"userName\":\"PRIMARY/ann\"},{\"meta\":{\"created\":\"2019-05-\n13T03:44:06.517Z\",\"lastModified\":\"2019-05-13T03:44:06.517Z\",\"\nresourceType\":\"User\"},\"name\":{\"familyName\":\"kim\"},\"groups\":\n[{\"display\":\"PRIMARY/Manager\",\"value\":\"12bf8c7a-768e-43b2-b256-\n14c89b086bd3\"}],\"id\":\"68ef862d-6013-4bb0-87ad-9531d7a99765\",\"\nuserName\":\"PRIMARY/kim\"}]}\n</code></pre> </li> <li> <p>Disabled</p> <p>Groups endpoint request:</p> <pre><code>curl -v -k --user admin:admin 'https://localhost:9443/scim2/Groups'\n</code></pre> </li> <li> <p>Groups endpoint response:</p> <pre><code>{\"totalResults\":4,\"startIndex\":1,\"itemsPerPage\":4,\"schemas\":[\"urn:\nietf:params:scim:api:messages:2.0:ListResponse\"],\"Resources\":\n[{\"displayName\":\"Engineering\",\"meta\":{\"created\":\"2019-05-13T03:44:\n36.787Z\",\"location\":\"https://localhost:9443/scim2/Groups/abb1c935-\ndcd2-4e89-a633-72bf22460463\",\"lastModified\":\"2019-05-13T03:44:36.\nZ\"},\"members\":[{\"display\":\"ann\",\"value\":\"1ad7272f-82b5-4a44-9a86-\nfe1f31279b29\"}],\"id\":\"abb1c935-dcd2-4e89-a633-72bf22460463\"},\n{\"displayName\":\"Internal/system\",\"meta\":{\"created\":\"2019-05-13T03:42:\n53.425Z\",\"location\":\"https://localhost:9443/scim2/Groups/c9f632fa-\n12e9-405d-92c8-076657151104\",\"lastModified\":\"2019-05-13T03:42:53.\nZ\"},\"id\":\"c9f632fa-12e9-405d-92c8-076657151104\"},{\"displayName\":\"\nadmin\",\"meta\":{\"created\":\"2019-05-13T03:42:52.839Z\",\"location\":\"\nhttps://localhost:9443/scim2/Groups/bebe2740-8490-4da3-814b-\nfc010a92f665\",\"lastModified\":\"2019-05-13T03:42:52.839Z\"},\"members\":\n[{\"display\":\"admin\",\"value\":\"442c1077-75f4-4327-981a-\n4846efff396e\"}],\"id\":\"bebe2740-8490-4da3-814b-fc010a92f665\"},\n{\"displayName\":\"Manager\",\"meta\":{\"created\":\"2019-05-13T03:44:54.\nZ\",\"location\":\"https://localhost:9443/scim2/Groups/12bf8c7a-768e-\n43b2-b256-14c89b086bd3\",\"lastModified\":\"2019-05-13T03:44:54.118Z\"},\"\nmembers\":[{\"display\":\"kim\",\"value\":\"68ef862d-6013-4bb0-87ad-\n9531d7a99765\"}],\"id\":\"12bf8c7a-768e-43b2-b256-14c89b086bd3\"}]}\n</code></pre> <p>Users endpoint request:</p> <pre><code>curl -v -k --user admin:admin 'https://localhost:9443/scim2/Users'\n</code></pre> <p>Users endpoint response:</p> <pre><code>{\"totalResults\":3,\"startIndex\":1,\"itemsPerPage\":3,\"schemas\":[\"urn:\nietf:params:scim:api:messages:2.0:ListResponse\"],\"Resources\":\n[{\"emails\":[\"admin@wso2.com\"],\"meta\":{\"created\":\"2019-05-13T09:12:\n52Z\",\"lastModified\":\"2019-05-13T09:12:52Z\"},\"name\":{\"givenName\":\"\nadmin\",\"familyName\":\"admin\"},\"groups\":[{\"display\":\"admin\",\"value\":\"\nbebe2740-8490-4da3-814b-fc010a92f665\"}],\"id\":\"442c1077-75f4-4327-\n981a-4846efff396e\",\"userName\":\"admin\"},{\"meta\":{\"created\":\"2019-05-\n13T03:44:20.474Z\",\"lastModified\":\"2019-05-13T03:44:20.474Z\",\"\nresourceType\":\"User\"},\"name\":{\"familyName\":\"ann\"},\"groups\":\n[{\"display\":\"Engineering\",\"value\":\"abb1c935-dcd2-4e89-a633-\n72bf22460463\"}],\"id\":\"1ad7272f-82b5-4a44-9a86-fe1f31279b29\",\"\nuserName\":\"ann\"},{\"meta\":{\"created\":\"2019-05-13T03:44:06.517Z\",\"\nlastModified\":\"2019-05-13T03:44:06.517Z\",\"resourceType\":\"User\"},\"\nname\":{\"familyName\":\"kim\"},\"groups\":[{\"display\":\"Manager\",\"value\":\"\n12bf8c7a-768e-43b2-b256-14c89b086bd3\"}],\"id\":\"68ef862d-6013-4bb0-\n87ad-9531d7a99765\",\"userName\":\"kim\"}]}\n</code></pre> </li> </ul> <p>How to revert</p> <p>To revert back to the previous behaviour (in versions prior to 5.8.0), set the following property value to \"true\" in the /repository/conf/identity/identity.xml file. <pre><code>&lt;MandateDomainForGroupNamesInGroupsResponse&gt;true&lt;\n/MandateDomainForGroupNamesInGroupsResponse&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.7.0%20to%205.8.0/#change-5","title":"Change #5","text":"<p>Use case</p> <p>A new configuration property  has been added. For clustered nodes, enabling this property enables local cache invalidations. <p>Change</p> <p>In a clustered nodes setup, cache invalidation requests for any local cache of a particular node will be sent to other nodes in the cluster for each cache related operation such as cache update, delete, or add. In previous versions of WSO2 IS, these invalidation requests were not sent to other nodes in the cluster by default. Therefore, it is recommended to enable this property if the local cache is enabled in a clustered setup.</p> <p>How to revert</p> <p>To revert back to the previous behavior, change the following property value back to \"false\" in the /repository/conf/carbon.xml file. <pre><code>&lt;ForceLocalCache&gt;true&lt;/ForceLocalCache&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.7.0%20to%205.8.0/#configuration-changes","title":"Configuration changes","text":"<p>This section lists out the configuration changes in each configuration file including new properties, modified properties, and deprecated properties.</p> <p>Note </p> <p>The configuration changes listed below will not affect the existing system because these configurations are applied only at first start up and new tenant creation. If you wish to change the configurations for the existing tenants, configure it through the management console user interface.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.7.0%20to%205.8.0/#carbonxml-file","title":"<code>carbon.xml</code> file","text":"<p>Stored in the /repository/conf directory. <ul> <li> <p>The version property value has been changed to 5.8.0.</p> <pre><code>&lt;Version&gt;5.8.0&lt;/Version&gt;\n</code></pre> <p>Why?</p> <p>This property indicates the version of WSO2 IS.</p> </li> </ul>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.7.0%20to%205.8.0/#axis2xml-file","title":"<code>axis2.xml</code> file","text":"<p>Stored in the /repository /conf/axis2 dire ctory. <ul> <li> <p>The following property values have been changed to 5.8.0.</p> <pre><code>&lt;parameter name=\"userAgent\" locked=\"true\"&gt;\nWSO2 Identity Server-5.8.\n&lt;/parameter&gt;\n&lt;parameter name=\"server\" locked=\"true\"&gt;\nWSO2 Identity Server-5.8.\n&lt;/parameter&gt;\n</code></pre> </li> <li> <p>The following property has been added.</p> <pre><code>&lt;parameter name=\"forceIncludeNullElements\"&gt;false&lt;/parameter&gt;\n</code></pre> <p>Why?</p> <p>Enabling this property forces elements that have the @IgnoreNullElement annotation to be returned as well even though the value is null. The default value for this property is 'false'.</p> </li> </ul>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.7.0%20to%205.8.0/#endpointconfigproperties-file","title":"<code>Endpointconfig.properties</code> file","text":"<p>Stored in the /repository /conf/identity directory. <ul> <li> <p>The following property has been added.</p> <pre><code>mutualSSLManagerEnabled=true\n</code></pre> <p>Why</p> <p>Enabling this property allows the MutualSSLManager to initialize the keystores. If it is set to 'false', the MutualSSLManager will not initialize the keystore.</p> </li> </ul>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.7.0%20to%205.8.0/#application-authenticationxml-file","title":"<code>application-authentication.xml</code> file","text":"<p>Stored in the  /repository /conf/identity directory. <ul> <li> <p>The following property has been added to the following authenticators under the relevant tags.</p> <ul> <li>BasicAuthenticator -  <li>BasicAuthRequestPathAuthenticator -  <pre><code>&lt;Parameter name=\"AuthMechanism\"&gt;basic&lt;/Parameter&gt;\n</code></pre> <p>Why?</p> <p>This property is used to help identify the authentication mechanism used by the authenticator.</p> <li> <p>The following parameters were added under the <code>&lt;AuthenticatorConfig name=\" EmailOTP\" enabled=\"true\"&gt;</code> tag.</p> <pre><code>&lt;Parameter name=\"EMAILOTPAuthenticationEndpointURL\"\n&gt;emailotpauthenticationendpoint/emailotp.jsp&lt;/Parameter&gt;\n&lt;Parameter name=\"EmailOTPAuthenticationEndpointErrorPage\"\n&gt;emailotpauthenticationendpoint/emailotpError.jsp&lt;/Parameter&gt;\n&lt;Parameter name=\"EmailAddressRequestPage\"\n&gt;emailotpauthenticationendpoint/emailAddress.jsp&lt;/Parameter&gt;\n</code></pre> <p>Why?</p> <p>The following parameters make the Email OTP URLs configurable.</p> </li> <li> <p>The totp authenticator configurations were uncommented and the following parameters have been added under the <code>&lt;AuthenticatorConfig name=\"totp\" enabled=\" true\"&gt;</code> tag.</p> <pre><code>&lt;Parameter name=\"Issuer\"&gt;WSO2&lt;/Parameter&gt;\n&lt;Parameter name=\"UseCommonIssuer\"&gt;true&lt;/Parameter&gt;\n</code></pre> <p>Why?</p> <p>The added parameters make the totp issuer configurable instead of showing the domain name.</p> </li> <li> <p>The following parameter has been removed from the totp authenticator as it is redundant.</p> <pre><code>&lt;Parameter name=\"redirectToMultiOptionPageOnFailure\"&gt;false&lt;\n/Parameter&gt;\n</code></pre> </li> <li> <p>The following property has been added under the <code>&lt;ApplicationAuthentication&gt;</code> tag.</p> <pre><code>&lt;!--Similar to the 'AuthenticationEndpointQueryParams' above,\nthe following section defines the parameters that should be\nincluded/excluded in the redirection responses from\nauthentication framework. These parameters may be generated\ninternally from the framework, handlers or authenticators. The\nfiltered parameters will be available via the REST API for\nauthentication framework. \"removeOnConsumeFromAPI\" defines\nwhether to make the filtered parameters unavailable from the API\non the first consumption. --&gt;\n&lt;AuthenticationEndpointRedirectParams action=\"exclude\"\nremoveOnConsumeFromAPI=\"true\"&gt;\n&lt;AuthenticationEndpointRedirectParam name=\"loggedInUser\"/&gt;\n&lt;/AuthenticationEndpointRedirectParams&gt;\n</code></pre> </li>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.7.0%20to%205.8.0/#captcha-configproperties-file","title":"<code>captcha-config.properties</code> file","text":"<p>Stored in the /repository /conf/identity directory. <ul> <li> <p>The following properties have been added.</p> <pre><code>#reCaptcha failed redirect urls\n#recaptcha.failed.redirect.urls=\n</code></pre> <p>Why?</p> <p>The properties listed above allow configuring the list of URLs that can be used for redirection when reCaptcha fails.</p> </li> </ul>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.7.0%20to%205.8.0/#scim2-schema-extensionconfig-file","title":"<code>scim2-schema-extension.config</code> file","text":"<p>Stored in the  /repository/conf/ directory. <p>The urn:ietf:params:scim:schemas:extension:enterprise:2.0:User attribute name has been changed from what is reflected in the 5.7.0 code block to the configuration shown in the 5.8.0 code block.</p> <ul> <li> <p>5.7.0</p> <pre><code>\"attributeURI\":\"urn:ietf:params:scim:schemas:extension:\nenterprise:2.0:User\",\n\n\"attributeName\":\"urn:ietf:params:scim:schemas:extension:\nenterprise:2.0:User\",\n</code></pre> </li> <li> <p>5.8.0</p> <pre><code>attributeURI\":\"urn:ietf:params:scim:schemas:extension:enterprise:\n2.0:User\",\n\n\"attributeName\":\"urn:ietf:params:scim:schemas:extension:\nenterprise:2.0:User\"\n</code></pre> </li> </ul> <p>Why?</p> <p>This change is done in order to comply with the SCIM2 specification. For more details, see behavioral change #1 in the behavioral changes section given above.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.7.0%20to%205.8.0/#identity-eventproperties-file","title":"<code>identity-event.properties</code> file","text":"<p>Stored in the /repository /conf/identity directory. <ul> <li> <p>The password policy error message has been modified as follows.</p> <pre><code>passwordPolicy.errorMsg='Password pattern policy violated.\nPassword should contain a digit[0-9], a lower case letter[a-z],\nan upper case letter[A-Z], and one of !@#$%&amp;* characters'\n</code></pre> </li> <li> <p>The following handlers have been added.</p> <pre><code>module.name.17=SAMLLogoutHandler\nSAMLLogoutHandler.subscription.1=SESSION_TERMINATE\nSAMLLogoutHandler.enable=true\n\n# To delete registration code in database once the user deletion\nmodule.name.18=confirmationCodesInvalidate\nconfirmationCodesInvalidate.subscription.1=POST_DELETE_USER\n</code></pre> <p>Why?</p> <p>These handlers are introduced to support the cross-protocol logout feature and for migration of existing data publishers to event handlers that subscribe to authentication events. For more information about migrating existing data publishers to event handlers, see the Migrating Data Publishers document.</p> </li> <li> <p>The following properties were added.</p> <pre><code>module.name.14=analyticsLoginDataPublisher\nanalyticsLoginDataPublisher.subscription.\n1=AUTHENTICATION_STEP_SUCCESS\nanalyticsLoginDataPublisher.subscription.\n2=AUTHENTICATION_STEP_FAILURE\nanalyticsLoginDataPublisher.subscription.3=AUTHENTICATION_SUCCESS\nanalyticsLoginDataPublisher.subscription.4=AUTHENTICATION_FAILURE\nanalyticsLoginDataPublisher.enable=false\n\nmodule.name.15=analyticsSessionDataPublisher\nanalyticsSessionDataPublisher.subscription.1=SESSION_CREATE\nanalyticsSessionDataPublisher.subscription.2=SESSION_UPDATE\n\nanalyticsSessionDataPublisher.subscription.3=SESSION_TERMINATE\nanalyticsSessionDataPublisher.enable=true\n\nmodule.name.13=authenticationAuditLogger\nauthenticationAuditLogger.subscription.\n1=AUTHENTICATION_STEP_SUCCESS\nauthenticationAuditLogger.subscription.\n2=AUTHENTICATION_STEP_FAILURE\nauthenticationAuditLogger.subscription.3=AUTHENTICATION_SUCCESS\nauthenticationAuditLogger.subscription.4=AUTHENTICATION_FAILURE\nauthenticationAuditLogger.subscription.5=SESSION_TERMINATE\nauthenticationAuditLogger.enable=true\"\n\nmodule.name.16=failLoginAttemptValidator\nfailLoginAttemptValidator.subscription.\n1=AUTHENTICATION_STEP_FAILURE\nfailLoginAttemptValidator.enable=true\n</code></pre> <p>Why?</p> <p>The properties listed above are added to support the event listeners that were added for migrating data publishers to event handlers. For more details, see behavioral change #3 in the behavioral changes section given above.</p> </li> </ul>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.7.0%20to%205.8.0/#identityxml-file","title":"<code>identity.xml</code> file","text":"<p>Stored in the /repository /conf/identity directory. <ul> <li> <p>The following property has been added to the IntrospectionDataProvider interface.</p> <pre><code>&lt;Introspection&gt;\n&lt;EnableDataProviders&gt;false&lt;/EnableDataProviders&gt;\n&lt;/Introspection&gt;\n</code></pre> <p>Why?</p> <p>This property is used to inject additional data to the introspection response.</p> </li> <li> <p>The default CleanUpPeriod value has been modified to 1440.</p> <pre><code>&lt;CleanUpPeriod&gt;1440&lt;/CleanUpPeriod&gt;\n</code></pre> </li> <li> <p>The default value of the following property has been changed from false to true.</p> <pre><code>&lt;SignJWTWithSPKey&gt;true&lt;/SignJWTWithSPKey&gt;\n</code></pre> <p>Why?</p> <p>For details about this change, see behavioral change #2 in the behavioral changes section given above.</p> </li> <li> <p>The following property has been added under the  tag. <pre><code>&lt;UserSessionMapping&gt;\n&lt;Enable&gt;true&lt;/Enable&gt;\n&lt;/UserSessionMapping&gt;\n</code></pre> <p>Why?</p> <p>This property enables terminating all the active sessions of a user during password reset, user deletion, and username renaming.</p> <li> <p>The following event listeners have been removed.</p> <pre><code>&lt;EventListener type=\"org.wso2.carbon.identity.core.handler.\nAbstractIdentityMessageHandler\" name=\"org.wso2.\ncarbon.identity.data.publisher.application.authentication.impl.\nDASLoginDataPublisherImpl\" orderId=\"10\" enable=\"true\"/&gt;\n\n&lt;EventListener type=\"org.wso2.carbon.identity.core.handler.\nAbstractIdentityMessageHandler\" name=\"org.wso2.carbon.identity.\ndata.publisher.application.authentication.impl.\nDASSessionDataPublisherImpl\" orderId=\"11\" enable=\"true\"/&gt;\n\n&lt;EventListener type=\"org.wso2.carbon.identity.core.handler.\nAbstractIdentityMessageHandler\" name=\"org.wso2.carbon.identity.\ncaptcha.validator.FailLoginAttemptValidator\" orderId=\"10\"\nenable=\"true\"/&gt;\n</code></pre> <p>Why?</p> <p>From WSO2 IS 5.8.0 onwards, data publishers are migrated to act as event handlers that subscribe to authentication events. Hence, the event listeners listed above have been removed by default. For more details, see behavioral change #3 in the behavioral changes section given above.</p> </li> <li> <p>The following property has been added.</p> <pre><code>&lt;FilterUsersAndGroupsOnlyFromPrimaryDomain&gt;false&lt;\n/FilterUsersAndGroupsOnlyFromPrimaryDomain&gt;\n</code></pre> <p>Why?</p> <p>Enabling this property filters users or groups only from the PRIMARY user store, regardless of the Users and Groups endpoints. If it is set to 'false' it filters users or groups across all user stores.</p> </li> <li> <p>The following property has been added.</p> <pre><code>&lt;MandateDomainForUsernamesAndGroupNamesInResponse&gt;false&lt;\n/MandateDomainForUsernamesAndGroupNamesInResponse&gt;\n</code></pre> <p>Why?</p> <p>Enabling this property prepends the \"PRIMARY/\" prefix to the user name and role name (group name) that belongs to the PRIMARY user store, in the SCIM2 response regardless of the Users and Groups endpoint. When it is set to 'false', the \"PRIMARY/\" prefix will not be prepended. For more details, see behavioral change #4 in the behavioral changes section given above.</p> </li> <li> <p>The following property has been added.</p> <pre><code>&lt;MandateDomainForGroupNamesInGroupsResponse&gt;false&lt;\n/MandateDomainForGroupNamesInGroupsResponse&gt;\n</code></pre> <p>Why?</p> <p>Enabling this property in the Groups endpoints prepends the \"PRIMARY/\" prefix to the role name (group name) that belongs to the PRIMARY user store. When it is set to 'false', the \"PRIMARY/\" prefix will not be prepended. For more details, see behavioral change # in the behavioral changes section given above.</p> </li> <li> <p>The following properties have been added under the <code>&lt;Server&gt;</code> tag.</p> <pre><code>&lt;!--This configuration is used to define the Service Provider\nname regex in DCR and IdentityApplicationManagementService--&gt;\n&lt;!--&lt;ServiceProviders&gt;--&gt;\n&lt;!--&lt;SPNameRegex&gt;^[a-zA-Z0-9._-]*$&lt;/SPNameRegex&gt;--&gt;\n&lt;!--&lt;/ServiceProviders&gt;--&gt;\n</code></pre> </li> <li> <p>The following properties have been added under the <code>&lt;OAuth&gt;</code> tag.</p> <pre><code>&lt;!-- If enabled, resident Idp entity id will be honoured as the\nissuer location in OpenId Connect Discovery --&gt;\n&lt;UseEntityIdAsIssuerInOidcDiscovery&gt;true&lt;\n/UseEntityIdAsIssuerInOidcDiscovery&gt;\n</code></pre> </li> <li> <p>The UMA grant type has been added as a supported grant type under the <code>&lt;SupportedGrantTypes&gt;</code> tag.</p> <pre><code>&lt;!-- Supported versions: IS 5.7.0 onwards.--&gt;\n&lt;SupportedGrantType&gt;\n&lt;GrantTypeName&gt;urn:ietf:params:oauth:grant-type:uma-ticket&lt;\n/GrantTypeName&gt;\n&lt;GrantTypeHandlerImplClass&gt;org.wso2.carbon.identity.oauth.\numa.grant.UMA2GrantHandler&lt;/GrantTypeHandlerImplClass&gt;\n&lt;GrantTypeValidatorImplClass&gt;org.wso2.carbon.identity.oauth.\numa.grant.GrantValidator&lt;/GrantTypeValidatorImplClass&gt;\n&lt;/SupportedGrantType&gt;\n</code></pre> </li> <li> <p>The following properties have been added under the <code>&lt;OAuth&gt;</code> tag.</p> <pre><code>&lt;!-- Configurations for JWT bearer grant. Supported versions: IS\n5.8.0 onwards. --&gt;\n&lt;JWTGrant&gt;\n&lt;!-- Validate issued at time (iat) of JWT token. The\nvalidity can be set using 'IATValidity' configuration.\nDefault value is 'true'.\n--&gt;\n&lt;EnableIATValidation&gt;true&lt;/EnableIATValidation&gt;\n&lt;!-- Reject the JWT if the iat of JWT is pass a certain time\nperiod. Time period is in minutes.\n'EnableIATValidation' configuration should be set\nto 'true' in order to make use of the validity\nperiod.\nDefault value is '30' minutes.\n--&gt;\n&lt;IATValidityPeriod&gt;30&lt;/IATValidityPeriod&gt;\n&lt;/JWTGrant&gt;\n</code></pre> </li> <li> <p>The following properties have been added under the <code>&lt;OpenIDConnect&gt;</code> tag.</p> <pre><code>&lt;!-- Add tenant domain to 'realm' claim of ID Token--&gt;\n&lt;AddTenantDomainToIdToken&gt;false&lt;/AddTenantDomainToIdToken&gt;\n&lt;!-- Add userstore domain to 'realm' claim of ID Token--&gt;\n&lt;AddUserstoreDomainToIdToken&gt;false&lt;/AddUserstoreDomainToIdToken&gt;\n</code></pre> </li> <li> <p>The following properties have been added under the <code>&lt;OAuth&gt;</code> tag.</p> <pre><code>&lt;!--Configuration provides the ability to renew the access token\nand the refresh token(where applicable) per each token request\nand revoke previously available active token for a matching\nclientid, user and scopes combination.\nNot applicable for refresh token grant type and when when self-\ncontained access tokens are used.\nDefault value : false\nSupported versions : IS 5.8.0 onwards --&gt;\n&lt;!--&lt;RenewTokenPerRequest&gt;true&lt;/RenewTokenPerRequest&gt;--&gt;\n\n&lt;!--By enabling this property, in a logout request if the opbs\ncookie or a valid session does not exist instead of showing the\ninvalid request error page the user will be redirected to the\nsuccessfully logged out page of the IS or if a valid\nid_token_hint and a valid post_logout_redirect_uri is available\nuser will be redirected to the post_logout_redirect_uri--&gt;\n&lt;HandleAlreadyLoggedOutSessionsGracefully&gt;false&lt;\n/HandleAlreadyLoggedOutSessionsGracefully&gt;\n</code></pre> </li> <li> <p>The following properties have been added under the <code>&lt;SSOService&gt;</code> tag.</p> <pre><code>&lt;ArtifactResolutionEndpoint&gt;${carbon.protocol}://${carbon.\nhost}:${carbon.management.port}/samlartresolve&lt;\n/ArtifactResolutionEndpoint&gt;\n&lt;SAMLECPEndpoint&gt;${carbon.protocol}://${carbon.host}:${carbon.\nmanagement.port}/samlecp&lt;/SAMLECPEndpoint&gt;\n</code></pre> <p>Why?</p> <p>These properties allow adding the Artifact URL as a Resident IDP property in the WSO2 IS management console.</p> </li> <li> <p>The following properties have been added under the <code>&lt;SCIM2&gt;</code> tag.</p> <pre><code>&lt;!--&lt;ComplexMultiValuedAttributeSupportEnabled&gt;true&lt;\n/ComplexMultiValuedAttributeSupportEnabled&gt;--&gt;\n&lt;!--&lt;EnableFilteringEnhancements&gt;true&lt;\n/EnableFilteringEnhancements&gt;--&gt;\n</code></pre> <p>Why?</p> <p>The  property was introduced for the purpose of applying filtering enhancements for SCIM2 filter results. Enabling this ensures that the Eq filter strictly checks for a string match (in this case cross user store search should not be performed). This configuration also enforces consistency on the filtered attribute formats in the response when filtering is done via different endpoints. e.g. Users and Groups endpoints. <li> <p>The following properties have been added under the <code>&lt;Recovery&gt;</code> tag.</p> <pre><code>&lt;ReCaptcha&gt;\n&lt;Password&gt;\n&lt;Enable&gt;false&lt;/Enable&gt;\n&lt;/Password&gt;\n&lt;Username&gt;\n&lt;Enable&gt;false&lt;/Enable&gt;\n&lt;/Username&gt;\n&lt;/ReCaptcha&gt;\n&lt;CallbackRegex&gt;${carbon.protocol}://${carbon.host}:${carbon.\nmanagement.port}/authenticationendpoint/login.do&lt;/CallbackRegex&gt;\n</code></pre> <p>Why?</p> <p>This configuration block is used to enable ReCaptcha verification for password recovery and username recovery.</p> </li> <li> <p>The following property have been added under the <code>&lt;SelfRegistration&gt;</code> tag.</p> <pre><code>&lt;CallbackRegex&gt;${carbon.protocol}://${carbon.host}:${carbon.\nmanagement.port}/authenticationendpoint/login.do&lt;/CallbackRegex&gt;\n</code></pre> <p>Why?</p> <p>This property enables configuring a regex pattern for the callback URLs of the account recovery and self registration APIs. The callbackURL included in the requests is then validated with the configured regex pattern.</p> </li> <li> <p>The following new event listener has been added under the <code>&lt;EventListeners&gt;</code> tag.</p> <pre><code>&lt;EventListener type=\"org.wso2.carbon.identity.core.handler.\nAbstractIdentityHandler\"\nname=\"org.wso2.carbon.identity.data.\npublisher.oauth.listener.OAuthTokenIssuanceLogPublisher\"\norderId=\"12\" enable=\"false\"&gt;\n&lt;Property name=\"Log.Token\"&gt;false&lt;/Property&gt;\n&lt;/EventListener&gt;\n\n&lt;EventListener type=\"org.wso2.carbon.user.core.listener.\nUserOperationEventListener\"\nname=\"org.wso2.carbon.identity.mgt.\nlistener.UserSessionTerminationListener\"\norderId=\"85\" enable=\"true\"/&gt;\n\n&lt;EventListener type=\"org.wso2.carbon.user.core.listener.\nUserOperationEventListener\"\nname=\"org.wso2.carbon.user.mgt.listeners.\nUserClaimsAuditLogger\"\norderId=\"9\" enable=\"false\"/&gt;\n</code></pre> <p>Why?</p> <p>AbstractIdentityHandler - Enabling this listener logs the audit data for OAuth token issuance and token introspection. Adding this property allows you to disable logging, else if this property is not present in the configuration file, logging is enabled by default. For more information about auditing, see OAuth Transaction Logs.</p> <ul> <li> <p>UserOperationEventListener - This event listener is used to support session termination at the point renaming the username.</p> </li> <li> <p>UserOperationEventListener - This event listener allows adding claims to the audit logs.</p> </li> </ul> </li> <li> <p>The following caches have been added under the <code>&lt;CacheManager name=\" IdentityApplicationManagementCacheManager\"&gt;</code> tag.</p> <pre><code>&lt;Cache name=\"JWKSCache\" enable=\"true\" timeout=\"300\" capacity=\"\n5000\" isDistributed=\"false\"/&gt;\n&lt;Cache name=\"ServiceProviderCache.ID\" enable=\"true\" timeout=\"\n900\" capacity=\"5000\" isDistributed=\"false\"/&gt;\n&lt;Cache name=\"ServiceProvideCache.InboundAuth\" enable=\"true\"\ntimeout=\"900\" capacity=\"5000\" isDistributed=\"false\"/&gt;\n</code></pre> <p>Why?</p> <p>JKWSCache - This property has been added to support JWKS Endpoint Cache invalidation.</p> <p>ServiceProviderCache.ID and ServiceProvideCache.InboundAuthKey - These two properties have been added in order to cache the service provider against the ID and inboundAuth. If these new properties is not present in the configuration file, the configuration value of the ServiceProviderCache is applied for these caches.</p> </li> <li> <p>The following resources have been added under the <code>&lt;ResourceAccessControl&gt;</code> tag.</p> <pre><code>&lt;Resource context=\"(.*)/api/identity/config-mgt/v1.0/search(.*)\"\nsecured=\"true\" http-method=\"GET\"&gt;\n&lt;Permissions&gt;/permission/admin/manage/identity/configmgt\n/list&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/config-mgt/v1.0/resource-\ntype\" secured=\"true\" http-method=\"POST\"&gt;\n&lt;Permissions&gt;/permission/admin/manage/identity/configmgt/add&lt;\n/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/config-mgt/v1.0/resource-\ntype\" secured=\"true\" http-method=\"PUT\"&gt;\n&lt;Permissions&gt;/permission/admin/manage/identity/configmgt\n/update&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/config-mgt/v1.0/resource-\ntype/(.*)\" secured=\"true\" http-method=\"GET\"/&gt;\n&lt;Resource context=\"(.*)/api/identity/config-mgt/v1.0/resource-\ntype/(.*)\" secured=\"true\" http-method=\"DELETE\"&gt;\n&lt;Permissions&gt;/permission/admin/manage/identity/configmgt\n/delete&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/config-mgt/v1.0/resource/(.\n*)\" secured=\"true\" http-method=\"POST\"&gt;\n&lt;Permissions&gt;/permission/admin/manage/identity/configmgt/add&lt;\n/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/config-mgt/v1.0/resource/(.\n*)\" secured=\"true\" http-method=\"PUT\"&gt;\n&lt;Permissions&gt;/permission/admin/manage/identity/configmgt\n/update&lt;/Permissions&gt;\n\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/config-mgt/v1.0/resource/(.\n*)/(.*)\" secured=\"true\" http-method=\"GET\"/&gt;\n&lt;Resource context=\"(.*)/api/identity/config-mgt/v1.0/resource/(.\n*)/(.*)\" secured=\"true\" http-method=\"DELETE\"&gt;\n&lt;Permissions&gt;/permission/admin/manage/identity/configmgt\n/delete&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/config-mgt/v1.0/resource/(.\n*)/(.*)\" secured=\"true\" http-method=\"POST\"&gt;\n&lt;Permissions&gt;/permission/admin/manage/identity/configmgt/add&lt;\n/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/config-mgt/v1.0/resource/(.\n*)/(.*)\" secured=\"true\" http-method=\"PUT\"&gt;\n&lt;Permissions&gt;/permission/admin/manage/identity/configmgt\n/update&lt;/Permissions&gt;\n&lt;/Resource&gt;\n&lt;Resource context=\"(.*)/api/identity/config-mgt/v1.0/resource/(.\n*)/(.*)/(.*)\" secured=\"true\" http-method=\"GET\"/&gt;\n&lt;Resource context=\"(.*)/api/identity/config-mgt/v1.0/resource/(.\n*)/(.*)/(.*)\" secured=\"true\" http-method=\"DELETE\"&gt;\n&lt;Permissions&gt;/permission/admin/manage/identity/configmgt\n/delete&lt;/Permissions&gt;\n&lt;/Resource&gt;\n</code></pre> <p>Why?</p> <p>These resources control access to the configuration management resources in WSO2 IS.</p> </li> <li> <p>The resource context /scim2/ResourceType to /scim2/ResourceTypes found under the <code>&lt;ResourceAccessControl&gt;</code> tag has been modified as shown below.</p> <pre><code>&lt;Resource context=\"/scim2/ResourceTypes\" secured=\"false\" http-\nmethod=\"all\"&gt;\n</code></pre> <p>Why?</p> <p>This change is done in order to comply with the SCIM2 specification.</p> </li> <li> <p>The following resource found under the <code>&lt;ResourceAccessControl&gt;</code> tag has been removed.</p> <pre><code>&lt;Resource context=\"(.*)/api/identity/auth/(.*)\" secured=\"true\"\nhttp-method=\"all\"/&gt;\n</code></pre> <p>Why?</p> <p>This change has been made in order to remove protection for the /api/identity/auth /v1.2/authenticate API. This is because the API itself authenticates the user.</p> </li> <li> <p>The following resources have been added under the <code>&lt;ResourceAccessControl&gt;</code> tag.</p> <pre><code>&lt;Resource context=\"(.*)/api/identity/auth/v1.2/data(.*)\"\nsecured=\"true\" http-method=\"all\"/&gt;\n&lt;Resource context=\"(.*)/api/identity/auth/v1.2/context(.*)\"\nsecured=\"true\" http-method=\"all\"/&gt;\n&lt;Resource context=\"(.*)/api/identity/template/mgt/v1.0.0/(.*)\"\nsecured=\"true\" http-method=\"all\"/&gt;\n&lt;Resource context=\"(.*)/api/identity/user/v1.0/update-username(.\n*)\" secured=\"true\" http-method=\"PUT\"&gt;\n&lt;Permissions&gt;/permission/admin/manage/identity/usermgt\n/update&lt;/Permissions&gt;\n&lt;/Resource&gt;\n</code></pre> <p>Why?</p> <p>These resources have been added to secure the update-username API.</p> </li> <li> <p>The following properties have been added under the <code>&lt;Server&gt;</code> tag.</p> <pre><code>&lt;!--Intermediate certificate validation for certificate based\nrequests--&gt;\n&lt;IntermediateCertValidation enable=\"false\"&gt;\n&lt;IntermediateCerts&gt;\n&lt;!--Add intermediate certificate CN. Multiple &lt;CertCN&gt;\nelements can be used for multiple certificates.--&gt;\n&lt;CertCN&gt;localhost&lt;/CertCN&gt;\n&lt;/IntermediateCerts&gt;\n&lt;ExemptContext&gt;\n&lt;!--Add exemptable context paths. Multiple &lt;Context&gt;\nelements can be used for multiple contexts.--&gt;\n&lt;Context&gt;scim2&lt;/Context&gt;\n&lt;/ExemptContext&gt;\n&lt;/IntermediateCertValidation&gt;\n&lt;!--This is the separator that use to separate multiple roles in\nthe role claim value coming from IDP side--&gt;\n&lt;FederatedIDPRoleClaimValueAttributeSeparator&gt;,&lt;\n/FederatedIDPRoleClaimValueAttributeSeparator&gt;\n&lt;!--This configuration is used for X509 Certificate based\nauthentication. --&gt;\n&lt;!--&lt;X509&gt;--&gt;\n&lt;!--During ssl termination at LB, the X509 certificate is passed\nover the HTTP header. This configuration\nprovides the facility to configure HTTP request header\nname which is configured at LB. --&gt;\n&lt;!--&lt;X509RequestHeaderName&gt;X-SSL-CERT&lt;/X509RequestHeaderName&gt;--&gt;\n&lt;!--&lt;/X509&gt;--&gt;\n&lt;!-- This configuration specifies the claims that should be\nlogged to \"audit.log\" upon changes. --&gt;\n&lt;!--&lt;LoggableUserClaims&gt;--&gt;\n&lt;!--&lt;LoggableUserClaim&gt;http://wso2.org/claims/identity\n/accountLocked&lt;/LoggableUserClaim&gt;--&gt;\n&lt;!--&lt;LoggableUserClaim&gt;http://wso2.org/claims/role&lt;\n/LoggableUserClaim&gt;--&gt;\n&lt;!--&lt;/LoggableUserClaims&gt;--&gt;\n&lt;!--Configuration Store properties--&gt;\n&lt;ConfigurationStore&gt;\n&lt;!--Set an upper limit to the database call queries.\nConfiguration store uses dynamic query generation,\nspecially for searching resources. This property will\nprevent any unwanted errors due to too large queries.\nDefault value is the maximum packet size for MySQL 5.7\nin bytes.--&gt;\n&lt;MaximumQueryLength&gt;4194304&lt;/MaximumQueryLength&gt;\n&lt;/ConfigurationStore&gt;\n</code></pre> </li>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.7.0%20to%205.8.0/#jaasconf-file","title":"<code>jaas.conf</code> file","text":"<p>Stored in the /repository /conf/identity directory. <p>The value of the following property value has been corrected from 'tfalse' to 'false'.</p> <pre><code>useKeyTab=false\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.7.0%20to%205.8.0/#webapp-classloading-environmentsxml-file","title":"<code>Webapp-classloading-environments.xml</code> file","text":"<p>Stored in the  /repository /conf/ directory. <p>The following ExclusiveEnvironment has been added under the <code>&lt;Classloading&gt;</code> tag.</p> <pre><code>&lt;ExclusiveEnvironments&gt;\n&lt;ExclusiveEnvironment&gt;\n&lt;Name&gt;CXF3&lt;/Name&gt;\n&lt;Classpath&gt;${carbon.home}/lib/runtimes/cxf3/*.\njar;${carbon.home}/lib/runtimes/cxf3/&lt;/Classpath&gt;\n&lt;/ExclusiveEnvironment&gt;\n&lt;/ExclusiveEnvironments&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.7.0%20to%205.8.0/#carbonxml-file_1","title":"<code>carbon.xml</code> file","text":"<p>Stored in the /repository /conf directory. <ul> <li> <p>The following properties related to the tenant deletion feature have been added under the <code>&lt;Server&gt; &lt;Tenant&gt;</code> tag.</p> <pre><code>&lt;!-- Flag to enable or disable tenant deletion. By default\ntenant deletion is enabled--&gt;\n&lt;TenantDelete&gt;true&lt;/TenantDelete&gt;\n&lt;!-- Configurations related to listener invocation by tenant\nadmin service--&gt;\n&lt;ListenerInvocationPolicy&gt;\n&lt;!-- Flag to enable or disable listener invocation on tenant\ndelete. This is disabled by default--&gt;\n&lt;InvokeOnDelete&gt;false&lt;/InvokeOnDelete&gt;\n&lt;/ListenerInvocationPolicy&gt;\n</code></pre> </li> <li> <p>The following property has been added under the  tag. <pre><code>&lt;!--EnablePasswordTrim&gt;false&lt;/EnablePasswordTrim--&gt;\n</code></pre> <li> <p>The following property has been added.</p> <pre><code>&lt;ForceLocalCache&gt;true&lt;/ForceLocalCache&gt;\n</code></pre> <p>Why?</p> <p>Enabling this property forces all the caches to behave as local caches. It is required to enable this in order to have cache invalidation in between the IS nodes in a clustered enviornment. For more details, see behavioral change #5 in the behavioral changes section given above.</p> </li>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.7.0%20to%205.8.0/#claim-configxml-file","title":"<code>claim-config.xml</code> file","text":"<p>Stored in the  /repository /conf directory. <ul> <li> <p>The AttributeID of the http://wso2.org/claims/resourceType claim has been modified to \"resourceType\".</p> <pre><code>&lt;AttributeID&gt;resourceType&lt;/AttributeID&gt;\n</code></pre> </li> <li> <p>The RegEx of the http://wso2.org/claims/phoneNumbers claim has been modified as follows.</p> <pre><code>&lt;RegEx&gt;^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d\n{4})(?: *x(\\d+))?\\s*$&lt;/RegEx&gt;\n</code></pre> </li> <li> <p>The RegEx of the urn:scim:schemas:core:1.0:phoneNumbers claim has been modified as follows.</p> <pre><code>&lt;RegEx&gt;^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d\n{4})(?: *x(\\d+))?\\s*$&lt;/RegEx&gt;\n</code></pre> </li> <li> <p>The AttributeID of the claim urn:ietf:params:scim:schemas:core:2.0:meta. resourceType claim has been modified to \"resourceType\" instead of \"userType\".</p> <pre><code>&lt;AttributeID&gt;resourceType&lt;/AttributeID&gt;\n</code></pre> <p>Why?</p> <p>The value \"Ref\" is reserved in open LDAPs for referrals. Therefore, this attributeID was modified to avoid the errors when using Active Directory open LDAPs.</p> </li> <li> <p>The RegEx of the urn:ietf:params:scim:schemas:core:2.0:User: phoneNumbers claim has been modified as follows.</p> <pre><code>&lt;RegEx&gt;^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d\n{4})(?: *x(\\d+))?\\s*$&lt;/RegEx&gt;\n</code></pre> </li> <li> <p>The Regex of the urn:ietf:params:scim:schemas:core:2.0:User: phoneNumbers.mobile claim has been modified as follows.</p> <pre><code>&lt;RegEx&gt;^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d\n{4})(?: *x(\\d+))?\\s*$&lt;/RegEx&gt;\n</code></pre> </li> <li> <p>The RegEx of the urn:ietf:params:scim:schemas:core:2.0:User: phoneNumbers.home claim has been modified as follows.</p> <pre><code>&lt;RegEx&gt;^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d\n{4})(?: *x(\\d+))?\\s*$&lt;/RegEx&gt;\n</code></pre> </li> <li> <p>The RegEx of the urn:ietf:params:scim:schemas:core:2.0:User: phoneNumbers.work claim has been modified as follows.</p> <pre><code>&lt;RegEx&gt;^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d\n{4})(?: *x(\\d+))?\\s*$&lt;/RegEx&gt;\n</code></pre> </li> <li> <p>The RegEx of the urn:ietf:params:scim:schemas:core:2.0:User: phoneNumbers.other claim has been modified as follows.</p> <pre><code>&lt;RegEx&gt;^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d\n{4})(?: *x(\\d+))?\\s*$&lt;/RegEx&gt;\n</code></pre> <p>Why?</p> <p>The default regular expression values for phone numbers were modified in the claim-config.xml file in order to recognize US and Canadian numbers with the extension code as well.</p> </li> </ul>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.7.0%20to%205.8.0/#log4jproperties-file","title":"<code>log4j.properties</code> file","text":"<p>Stored in the /repository /conf directory. <p>The following properties have been added.</p> <pre><code>log4j.logger.TRANSACTION_LOGGER=INFO, TRANSACTION_LOGGER\n\nlog4j.appender.TRANSACTION_LOGGER=org.apache.log4j.FileAppender\nlog4j.appender.TRANSACTION_LOGGER.File=${carbon.home}/repository\n/logs/transaction.log\nlog4j.appender.TRANSACTION_LOGGER.Append=true\nlog4j.appender.TRANSACTION_LOGGER.layout=org.apache.log4j.\nPatternLayout\nlog4j.appender.TRANSACTION_LOGGER.layout.ConversionPattern=[%d]\n\n- %m %n\nlog4j.appender.TRANSACTION_LOGGER.threshold=INFO\nlog4j.additivity.TRANSACTION_LOGGER=false\n\n# Appender config to put correlation Log.\nlog4j.logger.correlation=INFO, CORRELATION\nlog4j.additivity.correlation=false\nlog4j.appender.CORRELATION=org.apache.log4j.RollingFileAppender\nlog4j.appender.CORRELATION.File=${carbon.home}/repository/logs\n/${instance.log}/correlation.log\nlog4j.appender.CORRELATION.MaxFileSize=10MB\nlog4j.appender.CORRELATION.layout=org.apache.log4j.PatternLayout\nlog4j.appender.CORRELATION.Threshold=INFO\nlog4j.appender.CORRELATION.layout.ConversionPattern=%d{yyyy-MM-\ndd HH:mm:ss,SSS}|%X{Correlation-ID}|%t|%m%n\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.7.0%20to%205.8.0/#user-mgtxml-file","title":"<code>user-mgt.xml</code> file","text":"<p>Stored in the /repository /conf directory. <ul> <li> <p>The following properties have been added under the <code>&lt;UserManager&gt; &lt;Realm&gt; &lt;Configuration&gt;</code> tag.</p> <pre><code>&lt;!-- Enable username claim retrieve from the UM_USER_NAME in\nJDBC datasources --&gt;\n&lt;OverrideUsernameClaimFromInternalUsername&gt;true&lt;\n/OverrideUsernameClaimFromInternalUsername\n</code></pre> </li> <li> <p>The following property has been under under the JDBCUserStoreManager configuration block.</p> <pre><code>&lt;Property name=\"LeadingOrTrailingSpaceAllowedInUserName\"&gt;false&lt;\n/Property&gt;\n</code></pre> <p>The value of the <code>&lt;UserNameListFilter&gt;</code> property under the ReadOnlyLDAPUserStoreManager configuration block has been modified to the value given below.</p> <pre><code>(&amp;amp;(objectClass=person)(!(sn=Service)))\n</code></pre> <p>The value of the <code>&lt;UserNameListFilter&gt;</code> property under the ActiveDirectoryUser StoreManager and ReadWriteLDAPUserStoreManager configuration blocks has been modified as follows.</p> <pre><code>(&amp;amp;(objectClass=user)(!(sn=Service)))\n</code></pre> <p>The following property has been added under the ActiveDirectoryUserStoreManag er and the ReadWriteLDAPUserStoreManager configuration blocks.</p> <pre><code>&lt;Property name=\"StartTLSEnabled\"&gt;false&lt;/Property&gt;\n</code></pre> </li> </ul>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.8.0%20to%205.9.0/","title":"What Has Changed","text":"<p>WSO2 Identity Server 5.9.0 brings a range of new features and major improvements. In IS 5.9.0, the following  aspects have been changed compared to the previous IS versions.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.8.0%20to%205.9.0/#changes-to-resource-access-control","title":"Changes to Resource Access Control","text":"<p>WSO2 Identity Server maintains a set of resources that requires user authentication.  In previous versions, if a resource is not mentioned in the configuration, it was  allowed to be accessed without user authentication. In WSO2 Identity Server 5.9.0,  the configuration is changed to deny any request to a resource that is not  mentioned in the configuration. In addition, the resources which do not require any user authentication,  has to be explicitly mentioned in the <code>deployment.toml</code> file in the <code>&lt;IS_HOME&gt;/repository/conf/</code> directory.</p> <p>Resource definition order</p> <p>The order in which the resource are defined is important for permission that are defined for resources under <code>ResourceAccessControl</code>. The entries at the top get precedence over the entries at the bottom.</p> <p>As all new resources and permissions are added to the top, they get precedence over the already defined resources/permissions. A new resource can be added to the resource access control using the following config. You can add the config to the <code>deployment.toml</code> file in the <code>&lt;IS_HOME&gt;/repository/conf/</code> directory.</p> <pre><code>[[resource.access_control]]\ncontext=\"&lt;resource&gt;\"\nsecure=\"&lt;true/false&gt;\"\nhttp_method=\"&lt;method&gt;\"\npermissions=[\"&lt;permission&gt;\"]\n</code></pre> <p>Note </p> <p>To revert back to the previous behaviour, add the following configuration to the <code>deployment.toml</code> file in the <code>&lt;IS_HOME&gt;/repository/conf/</code> directory.</p> <pre><code>[resource_access_control]\ndefault_access = \"allow\"\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.8.0%20to%205.9.0/#log-printing","title":"Log printing","text":"<p>WSO2 Identity Server has a log printing mechanism. With WSO2 Identity Server 5.9.0, a correlation Id is  added to all the places where the logs are printed. </p> <p>Correlation Id</p> <p>The correlation Id is used to correlate the method calls made for a request. The correlation Id is printed after the timestamp.</p> <p><code>tab=\"Sample log\" [2019-09-10 20:36:09,181] [16667e80-6470-425b-b63a-253f096c7e69]  INFO {org.wso2.carbon.core.services.util.CarbonAuthenticationUtil} - 'admin@wso2.com [1]logged in at [2019-09-10 20:36:09,180+0530]</code></p> <p>Note</p> <p>To get the previous format in error logs, change the the <code>log4j2.properties</code> file in the <code>&lt;IS-Home&gt;/repository/conf</code> directory as shown below.</p> New Format Old Format <code>appender.CARBON_CONSOLE.layout.pattern = [%d] [%X <code> appender.CARBON_CONSOLE.layout.pattern = [%d] %5p [%c] - %m%ex%n </code> <code>appender.CARBON_LOGFILE.layout.pattern = TID: [%tenantId] [%appName] [%d] [%X <code> appender.CARBON_LOGFILE.layout.pattern = TID: [%tenantId] [%appName] [%d] %5p [%c] - %m%ex%n </code> <code>appender.AUDIT_LOGFILE.layout.pattern = TID: [%tenantId] [%d] [%X <code> appender.AUDIT_LOGFILE.layout.pattern = TID: [%tenantId] [%d] %5p [%c] - %m%ex%n </code>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.8.0%20to%205.9.0/#storing-the-username-in-consent-management","title":"Storing the username in consent management","text":"<p>WSO2 Identity Server supports obtaining user consent at user authentication. Consent management  in previous Identity Server versions, enforced case-sensitive usernames. But, Identity  Server 5.9.0 supports case-insensitive usernames by default. </p> <p>Note</p> <p>If you are using a case-sensitive username configuration, add the following configuration to the <code>deployment.toml</code> in file in <code>&lt;IS_HOME&gt;/repository/conf/</code> directory.</p> <pre><code>[user_store]\nuse_case_sensitive_username_for_cache_keys = true\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.8.0%20to%205.9.0/#changes-to-the-oidc-discovery-response","title":"Changes to the OIDC discovery response","text":"<p>WSO2 Identity Server has an OpendID discovery service that can be called by using  the <code>https://{server-ip}/oauth2/oidcdiscovery/.well-known/openid-configuration</code> endpoint. </p> <p>In previous versions, the response values of the <code>request_parameter_supported</code> and <code>claims_parameter_supported</code>  properties were as follows.</p> <pre><code>\"request_parameter_supported\": \"true\",\n\"claims_parameter_supported\": \"true\",\n</code></pre> <p>In WSO2 Identity Server 5.9.0 the values for above properties have been changed to <code>boolean</code> instead of <code>string</code>.</p> <pre><code>\"request_parameter_supported\": true,\n\"claims_parameter_supported\": true,\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.8.0%20to%205.9.0/#redirecting-to-callbackurl-in-oauth-flow-errors","title":"Redirecting to callbackUrl in OAuth flow errors","text":"<p>In previous Identity Server versions, when an error occurs while using the OAuth 2.0 flow, the  user was redirected to an error page at the <code>authenticationendpoint/oauth2_error.do</code> URL. According to the  specification, unless the provided <code>redirect URI</code> and <code>client Id</code> are invalid, the user should be redirected  to the provided redirect URI.  </p> <p>For WSO2 Identity Server 5.9.0 to be specification-compliant, unless the provided <code>redirect URI</code> or  <code>client Id</code> are invalid, the user will be redirected to the given redirect URI with the <code>error</code>, <code>error_description</code>,  and <code>state</code> parameters set to the query component of the redirection URI.</p> <p>Note</p> <p>To achieve the previous behaviour, add the following configuration to the <code>deployment.toml</code> in <code>&lt;IS_HOME&gt;/repository/conf/</code> directory.</p> <pre><code>[oauth]\nredirect_to_idp_error_page_on_error=true\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.8.0%20to%205.9.0/#redirecting-to-postlogouturi-in-user-consent-denial-for-oidc-logout","title":"Redirecting to PostLogoutUri in user consent denial for OIDC logout","text":"<p>When a user rejects the OIDC logout consent, in earlier versions of the WSO2 Identity Server the user was redirected to  the <code>oauth2_error.do</code> page with \u201caccess_denied - End User denied the logout request\u201d error message. Custom  parameters such as \u201coauthErrorCode\u201d and \u201coauthErrorMsg\u201d were used to explain the issue to the user.</p> <p>In WSO2 Identity Server 5.9.0, the user will be redirected to <code>postLogoutUri</code> with the parameters <code>error</code>  and  <code>error_description</code> which are defined in the OIDC specification. </p> <p>Note</p> <p>To achieve previous behaviour, add the following configuration to the <code>deployment.toml</code> in <code>&lt;IS_HOME&gt;/repository/ conf/</code> directory.</p> <pre><code>[oauth.oidc]\nredirect_to_post_logout_uri_on_consent_denial = false\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.8.0%20to%205.9.0/#scope-validation-for-token-issuing","title":"Scope validation for token issuing","text":"<p>WSO2 Identity Server supports scope validation when issuing tokens for  OAuth Service Providers. </p> <p>In previous Identity Server versions, this capability was not available when issuing tokens for  Authorization Code and Implicit grant types. Identity Server 5.9.0 supports  these by default when using a scope validator.</p> <p>Note</p> <p>To achieve the previous behaviour, add the following configuration to the <code>deployment.toml</code> in <code>&lt;IS_HOME&gt;/repository/conf/</code> directory.</p> <pre><code>[oauth.scope_validator.authz_implicit]\nenable = false\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.8.0%20to%205.9.0/#authentication-endpoint-and-account-recovery-endpoint","title":"Authentication Endpoint and Account Recovery Endpoint","text":"<p>In earlier versions of the WSO2 Identity Server the <code>authenticationendpoint</code> and the  <code>accountrecoveryendpoint</code> was packed in as <code>war</code> files in the <code>&lt;IS_HOME&gt;/repository/  deployment/server/webapps/</code> directory. In WSO2 Identity Server 5.9.0 the exploded war files are packed.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.8.0%20to%205.9.0/#log4j-upgrade","title":"Log4j upgrade","text":"<p>WSO2 Identity Server 5.9.0 has switched from log4j to log4j2. You will notice that there is a  <code>log4j2.properties</code> file in the <code>&lt;IS_HOME&gt;/repository/conf/</code> directory instead of the  <code>log4j.properties</code> file.</p> <p>Warning</p> <p>Taking the <code>log4j.properties</code> file from your old WSO2 Identity Server and adding it to WSO2 Identity Server 5.9.0 will no longer work. Refer the Migrating to log4j2 document to see how to add a log appender or a logger to the <code>log4j2.properties</code> file.</p> <p>Migrating to JDK 11</p> <p>If you are migrating to JDK 11, you need to change the signature of the adaptive authentication script method since the improvements done for the Nashorn Engine to support ES6 in JDK 9 made the following method signature unsupported.</p> <ul> <li>Unsupported method signature*    <pre><code>function getAge(birthDate) {\n...   }\n</code></pre></li> <li>Supported method signature**    <pre><code>var getAge = function (birthDate) {\n...\n};\n</code></pre></li> </ul>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.8.0%20to%205.9.0/#handling-role-based-or-xacml-based-scope-validation-for-implicit-and-authorization-code-grants","title":"Handling Role-based or XACML-based Scope Validation for Implicit and Authorization Code Grants","text":"<p>Scope validation has been enforced for authorization code grant and implicit grants. </p> <p>Note</p> <p>If you have implemented any apps that work without scope validation and you wish to disable the behaviour, add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[oauth]\nscope_validator.authz_implicit.enable = false\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.8.0%20to%205.9.0/#multi-factor-authentication-using-fido","title":"Multi factor Authentication using FIDO","text":"<p>From IS 5.9.0 onwards, WebAuthn API is being used instead of U2F API. If you have used FIDO previously, your devices must be re-enrolled.</p> <p>Warning</p> <p>If you choose to keep using the previous behavior which based on U2F API you need to use an old version of chrome where U2F API was supported so you can enroll new devices and you will also miss the new FIDO features which introduced in IS 5.9.0 like FIDO REST API</p> <p>Note</p> <p>To achieve the previous behaviour, add the following configuration to the <code>deployment.toml</code> in <code>&lt;IS_HOME&gt;/repository/conf/</code> directory. <pre><code>[fido.webauthn]\nenable = false\n</code></pre></p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.8.0%20to%205.9.0/#h2-database-for-wso2_carbon_db-datasource","title":"H2 Database for WSO2_CARBON_DB datasource","text":"<p>From IS 5.9.0 onwards, the WSO2_CARBON_DB datasource will use the embedded H2 database and it is not configurable. The default WSO2_CARBON_DB datasource is only used in the local registry mount of the server. Therefore, in every IS version, it's recommended to use the embedded H2 database even in the production deployment. This recommendation is enforced with the new configuration model from IS 5.9.0 onwards. Note that you don't need to change the WSO2_CARBON_DB datasource in IS 5.9.0 and it will not be available in the <code>deployment.toml</code> file by default.</p> <p>There are two configurable datasources available in the default <code>deployment.toml</code> file as follows:</p> <p><pre><code>[database.identity_db]\ntype = \"h2\"\nurl = \"jdbc:h2:./repository/database/WSO2IDENTITY_DB;DB_CLOSE_ON_EXIT=FALSE;LOCK_TIMEOUT=60000\"\nusername = \"wso2carbon\"\npassword = \"wso2carbon\"\n\n[database.shared_db]\ntype = \"h2\"\nurl = \"jdbc:h2:./repository/database/WSO2SHARED_DB;DB_CLOSE_ON_EXIT=FALSE;LOCK_TIMEOUT=60000\"\nusername = \"wso2carbon\"\npassword = \"wso2carbon\"\n</code></pre> It is sufficient to change these two datasources without considering WSO2_CARBON_DB even for production deployments due to the reasons mentioned above.</p> <p>See the instructions on working with databases for details on changing datasource configurations.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.9.0%20to%205.10.0/","title":"What Has Changed","text":"<p>WSO2 Identity Server 5.10.0 brings a range of new features and major improvements. In IS 5.10.0 following aspects has  been changed compared to the previous IS versions.</p> <p>This page provides details about the behavioral changes from WSO2 Identity Server 5.9.0 to 5.10.0.</p> <p>If you are migrating from an older version of Identity Server</p> <p>In order to find the changes introduced in the previous versions please see the following documents:</p> <ul> <li>What Has Changed in IS 5.9.0</li> <li>Changes introduced in IS 5.8.0 and before can be found in the Migrating Configurations to IS 5.8.0 section of the Upgrading From an Older Version of WSO2 IS document.</li> </ul>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.9.0%20to%205.10.0/#handling-last-login-time-as-an-identity-claim","title":"Handling Last login Time as an Identity Claim","text":"<p>In the previous versions of WSO2 Identity Server, the Last login time claim (used in account suspension) has been handled  as a default claim. From IS 5.10.0 onwards it will be handled as an identity claim. </p> <p>Note</p> <p>If you want to have the previous behaviour please add the following property in the <code>deployment.toml</code> file located at <code>&lt;IS_HOME&gt;/repository/conf/</code> directory.</p> <pre><code>[identity_mgt_account_suspension]\nuse_identity_claims = false\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.9.0%20to%205.10.0/#scim-has-been-enabled-by-default","title":"SCIM has been enabled by default","text":"<p>From WSO2 Identity Server 5.10.0 onwards SCIM has been enabled by default for all the User Store Manager types. </p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.9.0%20to%205.10.0/#email-templates-has-been-changed-for-account-lock","title":"Email Templates has been changed for Account Lock","text":"<p>From IS 5.10.0 onwards, different set of email templates will be used for account lock feature to notify the below  events,</p> <ul> <li>Account locking by exceeding <code>Maximum Failed Login Attempts</code> - AccountLockFailedAttempt</li> <li>Account unlocking by exceeding <code>Account Unlock Time</code> - AccountUnlockTimeBased</li> <li>Account locking by administrator - AccountLockAdmin</li> <li>Account unlocking by administrator - AccountUnlockAdmin</li> </ul> <p>If the above new templates are not available in the server, then the old templates will be used to notify account lock  events which are AccountLock and AccountUnLock. </p> <p>If you wish to have the new templates, then please add the following templates at management by referring to the  instructions at Customizing AutomatedEmails. Consider that you should  migrate the customization done to the previous templates to the newly added templates. </p> <ul> <li> <p>Sample template for \"AccountLockFailedAttempt\"</p> <ul> <li>Email Template Type: AccountLockFailedAttempt</li> <li>Email Template Locale: English(United States)</li> <li>Email Content Type:text/html</li> <li>Email Template Subject: WSO2 - Your Account has been Locked</li> <li>Email Body:      <pre><code>&lt;![CDATA[\n&lt;table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\"bgcolor=\"#f0f0f0\"&gt;\n&lt;tr&gt;\n&lt;td style=\"padding: 30px 30px 20px 30px;\"&gt;\n    &lt;table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\" bgcolor=\"#ffffff\" style=\"max-width: 650px; margin: auto;\"&gt;\n        &lt;tr&gt;\n            &lt;td colspan=\"2\" align=\"center\" style=\"background-color: #333; padding: 40px;\"&gt;\n            &lt;a href=\"http://wso2.com/\" target=\"_blank\"&gt;&lt;img src=\"http://cdn.wso2.com/wso2/newsletter/images/nl-2017/wso2-logo-transparent.png\" border=\"0\"/&gt;&lt;/a&gt;\n            &lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td colspan=\"2\" align=\"center\" style=\"padding: 50px 50px 0px 50px;\"&gt;\n            &lt;h1 style=\"padding-right: 0em; margin: 0; line-height: 40px; font-weight:300; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #666; text-align: left; padding-bottom: 1em;\"&gt;\n                Account Locked\n            &lt;/h1&gt;\n            &lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td style=\"text-align: left; padding: 0px 50px;\" valign=\"top\"&gt;\n            &lt;p style=\"font-size: 18px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #666; text-align: left; padding-bottom: 3%;\"&gt;\n                Hi [user.claim.givenname],\n            &lt;/p&gt;\n            &lt;p style=\"font-size: 18px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #666; text-align: left; padding-bottom: 3%;\"&gt;\n                Please note that the account registered with the user name &lt;b&gt;[user-name]&lt;/b&gt; has been locked. Please try again later. &lt;br&gt;\n            &lt;/p&gt;\n            &lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td style=\"text-align: left; padding: 30px 50px 50px 50px\" valign=\"top\"&gt;\n            &lt;p style=\"font-size: 18px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #505050; text-align: left;\"&gt;\n                Thanks,&lt;br/&gt;WSO2 Identity Server Team\n            &lt;/p&gt;\n            &lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td colspan=\"2\" align=\"center\" style=\"padding: 20px 40px 40px 40px;\" bgcolor=\"#f0f0f0\"&gt;\n            &lt;p style=\"font-size: 12px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #777;\"&gt;\n                &amp;copy; 2018\n                &lt;a href=\"http://wso2.com/\" target=\"_blank\" style=\"color: #777; text-decoration: none\"&gt;WSO2&lt;/a&gt;\n                &lt;br&gt;\n                787 Castro Street, Mountain View, CA 94041.\n            &lt;/p&gt;\n            &lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/table&gt;\n&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/table&gt;\n]]\n</code></pre></li> <li>Email Footer: ---</li> </ul> </li> <li> <p>Sample template for \"AccountUnlockTimeBased\"</p> <ul> <li>Email Template Type: AccountUnlockTimeBased</li> <li>Email Template Locale: English(United States)</li> <li>Email Content Type:text/html</li> <li>Email Template Subject: WSO2 - Your Account has been Unlocked</li> <li> <p>Email Body: </p> <p><pre><code>&lt;![CDATA[&lt;table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\"bgcolor=\"#f0f0f0\"&gt;\n    &lt;tr&gt;\n    &lt;td style=\"padding: 30px 30px 20px 30px;\"&gt;\n        &lt;table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\" bgcolor=\"#ffffff\" style=\"max-width: 650px; margin: auto;\"&gt;\n        &lt;tr&gt;\n            &lt;td colspan=\"2\" align=\"center\" style=\"background-color: #333; padding: 40px;\"&gt;\n                &lt;a href=\"http://wso2.com/\" target=\"_blank\"&gt;&lt;img src=\"http://cdn.wso2.com/wso2/newsletter/images/nl-2017/wso2-logo-transparent.png\" border=\"0\" /&gt;&lt;/a&gt;\n            &lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td colspan=\"2\" align=\"center\" style=\"padding: 50px 50px 0px 50px;\"&gt;\n                &lt;h1 style=\"padding-right: 0em; margin: 0; line-height: 40px; font-weight:300; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #666; text-align: left; padding-bottom: 1em;\"&gt;\n                    Account Unlocked\n                &lt;/h1&gt;\n            &lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td style=\"text-align: left; padding: 0px 50px;\" valign=\"top\"&gt;\n                &lt;p style=\"font-size: 18px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #666; text-align: left; padding-bottom: 3%;\"&gt;\n                    Hi [user.claim.givenname]\n                &lt;/p&gt;\n                &lt;p style=\"font-size: 18px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #666; text-align: left; padding-bottom: 3%;\"&gt;\n                    Please note that the account registered with the user name &lt;b&gt;[user-name]&lt;/b&gt; has been unlocked automatically as locked time exceeded.  &lt;br&gt;\n                &lt;/p&gt;\n            &lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td style=\"text-align: left; padding: 30px 50px 50px 50px\" valign=\"top\"&gt;\n                &lt;p style=\"font-size: 18px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #505050; text-align: left;\"&gt;\n                    Thanks,&lt;br/&gt;WSO2 Identity Server Team\n                &lt;/p&gt;\n            &lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td colspan=\"2\" align=\"center\" style=\"padding: 20px 40px 40px 40px;\" bgcolor=\"#f0f0f0\"&gt;\n                &lt;p style=\"font-size: 12px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #777;\"&gt;\n                    &amp;copy; 2018\n                    &lt;a href=\"http://wso2.com/\" target=\"_blank\" style=\"color: #777; text-decoration: none\"&gt;WSO2&lt;/a&gt;\n                    &lt;br&gt;\n                    787 Castro Street, Mountain View, CA 94041.\n                &lt;/p&gt;\n            &lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;/table&gt;\n    &lt;/td&gt;\n &lt;/tr&gt;\n&lt;/table&gt;]]&gt;\n</code></pre>      - Email Footer: ---</p> </li> </ul> </li> <li> <p>Sample template for \"AccountLockAdmin\"</p> <ul> <li>Email Template Type: AccountLockAdmin</li> <li>Email Template Locale: English(United States)</li> <li>Email Content Type:text/html</li> <li>Email Template Subject: WSO2 - Your Account has been Locked</li> <li>Email Body:      <code>&lt;![CDATA[&lt;table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\"bgcolor=\"#f0f0f0\"&gt;     &lt;tr&gt;     &lt;td style=\"padding: 30px 30px 20px 30px;\"&gt;         &lt;table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\" bgcolor=\"#ffffff\" style=\"max-width: 650px; margin: auto;\"&gt;         &lt;tr&gt;             &lt;td colspan=\"2\" align=\"center\" style=\"background-color: #333; padding: 40px;\"&gt;                 &lt;a href=\"http://wso2.com/\" target=\"_blank\"&gt;&lt;img src=\"http://cdn.wso2.com/wso2/newsletter/images/nl-2017/wso2-logo-transparent.png\" border=\"0\"/&gt;&lt;/a&gt;             &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td colspan=\"2\" align=\"center\" style=\"padding: 50px 50px 0px 50px;\"&gt;                 &lt;h1 style=\"padding-right: 0em; margin: 0; line-height: 40px; font-weight:300; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #666; text-align: left; padding-bottom: 1em;\"&gt;                     Account Locked                 &lt;/h1&gt;             &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td style=\"text-align: left; padding: 0px 50px;\" valign=\"top\"&gt;                 &lt;p style=\"font-size: 18px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #666; text-align: left; padding-bottom: 3%;\"&gt;                     Hi [user.claim.givenname],                 &lt;/p&gt;                 &lt;p style=\"font-size: 18px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #666; text-align: left; padding-bottom: 3%;\"&gt;                     Please note that the account registered with the user name &lt;b&gt;[user-name]&lt;/b&gt; has been locked. Please Contact the Administrator.&lt;br&gt;                 &lt;/p&gt;             &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td style=\"text-align: left; padding: 30px 50px 50px 50px\" valign=\"top\"&gt;                 &lt;p style=\"font-size: 18px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #505050; text-align: left;\"&gt;                     Thanks,&lt;br/&gt;WSO2 Identity Server Team                 &lt;/p&gt;             &lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td colspan=\"2\" align=\"center\" style=\"padding: 20px 40px 40px 40px;\" bgcolor=\"#f0f0f0\"&gt;                 &lt;p style=\"font-size: 12px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #777;\"&gt;                     &amp;copy; 2018                     &lt;a href=\"http://wso2.com/\" target=\"_blank\" style=\"color: #777; text-decoration: none\"&gt;WSO2&lt;/a&gt;                     &lt;br&gt;                     787 Castro Street, Mountain View, CA 94041.                 &lt;/p&gt;             &lt;/td&gt;         &lt;/tr&gt;         &lt;/table&gt;      &lt;/td&gt;      &lt;/tr&gt;     &lt;/table&gt;]]&gt;</code></li> <li>Email Footer: ---</li> </ul> </li> <li> <p>Sample template for \"AccountUnlockAdmin\"</p> <ul> <li>Email Template Type: AccountUnlockAdmin</li> <li>Email Template Locale: English(United States)</li> <li>Email Content Type:text/html</li> <li>Email Template Subject: WSO2 - Your Account has been Unlocked</li> <li>Email Body:      <pre><code>&lt;![CDATA[&lt;table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\"bgcolor=\"#f0f0f0\"&gt;\n&lt;tr&gt;\n&lt;td style=\"padding: 30px 30px 20px 30px;\"&gt;\n    &lt;table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\" bgcolor=\"#ffffff\" style=\"max-width: 650px; margin: auto;\"&gt;\n    &lt;tr&gt;\n        &lt;td colspan=\"2\" align=\"center\" style=\"background-color: #333; padding: 40px;\"&gt;\n            &lt;a href=\"http://wso2.com/\" target=\"_blank\"&gt;&lt;img src=\"http://cdn.wso2.com/wso2/newsletter/images/nl-2017/wso2-logo-transparent.png\" border=\"0\" /&gt;&lt;/a&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td colspan=\"2\" align=\"center\" style=\"padding: 50px 50px 0px 50px;\"&gt;\n            &lt;h1 style=\"padding-right: 0em; margin: 0; line-height: 40px; font-weight:300; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #666; text-align: left; padding-bottom: 1em;\"&gt;\n                Account Unlocked\n            &lt;/h1&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td style=\"text-align: left; padding: 0px 50px;\" valign=\"top\"&gt;\n            &lt;p style=\"font-size: 18px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #666; text-align: left; padding-bottom: 3%;\"&gt;\n                Hi [user.claim.givenname],\n            &lt;/p&gt;\n            &lt;p style=\"font-size: 18px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #666; text-align: left; padding-bottom: 3%;\"&gt;\n                Please note that the account registered with the user name &lt;b&gt;[user-name]&lt;/b&gt; has been unlocked by administrator. &lt;br&gt;\n            &lt;/p&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td style=\"text-align: left; padding: 30px 50px 50px 50px\" valign=\"top\"&gt;\n            &lt;p style=\"font-size: 18px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #505050; text-align: left;\"&gt;\n                Thanks,&lt;br/&gt;WSO2 Identity Server Team\n            &lt;/p&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td colspan=\"2\" align=\"center\" style=\"padding: 20px 40px 40px 40px;\" bgcolor=\"#f0f0f0\"&gt;\n            &lt;p style=\"font-size: 12px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #777;\"&gt;\n                &amp;copy; 2018\n                &lt;a href=\"http://wso2.com/\" target=\"_blank\" style=\"color: #777; text-decoration: none\"&gt;WSO2&lt;/a&gt;\n                &lt;br&gt;\n                787 Castro Street, Mountain View, CA 94041.\n            &lt;/p&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;/table&gt;\n&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/table&gt;]]&gt;\n&lt;![CDATA[&lt;table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\"bgcolor=\"#f0f0f0\"&gt;\n&lt;tr&gt;\n&lt;td style=\"padding: 30px 30px 20px 30px;\"&gt;\n    &lt;table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\" bgcolor=\"#ffffff\" style=\"max-width: 650px; margin: auto;\"&gt;\n    &lt;tr&gt;\n        &lt;td colspan=\"2\" align=\"center\" style=\"background-color: #333; padding: 40px;\"&gt;\n            &lt;a href=\"http://wso2.com/\" target=\"_blank\"&gt;&lt;img src=\"http://cdn.wso2.com/wso2/newsletter/images/nl-2017/wso2-logo-transparent.png\" border=\"0\" /&gt;&lt;/a&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td colspan=\"2\" align=\"center\" style=\"padding: 50px 50px 0px 50px;\"&gt;\n            &lt;h1 style=\"padding-right: 0em; margin: 0; line-height: 40px; font-weight:300; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #666; text-align: left; padding-bottom: 1em;\"&gt;\n                Account Unlocked\n            &lt;/h1&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td style=\"text-align: left; padding: 0px 50px;\" valign=\"top\"&gt;\n            &lt;p style=\"font-size: 18px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #666; text-align: left; padding-bottom: 3%;\"&gt;\n                Hi [user.claim.givenname],\n            &lt;/p&gt;\n            &lt;p style=\"font-size: 18px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #666; text-align: left; padding-bottom: 3%;\"&gt;\n                Please note that the account registered with the user name &lt;b&gt;[user-name]&lt;/b&gt; has been unlocked by administrator. &lt;br&gt;\n            &lt;/p&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td style=\"text-align: left; padding: 30px 50px 50px 50px\" valign=\"top\"&gt;\n            &lt;p style=\"font-size: 18px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #505050; text-align: left;\"&gt;\n                Thanks,&lt;br/&gt;WSO2 Identity Server Team\n            &lt;/p&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td colspan=\"2\" align=\"center\" style=\"padding: 20px 40px 40px 40px;\" bgcolor=\"#f0f0f0\"&gt;\n            &lt;p style=\"font-size: 12px; margin: 0; line-height: 24px; font-family: 'Nunito Sans', Arial, Verdana, Helvetica, sans-serif; color: #777;\"&gt;\n                &amp;copy; 2018\n                &lt;a href=\"http://wso2.com/\" target=\"_blank\" style=\"color: #777; text-decoration: none\"&gt;WSO2&lt;/a&gt;\n                &lt;br&gt;\n                787 Castro Street, Mountain View, CA 94041.\n            &lt;/p&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;/table&gt;\n&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/table&gt;]]&gt;\n</code></pre></li> <li>Email Footer: ---</li> </ul> </li> </ul>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.9.0%20to%205.10.0/#handling-internal-scopes","title":"Handling Internal Scopes","text":"<p>From IS 5.10.0 onwards, internal scopes validation while accessing internal resources will be enabled by default,  but this will break existing applications using some APIs such as scim2/Me.</p> <p>Note</p> <p>We can go back to the previous behaviour and disable scope based permissions with the following config in the <code>deployment.toml</code> file.</p> <pre><code>[resource_access_control]\ndisable_scope_validation=true\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.9.0%20to%205.10.0/#introducing-two-separate-configuration-to-manage-oidc-consent-flow","title":"Introducing two Separate Configuration to Manage OIDC Consent Flow","text":"<p>This will introduce the following two new properties in the <code>identity.xml</code> inside OpenIDConnect tag to manage the  consent during OIDC login and logout flows. - SkipLoginConsent - Skip the OIDC login consent - SkipLogoutConsent - Skip the OIDC logout consent</p> <p>If these properties are not defined, the value will be retrieved from SkipUserConsent</p> <p>These properties can be managed by adding the below configuration to <code>deployment.toml</code> file <pre><code>[oauth]\nprompt_login_consent = false\nprompt_logout_consent = false\n</code></pre></p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.9.0%20to%205.10.0/#wsdl-of-the-application-management-service-has-been-changed","title":"WSDL of the Application Management Service has been changed","text":"<p>In IS 5.10.0, there are significant changes has been introduced to the WSDL of the Application Management Admin Service  with the addition of new properties to the service provider model object. Therefore SOAP API consumers should  regenerate the stub or upgrade the dependency version of the stub.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.9.0%20to%205.10.0/#wsdl-of-the-identity-provider-management-service-has-been-changed","title":"WSDL of the Identity Provider Management Service has been changed","text":"<p>In IS 5.10.0, there are significant changes has been introduced to the WSDL of the Identity Provider Management  Admin Service with the addition of new properties to the service provider model object. Therefore SOAP API consumers  should regenerate the stub or upgrade the dependency version of the stub.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.9.0%20to%205.10.0/#wsdl-of-the-user-account-association-service-has-been-changed","title":"WSDL of the User Account Association Service has been changed","text":"<p>In IS 5.10.0, there are significant changes has been introduced to the WSDL of the User Account Association  Admin Service with the addition of new properties to the service provider model object. Therefore SOAP API consumers  should regenerate the stub or upgrade the dependency version of the stub.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.9.0%20to%205.10.0/#handling-sms-otp-error-response-using-internal-error-codes","title":"Handling SMS OTP Error Response using Internal Error Codes","text":"<p>From IS 5.10.0 onwards, SMS-OTP webapp uses internal error codes when there is an error response returned from the  SMS provider.</p> <p>Note</p> <p>To have the previous behaviour where the SMS-Provider error codes were used by SMS-OTP webapp, please add the below configuration in the <code>deployment.toml</code> file located at <code>&lt;IS_HOME&gt;/repository/conf/</code> directory.</p> <pre><code>[authentication.authenticator.sms_otp.parameters]\nUseInternalErrorCodes = false\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.9.0%20to%205.10.0/#new-user-store-managers-with-built-in-unique-id-support","title":"New User Store Managers with built in unique ID support","text":"<p>New user store managers with inbuilt unique ID support will provide the capability to enhance the user store operations  that were initially architecturally impossible. These operations include username rename functionality and a  significant performance increase. as well. So migrating to new user store managers will allow us to use those new   features whenever those new features available.  </p> <p>New user store managers are named with the <code>UniqueiId</code> prefix for the old user store managers. For example, <code>JDBCUserStoreManager</code> with unique ID capabilities will be named as <code>UniqueIDJDBCUserStoreManager</code>.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-5.9.0%20to%205.10.0/#thumbprint-certificate-hashing-algorithm","title":"Thumbprint certificate hashing algorithm","text":"<p>From IS 5.10.0 onwards, the hashing algorithm used for thumbprint certificate generation is updated to <code>SHA-256</code>. For versions before IS 5.10.0, WSO2 Identity Server used <code>SHA-1</code> as the hashing algorithm for thumbprint certificate generation.</p> <p>Therefore, if a user migrates from IS 5.9.0 or a lower version to 5.10.0, the previously issued JWTs will not be validated against the new thumbprint included in the JWKS response of the latest version.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.0.0%20to%206.1.0/","title":"What Has Changed","text":"<p>WSO2 Identity Server 6.1.0 brings a range of improvements. The following aspects have changed in WSO2 IS 6.1.0 compared to the previous WSO2 IS versions.</p> <p>This page provides details about the behavioral changes from WSO2 IS version 6.0.0 to 6.1.0.</p> <p>If you are migrating from an older version of Identity Server</p> <p>To find the changes introduced in the previous versions, you can refer to the following documents:  - What Has Changed in IS 6.0.0  - What Has Changed in IS 5.11.0  - What Has Changed in IS 5.10.0  - What Has Changed in IS 5.9.0  - Migrating Configurations to IS 5.8.0 section in the Upgrading From an Older Version of WSO2 IS document</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.0.0%20to%206.1.0/#enable-account-locking-for-the-totp-authenticator","title":"Enable account locking for the TOTP authenticator","text":"<p>With WSO2 IS 6.1.0, account locking will be enabled by default for invalid login attempts through the TOTP authenticator. With this change, the user account will be locked if the user tries to log in by entering invalid TOTP codes exceeding the configured maximum failed attempt count.</p> <p>If you need to disable account locking for the TOTP authenticator, add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[authentication.authenticator.totp.parameters]\nEnableAccountLockingForFailedAttempts = false\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.0.0%20to%206.1.0/#error-headers-of-rest-apis","title":"Error headers of rest APIs","text":"<p>With WSO2 IS 6.1.0, the <code>realm user</code> field will not be available in the <code>www-Authenticate</code> header for rest API error responses.</p> <p>If you need to have the <code>WWW-Authenticate</code> header with the <code>realm user</code> variable, add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[rest_api_authentication]\nadd_realm_user_to_error = true\n</code></pre> <p>Note</p> <p>Even though the above configuration adds the realm user variable, it will not be sent in the 401 error response to adhere to the HTTP specification.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.0.0%20to%206.1.0/#new-email-template-for-account-activation","title":"New email template for account activation","text":"<p>With WSO2 IS 6.1.0, users will receive a confirmation email on successful account activation after a user completes the ask password flow.</p> <p>When you migrate from a previous version, you need to add an email template to be able to use this feature. Be sure to use <code>accountActivationSuccess</code> as the Template Type Display Name for the email template that you add.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.0.0%20to%206.1.0/#adaptive-script-cookie-format-change","title":"Adaptive script cookie format change","text":"<p>With WSO2 IS 6.1.0, the method of encrypting the adaptive script cookie has changed to ensure better security. With this change, the previously created cookies will be invalidated and need to be created again.</p> <p>If you need to revert to the previous behavior where the old cookies remain valid and the older encryption method is used, add the following config to the <code>deployment.toml</code> file.</p> <p>Important</p> <p>In WSO2 IS versions 5.11.0 and 6.0.0, you can use the parameters listed below for the specified methods if you want to use special characters in cookie values. If these parameters are enabled in your WSO2 IS 5.11.0 or WSO2 IS 6.0.0 version, do not use the <code>enableAdaptiveScriptCookieLegacyMode=true</code> configuration in the <code>deployment.toml</code> when you migrate to the latest.</p> Method Parameter <code>setCookie</code> <code>encryptWithoutDecoding : true</code> <code>getCookieValue</code> <code>decryptWithoutEncoding : true</code> <pre><code>[system.parameter]\nenableAdaptiveScriptCookieLegacyMode=true\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.0.0%20to%206.1.0/#masking-logs","title":"Masking logs","text":"<p>With WSO2 IS 6.1.0, sensitive information on log files are masked at the time of logging.</p> <p>If a user needs to disable the masking, they have to apply the following config into the <code>deployment.toml</code> and restart the server.</p> <pre><code>[masking_logs]\nenabled = false\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/","title":"What Has Changed","text":"<p>WSO2 Identity Server 7.0.0 brings a range of new features and major improvements. This page provides details about the behavioral changes from WSO2 Identity Server 6.1.0 to 7.0.0.</p> <p>If you are migrating from an older version of Identity Server</p> <p>To find the changes introduced in the previous versions, you can refer to the following documents  - What Has Changed in IS 6.1.0  - What Has Changed in IS 6.0.0  - What Has Changed in IS 5.11.0  - What Has Changed in IS 5.10.0  - What Has Changed in IS 5.9.0  - Migrating the Configurations section in the Upgrading From an Older Version of WSO2 IS document</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#significant-changes","title":"Significant Changes","text":""},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#tenant-qualified-urls-and-tenanted-sessions","title":"Tenant qualified URLs and tenanted sessions","text":"<p>WSO2 Identity Server now supports tenant-qualified URLs for all the endpoints exposed from the product. This enables clear isolation between tenants, especially with managing non-conflicting tenant bound user sessions, and provides the capability to easily configure routing rules.</p> <p>This change only impacts deployments with multi tenant setups. Application in other tenants except the super  tenant should be migrated to support the tenant-qualified URLs. Migration impact related details are included in the  Migrating applications for tenanted qualified URLs document.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#authorization-model","title":"Authorization Model","text":"<p>With IS 7.0.0, the authorization model has undergone significant changes. The following are the key changes in the authorization model.</p> Scopes/Permissions representation <p>In prior versions, customer scopes were represented using OAuth2 scopes and system permissions and scopes were represented using internal permissions/scopes as defined in the <code>oauth-scope-binding.xml</code> file. From IS 7.0.0 onwards, both customer scopes and system scopes are represented as API Resources.</p> <p>Migration of the scopes from previous model to the new model is handled through the migration client as explained in the Migrating Authorization Model document.</p> API Authorization <p>In prior versions, scopes are issued for the applications if the user roles are permitted access for the requested scopes. From IS 7.0.0 onwards, scopes should be authorized through the API authorization capability in order to be issued for the applications.</p> <p>Migration of the scopes from previous model to the new model is handled through the migration client as explained in the Migrating Authorization Model document.</p> Roles implementation <p>IS 7.0.0 introduces roles V2 implementation with audience support giving you capability to create both organization audience roles and application audience roles.</p> <p>Migration of the roles from previous model to the new model is handled through the migration client as explained in the Migrating Authorization Model document.</p> <p>Along with the new role V2 implementation, new adaptive script functions are introduced to handle the role-related operations which were previously handled by functions specific to the V1 implementation.</p> <p>Migration of the roles related adaptive script functions needs to be handled as explained in the Migrating Roles Related Adaptive Script Functions document.</p> IdP role to local role mappings <p>In the prior versions, IdP role to local role mappings were used for federated user authorization. In IS 7.0.0, IdP groups capability will be used for the authorization of federated users.</p> <p>Migration of IdP roles to local role mappings to IdP groups to local role assignments is handled through the migration client as explained in the Migrating Authorization Model document.</p> <p>With the IdP Group capability, attribute mapped to local group claim is used as the IdP group attribute. You need to configure the IdP group attribute in the connection configurations using attribute mappings. If you need to use the previous attribute used with the IdP role to local role mappings, you can add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[federated.idp]\nuse_idp_role_claim_as_idp_group_claim=true\n</code></pre> <p>Additionally, IdP role to local role mappings support had the capability to send unmapped roles. Since IdP groups feature uses IdP groups to local role assignments to resolve roles, there is no concept of sending unmapped roles and only local roles with IdP group assignments should be returned. Since IdP role to local role mappings are migrated to IdP group to role assignments, support of sending unmapped roles behaviour incorporating IdP groups is introduced with a backward compatible configuration. When this configuration is enabled, the IdP groups derived using the group attribute during authentication which do not have an IdP group created under the connection will be treated as unmapped roles. To enable this behaviour, add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[idp_role_management]\nreturn_only_mapped_local_roles=false\n</code></pre> <p>Note : We highly recommend not to enable this configuration unless you have a specific requirement to send unmapped roles. If you have already sending unmapped roles using IdP role to local role mappings, we recommend to configure them with IdP groups and local role assignments.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#system-applications","title":"System applications","text":"Console <p>From IS 7.0.0 onwards, the Console application is changed to a non-SaaS behavior model along with the new authorization model. With this change, the Console application will be created for each tenant. Console access urls will be changed to tenant qualified urls.</p> <p>Migration of the Console application is handled through the migration client as explained in the Migrating Authorization Model document.</p> My Account <p>From IS 7.0.0 onwards, the My Account application is changed to a non-SaaS behavior model along with the new authorization model. With this change, the My Account application will be created for each tenant. My Account access urls will be changed to tenant qualified urls.</p> <p>Migration of the My Account application is handled through the migration client as explained in the Migrating Authorization Model document.</p> Management Console <p>From IS 7.0.0 onwards, management console is deprecated in favor of the new console UI with a refreshing look and feel. And it is now only available for a subset of features which are still not available in the new console. This includes XACML policy administration and editor, workflow configurations, key store management, registry configurations, tenant management, consent purpose management, and function libraries.</p> <p>Removed sections include <code>Users and Roles</code> (now replaced by a new <code>Roles</code> section for managing management console permissions), <code>User Stores</code>, <code>Claims</code>, <code>Service Providers</code>, <code>Identity Verification Providers</code>, <code>Identity Providers</code>, <code>Email Templates</code>, <code>OIDC Scopes</code>, <code>Admin Advisory</code>, <code>Remote Logging</code>, and <code>Server Roles</code>. Given these changes, our suggestion is to transition to using the new console, which offers a more streamlined interface and improved functionality.</p> <p>In order to configure the OTP related configurations, resident identity provider UI can be enabled by adding following configuration to <code>deployment.toml</code> file. <pre><code>[resident_idp]\nenable = \"true\"\n</code></pre></p> <p>Note: It is not recommended to update any other resident identity provider configurations from here as the legacy management console will soon be removed. Use the latest console to access up-to-date features and for a safer and a more stable experience.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#other-minor-changes","title":"Other Minor Changes","text":""},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#oauthoidc","title":"OAuth/OIDC","text":"<p>This section contains the updates done to the OAuth/OIDC related features of IS 7.0.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#allow-same-oauth-client-id-to-be-used-in-multiple-organizations","title":"Allow same OAuth Client ID to be used in multiple organizations","text":"<p>With IS 7.0.0, OAuth consumer application client IDs are now tenant unique allowing the same client ID to exist in multiple organizations.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#unique-scopes-to-access-the-system-apis","title":"Unique scopes to access the system APIs","text":"<p>With the IS 7.0.0, we have introduced new internal scopes for existing system APIs which shared the same scope in prior versions to maintain the uniqueness.</p> <p>For example: <code>internal_application_mgt_create</code> scope was used for Application Management, OIDC Scope Management, OAuth2 Scope Management, and Dynamic Client Registration API POST calls. From IS 7.0.0, <code>internal_application_mgt_create</code> is only used for Application Management POST calls and new internal scopes are introduced for the other APIs which shared the same scope.</p> <p>With the above mentioned change, clients which used to invoke the system APIs might be impacted due to not getting the scopes to invoke some APIs which were previously invoked using previous scopes. Scopes of the user roles and requested scopes of the clients should be updated accordingly with this change.</p> <p>Since there are changes needed from the clients regarding the requested scopes, we have also provided a backward compatibility configuration for migrating purposes to issue the new scopes which are corresponding to the previous scopes when requesting the previous scopes. You can enable the configuration by adding the following configuration to <code>deployment.toml</code> file. <pre><code>[oauth]\nuse_legacy_scopes_as_alias_for_new_scopes=true\n</code></pre></p> <p>Note: This backward compatible behaviour will be only enforced on the migrating applications. We highly recommend configuring the scope assignments of the roles and the requested scopes of the clients and remove the above configuration since this backward compatible support will be removed in future releases.</p> <p>In addition to the above configuration, we have introduced another backward compatibility configuration to give the same access level for invoking system APIs using authentication handlers like Basic Authentication which previously relied on user permissions. You can enable the configuration by adding the following configuration to <code>deployment.toml</code> file. <pre><code>[oauth]\nuse_legacy_permission_access_for_user_based_auth=true\n</code></pre></p> <p>Note: We highly recommend enabling this configuration only if you have used authentication handlers which previously used user permissions for access control of the system APIs. If you have a requirement to enable the configuration initially with the migration, we also recommend configuring the scope assignments of the roles properly with the new scopes and removing the configuration.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#prevent-issuing-self-service-related-scopes-for-client-credential-grant","title":"Prevent issuing self-service-related scopes for client credential grant","text":"<p>In IS 7.0.0, the <code>internal_login</code> scope, which is used to access the self-service APIs, is no longer issued for the client credential grant. There is no reason for the scope to be issued for the client credential grant as an app is not used to perform any self-service capabilities. Further, issuing the <code>internal_login</code> scope for the client credential grant leads to security issues as well.</p> <p>Users should be aware that this change may affect existing applications, as the omission of the <code>internal_login</code> scope could alter application behavior. It is recommended to review and test affected processes thoroughly to ensure smooth operation and to minimize any potential disruptions this update may bring.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#avoid-sending-redundant-query-parameters-in-the-logout-redirect-url","title":"Avoid sending redundant query parameters in the Logout Redirect URL","text":"<p>In prior IS versions, a successful OIDC logout results in the <code>crId</code> and <code>sp</code> query parameters in the redirect url. With IS 7.0.0, these query parameters are removed from the logout redirect url as they are redundant to be shared with the application.</p> <p>If you have implemented customizations based on these query parameters, or if maintaining the previous behavior is necessary, you can retain the earlier functionality by adding the following configuration to the <code>&lt;IS_HOME&gt;/repository/conf/deployment.toml</code> file.</p> <pre><code>[oauth.oidc] \nallow_additional_params_from_post_logout_redirect_uri=true\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#avoid-sending-redundant-query-params-in-the-default-consent-page-url","title":"Avoid sending redundant query params in the default consent page URL","text":"<p>In prior versions of IS, the default consent page URL included several query parameters: <code>spQueryParams, application, loggedInUser, tenantDomain, scope, requestedClaims, and userClaimsConsentOnly</code>. However, to mitigate security risks, IS 7.0.0 will no longer include these query parameters.</p> <p>If you have implemented customizations based on these query parameters, or if maintaining the previous behavior is necessary, you can retain the earlier functionality by adding the following configuration to the <code>&lt;IS_HOME&gt;/repository/conf/deployment.toml</code> file.</p> <pre><code>[authentication.endpoint.consent_page_redirect_params] \nallow = true\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#adjustments-to-access-token-behavior-for-authenticated-clients","title":"Adjustments to Access Token Behavior for Authenticated Clients","text":"<p>In IS 7.0.0, the behavior related to token issuance for authenticated clients has been changed, especially when using grant types such as client credential.</p> <p>Here are the key alterations: 1) Subject Claim Modification: The sub claim of the JWT tokens, when issued for an authenticated client, is now set as the client id of the authenticated application. Previously, the sub claim was set as the user ID of the application owner. 2) Username Field Removal: The username field has been removed from the introspection response for access tokens issued for authenticated clients.</p> <p>These changes might affect existing workflows and systems that rely on the previous token behavior.</p> <p>To facilitate users who wish to retain the previous behavior for backward compatibility, two configurations have been introduced. Set the following configurations to false in the <code>&lt;IS_HOME&gt;/repository/conf/deployment.toml</code> file if you wish to revert to the former behavior.</p> <pre><code>[oauth] \nuse_client_id_as_sub_claim_for_app_tokens=false \nremove_username_from_introspection_response_for_app_tokens=false\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#avoid-returning-oidc-claims-for-the-client-credential-grant-type","title":"Avoid returning OIDC claims for the client credential grant type","text":"<p>In WSO2 IS 7.0.0, there is a behavioral change regarding the retrieval of OIDC claims for the client credential grant type: OIDC claims are no longer included by default in the JWT token issued for this grant type.</p> <p>To revert to the previous behavior and include OIDC claims, the following configuration can be added to the <code>&lt;IS_HOME&gt;/repository/conf/deployment.toml</code> file.</p> <pre><code>[oauth.grant_type.client_credentials]\nskip_oidc_claims = false\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#restrict-public-client-support-for-client-credentials-grant-type","title":"Restrict public client support for client credentials grant type","text":"<p>Starting from IS version 7.0.0, the retrieval of an access token using the client credentials grant type for an application defined as a public client will be disabled due to security concerns. This security enhancement is implemented, by default, by setting the <code>PublicClientAllowed</code> property value to false for the client credentials grant type.</p> <p>If the previous behavior is desired, it can be preserved by adding the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[oauth.grant_type.client_credentials] \nallow_public_client=\"true\"\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#simplified-configuration-for-public-client-support-a-seamless-transition-to-granular-grant-type-settings","title":"Simplified Configuration for Public Client Support: A Seamless Transition to Granular Grant Type Settings","text":"<p>In the latest version of WSO2 Identity Server 7.0.0, we've made improvements to the way you configure support for public clients. Specifically, the process of indicating which grant types should support public client authentication has been refined for better precision and flexibility.</p> <p>In the earlier version, an array configuration was used to specify grant types supporting public client authentication. An example looked like this:</p> <pre><code>[oauth.public_client_support]\ngrant_type_names = [\"customGrant1\"]\n</code></pre> <p>Now, we've introduced a more granular way to configure public client support using a property called <code>PublicClientAllowed</code>. This property accepts a boolean value (true or false) and is applied to each grant type individually. Here's how you can set it up in the new configuration:</p> <pre><code>[[oauth.custom_grant_type]]\nname=\"customGrant1\"\ngrant_handler=\"org.wso2.carbon.identity.oauth2.customGrantHandler\"\ngrant_validator=\"org.wso2.carbon.identity.oauth2.customGrantValidator\"\n[oauth.custom_grant_type.properties]\nPublicClientAllowed=true\n</code></pre> <p>Changes and Migration:</p> <ul> <li>The array configuration for public client support has been removed. If you were using this method, you now need to declare grant types with the new PublicClientAllowed property.</li> <li>Default grant types within Identity Server have been updated with this new property and default values. You can customize these defaults in the <code>deployment.toml</code> file.</li> <li>Public client support for the client credentials grant type is now disabled by default. If needed, you can enable it explicitly in the configuration.</li> </ul> <p>For those who had not specified any grant types using the array and relied on the default behavior where all grant types supported public clients, they will now need to configure each required custom grant type with PublicClientAllowed=true to maintain the same functionality.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#deprecate-revoked-token-headers-from-oauth2revoke-endpoint-response","title":"Deprecate revoked token headers from <code>oauth2/revoke</code> endpoint response","text":"<p>We are updating the response behavior for the <code>oauth2/revoke</code> endpoint. This update involves the deprecation of including revoked token headers in the response. This change is in alignment with the OAuth 2.0 Token Revocation specification (RFC 7009), which specifies that a successful token revocation should result in a 200 status code response and does not mandate the inclusion of revoked tokens in the response headers.</p> <p>Going forward, the <code>oauth2/revoke</code> endpoint will no longer include headers containing revoked tokens in its response. This update simplifies the response structure and adheres to the OAuth 2.0 specification more closely.</p> <p>If the original functionality with revoked token headers in the response is needed, the following configuration can be added to the <code>deployment.toml</code> file:</p> <pre><code>[oauth.revoked_token_headers_in_response] \nenable=true\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#token-will-not-issues-unregistered-scopes","title":"Token will not issues unregistered scopes","text":"<p>With the IS 7.0.0 release,  all the unregistered scopes will be ignored from the token. if you want to add an unregistered scope, then you have to send a scope that matches the <code>^device_.*</code> regex pattern (like <code>device_1</code>, <code>device_2</code>, etc.). Unregistered scopes that match this pattern are automatically included in the token. However, it's key to understand that these unregistered scopes do not show up on the consent page. This means when a user requests both standard system-registered scopes and a scope that follows the <code>^device_.*</code> pattern, the consent page will only display the system-registered scopes. Despite this, the final token issued will contain both the system-registered scopes and any scopes that align with the <code>^device_.*</code> regex pattern.</p> Disabling the Default Scope Inclusion <p>If the user wants to disable this behavior, they can do it by adding the following configurations into deployment.toml</p> <pre><code>[oauth]\ndrop_unregistered_scopes = \"false\"\nallowed_scopes = []\n</code></pre> <p>Note : If you already have scopes mentioned in allowed_scopes, you do not need to set allowed_scopes = []</p> <p>This change will disable the above-mentioned behavior and issue a token with any random scope.</p> Introducing Custom Scope Patterns <p>If needed, you can also define your own custom scope patterns. To do this, you need to modify the <code>deployment.toml</code> file as shown below</p> <pre><code>[oauth]\nallowed_scopes = [\"^device_.*\", \"&lt;any_custom_regex_pattern&gt;\"]\n</code></pre> <p>With this configuration, the system will recognize both the default regex pattern (<code>^device_.*</code>) and any user-defined custom regex patterns as valid for inclusion in tokens. If you prefer to use only your custom patterns, excluding the default, you can simply remove the <code>^device_.*</code> pattern from the allowed_scopes configuration and include only your specified patterns and scopes. This setup allows for the inclusion of both regex patterns and plain string text in the allowed_scopes configuration.</p> <p>In summary, these configurations offer you flexibility in managing which scopes are included in tokens, be it through the system's default settings or through customized configurations defined in the <code>deployment.toml</code> file.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#saml","title":"SAML","text":"<p>This section contains the updates done to the SAML features of IS 7.0.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#adjustments-to-saml-logout-response-signing","title":"Adjustments to SAML Logout Response Signing","text":"<p>In previous versions of WSO2 Identity Server, there was a noticeable difference in handling SAML logout responses between Service Provider (SP) initiated and Identity Provider (IdP) initiated Single Sign-On (SSO) flows. Specifically, while logout responses were signed for SP initiated SSO flows when response signing was enabled, this was not the case for IdP initiated SSO flows.</p> <p>Change in IS 7.0.0: - Standardized Signing Behavior: IS 7.0.0 addresses this inconsistency. Now, if response signing is enabled for a Service Provider, logout responses will be signed for both SP and IdP initiated SSO flows. - Consistent Security Posture: This enhancement ensures a uniform security approach, providing consistent behavior regardless of the SSO flow initiation.</p> <p>Configuration for Previous Behavior: - While this update represents a move towards a more standardized and secure approach, some users may prefer to retain the previous behavior for specific use cases. - Optional Configuration: To opt-out of signing the SAML logout response during IdP initiated SSO flow, users can modify their <code>deployment.toml</code> file with the following setting:</p> <pre><code>[saml] \nenable_saml_idp_init_logout_response_signing = false\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#passive-sts","title":"Passive STS","text":"<p>This section contains the updates done to the Passive STS features of IS 7.0.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#enhanced-security-with-reply-logout-url-validation-in-passivests","title":"Enhanced Security with reply Logout URL Validation in PassiveSTS","text":"<p>In WSO2 Identity Server 7.0.0, we have introduced validation for the logout url for applications configured with WS-Federation (Passive) authentication.</p> <p>We have introduced this to improve security, previously there was no validation for the logout url.</p> <p>A new field is introduced in the WS-Federation (Passive) Configuration to configure the logout reply url and the url in the logout request will be validated against this.</p> <p>Furthermore, in order to perform the validation, the realm parameter must be sent with the logout request. The realm of the passive sts application should be sent as the query parameter <code>wtrealm</code> in the logout request.</p> <p>To revert to the previous behavior and skip the validation, the following configuration can be added to the <code>deployment.toml</code> file:</p> <pre><code>[passive_sts] \nenable_logout_wreply_validation = false\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#authentication","title":"Authentication","text":"<p>This section contains the updates done to the Authentication features of IS 7.0.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#use-a-different-browser-to-open-the-email-magic-link-and-log-in-to-the-app","title":"Use a different browser to open the email magic link and log in to the app","text":"<p>In prior IS versions, the email magic link authenticator was limited to support login to the app by clicking on the link received to email only within the same browser. With IS 7.0.0, email magic link authenticator is enhanced to support login to the app by clicking the link received to the email opened in a different browser.</p> <p>If it is required to keep the earlier behavior without allowing cross-browser support, add the following config to the deployment.toml.</p> <pre><code>[session.nonce.cookie] \ndefault_whitelist_authenticators=[]\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#avoid-sending-ske-query-parameter-in-the-totp-enroll-flow","title":"Avoid Sending <code>ske</code> Query Parameter in the TOTP Enroll Flow","text":"<p>In IS 7.0.0, the <code>ske</code> query parameter has been removed from the TOTP enrollment flow due to security concerns. This change might impact existing customizations that rely on this query parameter.</p> <p>It's important to note that if there is an existing filter policy configured in the <code>deployment.toml</code> file to exclude parameters from the URL during the authentication flow, this new change will be overridden by the filter policy configuration. In such instances, it is advisable to take steps to include the <code>ske</code> parameter in the exclusion list.</p> <p>For those looking to maintain backward compatibility, adjustments can be made by adding the following configuration:</p> <pre><code>[authentication.endpoint.redirect_params] \nfilter_policy = \"exclude\" \nremove_on_consume_from_api = \"true\" \nparameters = [\"loggedInUser\"]\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#executing-the-mutual-tls-client-authenticator-as-the-final-client-authenticator","title":"Executing the Mutual TLS Client Authenticator as the final client authenticator","text":"<p>In prior versions of IS, the Mutual TLS client authenticator was being executed before the PrivateKey JWT client authenticator.</p> <p>With onboarding FAPI compliance from IS 7.0.0, the priority of the Mutual TLS client authenticator was changed accordingly so that it will be executed at last once all the other client authenticators have been executed in order to improve the authenticating process.</p> <p>If maintaining the previous client authenticator execution order is necessary, you can retain the earlier functionality by adding the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[event.default_listener.mutual_tls_authenticator] \npriority=158\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#user-management","title":"User Management","text":"<p>This section contains the updates done to the User Management features of IS 7.0.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#allowing-only-case-insensitive-username-filtering-in-ldap-via-scim2-api","title":"Allowing only Case-Insensitive Username Filtering in LDAP via SCIM2 API","text":"<p>In WSO2 Identity Server 7.0.0, modifications have been implemented regarding the handling of username filtering in LDAP searches through the SCIM2 APIs. These alterations specifically involve supporting only case-insensitive username filtering in LDAP searches via the SCIM APIs. The purpose of these adjustments is to align LDAP searches in the Identity Server with the default LDAP searching behavior, which inherently operates in a case-insensitive manner.</p> <p>In earlier versions (6.0 and 6.1) of the Identity Server, the LDAP userstore configuration featured an option named <code>CaseInsensitiveUsernameFiltering</code>. This option was initially introduced to maintain backward compatibility. Upon careful review, it has been determined that the <code>CaseInsensitiveUsernameFiltering</code> configuration deviates from the default LDAP searching behavior. Consequently, in IS 7.0.0, this configuration has been removed.</p> <p>This change implies that any integrations or user practices relying on case-sensitive username filtering in LDAP via SCIM2 API need to be reassessed. Adjustments may be necessary to align with the new case-insensitive filtering approach. Administrators and users should be aware of this change to prevent unexpected behaviors in user search and authentication processes.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#update-api-response-http-status-code-for-locked-user-account-scenarios","title":"Update API Response HTTP Status Code for Locked User Account Scenarios","text":"<p>With the release of version 7.0.0, the Rest API endpoints  now return a <code>401</code> Unauthorized status code for responses related to user account lock scenarios, transitioning from the previously used <code>503</code> Service Unavailable code.</p> <p>This modification is made to ensure that the HTTP response accurately represents the error as related to authentication, in compliance with standard practices for HTTP responses to unauthorized access</p> <p>Users utilizing REST API endpoints requiring authentication should adjust to this change. The shift from a <code>503</code> to a <code>401</code> response necessitates revised handling strategies, emphasizing the need for users to adapt their integration and migration practices accordingly.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#support-for-tenant-level-password-input-validation","title":"Support for Tenant Level Password Input Validation","text":"<p>IS 7.0.0 now provides first-class support for tenant level password input validation to enhance the security of user accounts in WSO2 Identity Server. Administrators can elevate password security effortlessly with this, by configuring intuitive validators for minimum and maximum characters, uppercase, lowercase, and special characters \u2013 providing a seamless and user-friendly experience for robust password protection.</p> <p>With enablement of this feature, password policy validation and user store level password pattern validation will be disabled. You can revert this behavior with following configurations.</p> <pre><code>[identity_mgt.password_policy.password_policy_validation_handler]\nenable=true \n\n[event.default_listener.validation]\nenable=false\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#improved-secondary-userstore-data-validation","title":"Improved secondary userstore data validation","text":"<p>With the IS 7.0.0 release, the userstore rest api are improved further to validate the input fields with the appropriate regex to avoid incorporating user-controllable data into dynamically evaluated code. Hence it will sanitize the input field based on the regex validation and will reject the input value.</p> <p>This change has been implemented inorder to avoid security vulnerability that occurs when an application allows user input to be evaluated as an expression within a template or within a specific context that supports expression evaluation.</p> <p>Hence with the above improvement, if the value for the userstore property starts with ${ or #{ then it will be sanitized and the input value will be rejected. Hence if the users already have the secondary JDBC userstore with the name, connection name, description and display name with the above pattern, then the user has to be aware of this change and need to do the proper data migration.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#disabling-user-account-recovery-v1-api","title":"Disabling User Account Recovery V1 API","text":"<p>With IS 7.0.0, the User Account Recovery v1 API will be disabled by default. It is recommended to migrate to the User Account Recovery v2 API. For users who still wish to use the v1 API, adjustments to the <code>deployment.toml</code> file are necessary. Add the following configuration to enable the v1 API:</p> <pre><code>[identity_mgt.recovery] \nenable_v1_api = true\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#retention-of-manually-added-roles-in-jit-provisioned-users","title":"Retention of Manually Added Roles in JIT Provisioned Users","text":"<p>In earlier versions of WSO2 Identity Server, roles manually added to JIT provisioned users were invalidated and removed during subsequent user provisioning processes. This behavior often led to administrative overhead and inconsistency in role management.</p> <p>Update in IS 7.0.0: - Default Configuration Change: To streamline role management and enhance user experience, the default behavior has been modified. Now, the return_manually_added_local_roles configuration is set to true by default. - Effect of the Change: With this update, manually added roles to JIT provisioned users will be retained and not invalidated during subsequent provisioning. This ensures persistence of role assignments, reducing the need for reassigning roles after every provisioning cycle.</p> <p>If you wish to revert to the previous behavior, where the role assignment is removed from the user, set the mentioned configuration to false. To implement this change, add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[idp_role_management] \nreturn_manually_added_local_roles=false\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#adjustments-to-user-emailmobile-number-update-verification-feature","title":"Adjustments to user email/mobile number update verification feature","text":"<p>In the prior versions of Identity Server, even the user email verification for an updated email address feature was enabled, triggering an email account verification is skipped if the <code>verifyEmail</code> claim is not set to true in the user update request. Similarly sending the SMS OTP verification for an updated mobile number is also skipped if the <code>verifyMobile</code> claim is not set to true in the user update request.</p> <p>With the IS 7.0.0 release, this behavior has been changed. With the new behavior user email/mobile number update verification feature is not depending on the <code>verifyEmail/verifyMobile</code> claim. So it is not needed to send <code>verifyEmail/verifyMobile</code> claim with the user update request for triggering verification mail/sms and it is only needed to enable user email/mobile number update verification feature.</p> <p>To disable this and revert to the previous behavior, add the following configuration to the <code>deployment.toml</code> file.</p> <pre><code>[identity_mgt.user_claim_update]\nuse_verify_claim = true\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#reintroducing-allowassociatingtoexistinguser-configuration-for-jit-provisioning","title":"Reintroducing AllowAssociatingToExistingUser configuration for JIT provisioning","text":"<p>In the Identity Server versions prior to wso2-is-6.0.0,  <code>AllowAssociatingToExistingUser</code> configuration was available to configure whether to allow silent JIT provisioning users to associate with existing local users or not.  However, with wso2-is-6.0.0 and wso2-is-6.1.0 product versions this configuration was not included and account linking was enabled by default.</p> <p>With the IS 7.0.0 release this behavior has been changed as we reintroduce the <code>AllowAssociatingToExistingUser</code> configuration which will be disabled by default, not allowing JIT provisioning users to associate with existing local users. To enable the previous behavior of associating to an existing user account, the following configuration has to be added to the <code>deployment.toml</code> file.</p> <pre><code>[authentication.jit_provisioning]\nassociating_to_existing_user=true\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#disabling-application-level-outbound-provisioning-support","title":"Disabling application level outbound provisioning support.","text":"<p>In IS 7.0.0, the configuration of application-based outbound provisioning has been removed. Only the configuration of organization-level outbound provisioning support is provided, as users are provisioned to the organization. Therefore, outbound provisioning should ideally be triggered at the organization level.</p> <p>If the previous behavior is desired, it can be preserved by adding the following configuration to the <code>deployment.toml</code> file</p> <pre><code>[outbound_provisioning_management]\nenable_application_based_outbound_provisioning=true\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#providing-group-unique-id-support","title":"Providing Group Unique ID Support","text":"<p>In the prior versions of Identity Server, according to the SCIM2 implementation, the group attributes (group uuid, created date, modified date) are managed by the Identity Server (in IDN_SCIM_GROUP table). Therefore, when an existing userstore with groups is plugged to IS, SCIM2 will not work because the group attributes are not there in IS.</p> <p>With the IS 7.0 release, now the group attributes (group uuid, created date, modified date) are stored and managed in the userstore. So when an existing userstore with groups is plugged to IS, SCIM2 is working properly.</p> <p>To facilitate users who wish to retain the previous behavior for backward compatibility, a userstore property has been introduced. If the property is enabled, then corresponding group meta attributes (group uuid) will be derived from the userstore. If the property is disabled, then the group meta attributed will be derived from the Identity database.</p> <p>To disable group unique id support in the Primary userstore add below configuration to <code>deployment.toml</code> file.</p> <pre><code>[user_store]\nproperties.GroupIDEnabled = false\n</code></pre> <p>To disable group unique id support in the Secondary user stores add below userstore property to the <code>userstore.xml</code>.</p> <pre><code>&lt;Property name=\"GroupIDEnabled\"&gt;false&lt;/Property&gt;\n</code></pre> <p>Note: This backward compatible behavior will be only enforced on the migrating user stores. We highly recommend configuring groupId enabled user stores since this backward compatible support will be removed in future releases.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#claim-mappings","title":"Claim Mappings","text":"<p>This section contains the updates done related to the Claim Mappings in IS 7.0.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#changing-custom-claim-mapping-behavior-of-connections-using-authenticators-with-standard-dialect","title":"Changing custom claim mapping behavior of connections using authenticators with standard dialect","text":"<p>In prior versions of Identity Server, when the authenticator of a connection has a standard dialect (Eg: OIDC authenticator which has a standard OIDC dialect), standard dialect is used for the claim mappings and custom claim mappings were ignored. With IS 7.0.0, this behavior was changed to use the custom claim mappings when custom claim mappings configured in the connection. Additionally, standard dialect will be used for the claims which do not have custom claim mappings configured.</p> <p>To enable the previous behavior of using only standard dialect for claim mappings, the following configuration has to be added to the <code>deployment.toml</code> file.</p> <pre><code>[authentication.endpoint]\nenable_custom_claim_mappings=false\n</code></pre> <p>Additionally, if you have already used the following configuration previously to use custom claim mappings instead of standard dialect, additional behavior change of using standard dialect for the claims which do not have custom claim mappings will be introduced as mentioned in the initial description.</p> <pre><code>[authentication.endpoint]\nenable_custom_claim_mappings=true\n</code></pre> <p>To disable only the behavior of using standard dialect for the claims which do not have custom claim mappings configured, the following configuration has to be added to the <code>deployment.toml</code> file.</p> <pre><code>[authentication.endpoint]\nenable_merging_custom_claim_mappings_with_default=false\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#system-configs","title":"System Configs","text":"<p>This section contains System Configuration related changes of IS 7.0.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#changing-the-recovery-callback-url-regex-pattern","title":"Changing the Recovery Callback URL Regex Pattern","text":"<p>In the IS 7.0.0 release, there have been modifications to the default regex patterns for recovery callback URLs. These alterations might impact existing callback URLs that adhere to previous patterns, potentially causing them to break. Previously, the defaultly provided regex pattern for the callback URL of the recovery endpoint would have posed some security vulnerabilities in certain instances, serving more as a sample regex pattern.</p> <p>Old regex pattern: <code>[[&lt;http://localhost:9443&gt;](&lt;http://localhost:9443/&gt;)].**[/authenticationendpoint/login.do]**</code></p> <p>The new regex pattern has been adjusted to: <code>http:\\\\/\\\\/localhost:9443\\\\/.*</code> For users who prefer to maintain the old behavior and utilize the previous regex pattern, the following configuration can be added to the <code>deployment.toml</code> file.</p> <pre><code>[identity_mgt] \ncallback_url = \"[http://localhost:9443].*[/authenticationendpoint/login.do]*\"\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#transitioning-from-sha1-to-sha256","title":"Transitioning from SHA1 to SHA256","text":"<p>In line with enhancing security, WSO2 Identity Server has replaced default SHA1-based algorithms with more secure SHA256-based algorithms. This change, crucial for maintaining robust security standards, affects various components and flows within the system.</p> <p>Key Changes and Impacts:</p> <ul> <li>SAML IdPs and SPs: Newly created SAML Identity Providers (IdPs) and Service Providers (SPs) will default to SHA256-based signing and digest algorithms.</li> <li>SAML SP Creation via Metadata: New SAML SPs created using a metadata file will automatically use SHA-256 algorithms. To retain SHA1, modify the following configuration in deployment.toml. <pre><code>[saml]\nmetadata.sp_enable_sha256= false\n</code></pre></li> <li>SAML IdP Metadata Signature: The downloaded SAML IdP metadata file will now be signed with the SHA-256 algorithm. This can be reverted with the following configuration. <pre><code>[saml]\nmetadata.idp_enable_sha256= false\n</code></pre></li> <li>Public Methods in IdentityUtil: Methods like getPPIDDisplayValue(), getHMAC(), and generateUUID() will use SHA256 by default. To revert, adjust the [identity_util] settings. <pre><code>[identity_util]\nenable_sha256= false\n</code></pre></li> <li>Certificate Thumbprints: These will now be generated using SHA256. This behavior can be changed in the [cert_thumbprint] configuration. <pre><code>[cert_thumbprint]\nenable_sha256=false\n</code></pre></li> <li>Passive STS Response: The default signing and digest algorithms have shifted to SHA256. To revert to SHA1, use the following configuration. <pre><code>[sts]\nsignature_algorithm = \"&lt;http://www.w3.org/2000/09/xmldsig#rsa-sha1&gt;\"\ndigest_algorithm = \"&lt;http://www.w3.org/2000/09/xmldsig#sha1&gt;\"\n</code></pre></li> <li>OIDC SP Client Secrets: For newly created OIDC SPs, client secrets will be generated using HMACSHA256, resulting in longer lengths. This can be reverted in the [oauth] configuration. <pre><code>[oauth]\nenable_sha256= false\n</code></pre></li> <li>JWK Thumbprints in JWT Tokens: Now generated using SHA256. To revert, adjust the [oauth] settings. <pre><code>[oauth]\njwk_thumbprint_enable_sha256= false\n</code></pre></li> <li>Auto-Login Cookie Operations: Signing, validation, and thumbprint generation will employ SHA256-based algorithms. This can be changed in the [signature_util] configuration. <pre><code>[signature_util]\nenable_sha256_algo= false\n</code></pre></li> <li>User Account Association Key: In the Associated Accounts API, the key will be generated using HMAC SHA256, leading to a longer key length. To revert, use the [user_account_association] configuration. <pre><code>[user_account_association]\nenable_sha256= false\n</code></pre> In addition to the above mentioned content, a usage of SHA1 was identified in mutual ssl authenticator. SHA1 was being used to generate thumbprints for the client certificates in mutual ssl authenticator. Now, it has been changed to SHA256 by default. The below mentioned configuration can be used to revert the new behaviour to use SHA1 as before. <pre><code>[admin_console.authenticator.mutual_ssl_authenticator.config]\nenableSHA256 = false\n</code></pre></li> </ul> <p>Reverting to SHA1: While the shift to SHA256 significantly enhances security, users needing to revert to SHA1 can do so through specific configurations in the <code>deployment.toml</code> file. However, it's important to note that reverting to less secure algorithms like SHA1 may expose systems to heightened security risks.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#transitioning-to-the-improved-identitydatastoreservice-updating-configuration-for-custom-data-store-classes","title":"Transitioning to the Improved IdentityDataStoreService: Updating Configuration for Custom Data Store Classes","text":"<p>In the Identity Server 7.0.0, we've made some improvements to how identity data stores are accessed. Previously, you might have configured the identity data store through the <code>IdentityStoreEventListener</code>, where the class name of the data store was specified in the event listener's settings.</p> <p>Now, we've introduced a more streamlined approach called the <code>IdentityDataStoreService</code>. This service, functioning as an OSGi service, is dedicated to accessing IdentityDataStores.</p> <p>The class name configuration for the identity data store has been separated from the listener configurations. If you're using a custom data store class, it's crucial to update your <code>deployment.toml</code> file to reflect this choice. This update ensures that your custom class will override the default configuration.</p> <p>To either maintain the previous behavior or use your custom data store, simply follow these steps and update your deployment.toml:</p> <p><pre><code>[identity_datastore]\ndatastore_type = \"&lt;Name of the identityDataStore class&gt;\"\n</code></pre> By making this configuration adjustment, you can ensure that your system aligns with your preferred data store class, whether it's the previous default or a custom class you've implemented. This helps you tailor the system to your specific needs.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#user-configured-alphanumeric-email-otp-type-has-been-reset-to-the-default-numeric-type","title":"User configured alphanumeric Email OTP type has been reset to the default numeric type","text":"<p>In WSO2 IS 7.0.0, the OnlyNumericCharactersForOtp property for the Email OTP authenticator, first introduced in WSO2 IS 5.10.0, has been renamed to useAlphanumericCharactersForOtp.</p> <p>Despite this, the default behavior is preserved to use numeric values for OTP. Users who have previously configured Email OTP with the alphanumeric OTP property set to true are required to adjust the field again to receive alphanumeric OTPs.</p> <p>To reconfigure for alphanumeric OTP, follow these steps:</p> <ul> <li>Navigate to the Email OTP federated IdP you have set up.</li> <li>Go to the <code>Federated Authenticators</code> section.</li> <li>Click to expand the <code>Email OTP Configuration</code>.</li> <li>Locate the <code>Use alphanumeric characters for OTP</code> setting.</li> <li>If alphanumeric OTPs are desired, ensure this field is checked.</li> </ul>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#default-usages-of-md5-replaced-with-sha256","title":"Default usages of MD5 replaced with SHA256","text":"<p>The public certificate for keystores for newly created tenants now will use SHA256 for the signing and digest algorithm by default. Already existing tenant keystores will not be affected by this. To revert this behavior, use the following config in the deployment.toml.</p> <pre><code>[tenant_mgt] \nsigning_alg = \"MD5withRSA\"\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#enhancements-in-otp-configurations","title":"Enhancements in OTP Configurations","text":"<p>In IS 7.0.0, we have introduced updates to the OTP (One-Time Password) configurations to enhance user experience and security. These changes affect various user flows, including password reset, user registration, and user claim update.</p> <p>In versions up to 6.1, the OTP pattern was defined under <code>[identity_mgt.password_reset_sms]</code> with a sms_otp_regex configuration. This approach is no longer supported in IS 7.0.0.</p> <p>The new OTP pattern configuration is more versatile and user-friendly. It includes options for sending OTP instead of UUIDs in email verification links, and customizing the OTP format in terms of length, and the inclusion of uppercase, lowercase, and numeric characters. The configuration is as follows:</p> <pre><code>[identity_mgt.*.otp]\nsend_otp_in_email = false\nuse_uppercase_in_otp = true\nuse_lowercase_in_otp = true\nuse_numeric_in_otp = true\notp_length = 6\n</code></pre> <p>This pattern is applied across various flows, including password reset, user self-registration, lite user registration, user claim updates, email verification upon creation. These changes reflect a shift from link-based to OTP-based email confirmations in various scenarios. The customizable OTP format addresses the need for more user-friendly, type-able codes, moving away from the less user-friendly UUID format. This enhancement caters to a broader range of use cases and improves the overall user experience. For users who wish to retain the previous SMS OTP regex pattern, similar configurations can still be applied in governance connectors for versions below IS 7.0.0. However, for IS 7.0.0 and onwards, the new OTP configuration pattern is recommended for a more streamlined and secure user experience.</p> <p>Covered Flows: The new OTP configurations cover a wide range of user interactions, including self-registration with email confirmation, email verification in user addition, lite user registration, password recovery, email update verification, and the ability to resend codes for all these scenarios.</p> <p>Forced password reset flow</p> <pre><code>[identity_mgt.password_reset_email.otp]\nsend_otp_in_email = false\nuse_uppercase_in_otp = true\nuse_lowercase_in_otp = true\nuse_numeric_in_otp = true\notp_length = 6\n</code></pre> <p>Ask Password flow</p> <pre><code>[identity_mgt.user_onboarding.otp]\nsend_otp_in_email = false\nuse_uppercase_in_otp = true\nuse_lowercase_in_otp = true\nuse_numeric_in_otp = true\notp_length = 6\n</code></pre> <p>User Self-Registration Flow</p> <pre><code>[identity_mgt.user_self_registration.otp]\nsend_otp_in_email = false\nuse_uppercase_in_otp = true\nuse_lowercase_in_otp = true\nuse_numeric_in_otp = true\notp_length = 6\n</code></pre> <p>Lite user Registration Flow <pre><code>[identity_mgt.lite_user_registration.otp]\nsend_otp_in_email = false\nuse_uppercase_in_otp = true\nuse_lowercase_in_otp = true\nuse_numeric_in_otp = true\notp_length = 6\n</code></pre></p> <p>User Claim Update Flow</p> <pre><code>[identity_mgt.user_claim_update.otp] \nsend_otp_in_email = false \nuse_uppercase_in_otp = true \nuse_lowercase_in_otp = true \nuse_numeric_in_otp = true otp_length = 6\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#other","title":"Other","text":"<p>This section contains other changes of IS 7.0.0.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#disabling-scope-validation-for-resource-access-control-is-no-longer-recommended","title":"Disabling Scope Validation for Resource Access Control is No Longer Recommended","text":"<p>With the IS 7.0.0 release, we are no longer recommending to disable the scope validation for the resource access control with the following configuration. From 5.10.0 onwards scope validation has been enabled for the resource access control. When the scope validation is disabled, permissions of the authenticated user were considered for the authorization. With the new version, we are not recommending to disable the scope validation due to security concerns.</p> <pre><code>[resource_access_control]\ndisable_scope_validation = true\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#addition-of-the-j2-file-for-charon-configxml","title":"Addition of the .j2 file for charon-config.xml","text":"<p>IS 7.0.0 introduces charon-config.xml.j2 to the product. If any alterations have been made to the default charon-config.xml, those configurations must be moved to deployment.toml. Replace the following config with the corresponding values in your charon-config.xml.</p> <pre><code>[scim2]\nenable_schema_extension=&lt;user-schema-extension-enabled&gt;\nenable_custom_schema_extension=&lt;custom-user-schema-enabled&gt;\ncustom_user_schema_uri=&lt;custom-user-schema-uri&gt;\nmax_bulk_operations=&lt;bulk-maxOperations&gt;\nmax_bulk_payload=&lt;bulk-maxPayloadSize&gt;\ndocumentation_uri=&lt;documentationUri&gt;\noauth_bearer.primary=&lt;OAuth Bearer Token - primary&gt;\nhttp_basic.primary=&lt;HTTP Basic - primary&gt;\nbasic_auth_documentation_uri=&lt;OAuth Bearer Token - documentationUri&gt;\noauth_bearer_auth_documentation_uri=&lt;documentationUri - documentationUri&gt;\n</code></pre>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#disabling-internal-session-data-cleanup-task","title":"Disabling Internal Session Data Cleanup Task","text":"<p>With IS 7.0.0, the internal session data cleanup task will be disabled by default. This change is implemented as a precautionary measure to enhance system stability and prevent disruptions in production environments.</p> <p>Reason for the Change:</p> <ul> <li>Preventing Outages: Previous versions experienced outages and disruptions in production environments due to table locking issues caused by the session data cleanup process. Disabling this task by default aims to address and prevent such incidents.</li> </ul> <p>Impact of the Update: - Enhanced Stability: With this update, users will benefit from increased system stability, as the likelihood of outages related to session data cleanup is significantly reduced.</p> <p>Enabling the Cleanup Task (for Users who Prefer the Previous Behavior): - Configuration Adjustment Required: Users who wish to maintain the session data cleanup functionality, as observed in earlier versions of IS, can re-enable this feature. This requires a modification to the <code>deployment.toml</code> file. - Required Configuration: To activate the internal session data cleanup task, add the following lines to your <code>deployment.toml</code> file:</p> <pre><code>[session_data.cleanup]\nenable_expired_data_cleanup = true\nclean_logged_out_sessions_at_immediate_cycle = true\nenable_pre_session_data_cleanup = true\n</code></pre> <p>By incorporating this configuration, the system will continue to perform routine session data cleanup, aligning with behaviors observed in earlier versions.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#login-and-logout-consent-are-skipped-by-default-for-newly-created-applications","title":"Login and logout consent are skipped by default for newly created applications","text":"<p>In IS 7.0.0, the default configuration for new applications will now enable 'skip login and logout consent'. Users will not be routinely prompted for consent during regular login and logout sessions. Previously, applications required users to give explicit consent at each login and logout, which, while secure, was often seen as repetitive and inconvenient.</p> <p>Previous Default Setting:</p> <p>Until this update, the default behavior for all new applications mandated users to provide consent at each login and logout event.</p> <p>New Default Behavior:</p> <ul> <li>Skip Consent by Default: The default configuration for new applications will now enable 'skip login and logout consent'.</li> <li>The behavior will not change for existing apps.</li> </ul> <p>Customising Consent Settings</p> <p>If needed, the consent flow can be reinstated by changing the application's advanced settings.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#changing-the-x5ts256-attribute-value-calculation-process-of-the-jwks-response","title":"Changing the x5t#S256 attribute value calculation process of the JWKS response","text":"<p>With the IS 7.0.0 release, when calculating the x5t#S256 attribute value of the JWKS endpoint it will get the sha256 hash/digest (DER encoding) of the certificate which is a 32 byte array and then base64 url encoded. This change has been implemented in order to be aligned with the specification (https://datatracker.ietf.org/doc/html/rfc7515#section-4.1.8)</p> <p>The x5t#S256 attribute value of JWKS response will be changed. Hence the user needs to make the necessary changes from their end if they are using this attribute value for any validation.</p> <p>If the user wants to disable this behavior, they can do it by adding the following configuration into <code>deployment.toml</code>. </p> <pre><code>[oauth.jwks_endpoint]\nis_thumbprint_hexify_required = true\n</code></pre> <p>After disabling this behavior the x5t#S256 attribute value will be calculated by, getting the sha256 hash/digest (DER encoding) of the certificate which is a 32 byte array, convert the array to a hexadecimal string and then base64 url encoded.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#notable-jar-removals","title":"Notable JAR Removals","text":"<p>The transition to the workflow connector resulted in the removal of the following JAR files.</p> <ul> <li>org.objectweb.asm.commons</li> <li>org.objectweb.asm.tree</li> <li>geronimo-spec-jms</li> </ul> <p>If any customizations have been made which use these dependencies, it is essential to include them with your web app.</p>"},{"location":"identity-server/migration-docs/what-has-changed/what-has-changes-6.1.0%20to%207.0.0/#the-audit-tables-used-in-token-clean-up-script-should-be-altered-to-have-the-newly-introduced-column","title":"The audit tables used in token clean up script should be altered to have the newly introduced column","text":"<p>IS 7.0.0 introduces a new column, <code>authorized_organization</code>, to the access token table which may be named differently depending on your configuration but is commonly referred to as <code>idn_oauth2_access_token</code>, enhancing organizational authorization control. Existing audit tables, previously used for token cleanup, need to be altered to include this new column.</p> <pre><code>ALTER TABLE IDN_OAUTH2_ACCESS_TOKEN ADD COLUMN AUTHORIZED_ORGANIZATION varchar(36) NOT NULL DEFAULT 'NONE'\n</code></pre>"}]}